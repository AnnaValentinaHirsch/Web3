*GitHub Repository "levalleux-ludo/decentradocs"*

'''--- BUIDL.md ---
<img src="src/assets/DecentraDocs.png"  width="50px"><span _ngcontent-xre-c122="" class="decentradocs">DecentraDocs</span> is composed of:
- an Angular Application (front-end)
- an Ethereum smart contract
- a NEAR Protocol smart contract

# Building the Angular application

This project was generated with [Angular CLI](https://github.com/angular/angular-cli) version 9.0.6.

## Install dependencies

```console
npm install
```

## Development server

Run `ng serve` for a dev server. Navigate to `http://localhost:4200/`. The app will automatically reload if you change any of the source files.

## Code scaffolding

Run `ng generate component component-name` to generate a new component. You can also use `ng generate directive|pipe|service|class|guard|interface|enum|module`.

## Build

Run `ng build` to build the project. The build artifacts will be stored in the `dist/` directory. Use the `--prod` flag for a production build.

## Running unit tests

Run `ng test` to execute the unit tests via [Karma](https://karma-runner.github.io).

## Running end-to-end tests

Run `ng e2e` to execute the end-to-end tests via [Protractor](http://www.protractortest.org/).

## Deploy on firebase

```console
npm install -g firebase-tools
```
```console
firebase login
```
```console
firebase init
```
```console
ng build --prod
```
```console
firebase deploy
```

## Further help

To get more help on the Angular CLI use `ng help` or go check out the [Angular CLI README](https://github.com/angular/angular-cli/blob/master/README.md).

# Building the Ethereum smart contract

## Install dependencies

```console
npm install
```
 ## Compile contracts
 ```console
 truffle compile
 ```
 ## Local Tests
### Ganache
* install and launch Ganache

* configure workspace:
  * Network ID = 5777
  * RPC Server = http://127.0.0.1:7545

### Contracts Unit tests
```console
 truffle test
 ```

### Local contracts deployment (on Ganache)
* Run Ganache
```console
 truffle migrate
```
 For further deployments (updates), use:
```console
 truffle migrate --reset
```

### Local integration tests

Once you have deployed contracts locally,
* Run front-end and open it in browser.
* Configure Metamask extension to connect Ganache workspace
* Select an account

## Deployment on Testnet (Ropsten)

Get Infura account and set INFURA_URI environnement variable

Example:
```code
set INFURA_URI=https://ropsten.infura.io/v3/9ac45e6f5a124874d1c2f47e545f1c4a
```
Create a wallet with Metamask and set MNEMONIC environnement variable

Example:
```code
set MNEMONIC=lion tiger house plane visitor care policy ...
```

You will need to pay for the contract creation fees.

Be sure the 1st account of this wallet owns a few ETH (>0.05 ETH) on Ropsten (get Ethers using a Ropsten Ethereum Faucet: for instance https://faucet.metamask.io).

```console
truffle migrate --reset --network ropsten
```

# Building the NEAR Protocol smart contract

Near Protocol smart contract is managed in the following repository:
https://github.com/levalleux-ludo/near.decentradocs

'''
'''--- README.md ---
# DecentraDocs

# Welcome to

## What is <img src="src/assets/DecentraDocs.png"  width="50px"><span _ngcontent-xre-c122="" class="decentradocs">DecentraDocs</span>?

<img src="src/assets/DecentraDocs.png"  width="50px"><span _ngcontent-xre-c122="" class="decentradocs">DecentraDocs</span> is a decentralized, application (dAPP) providing a “cloud” opened platform that enables people and organizations to store, share, market and manage all kind of documents in the “PermaWeb”.

In some ways, <img src="src/assets/DecentraDocs.png"  width="50px"><span _ngcontent-xre-c122="" class="decentradocs">DecentraDocs</span> could be seen as a World-Wide Library.

![](src/assets/library-1.jpg)

## What is the **"Permaweb"**?

![](src/assets/Arweave-Permaweb-1.png)

Build on top of the [Arweave network](https://www.arweave.org/#arweave-intro), the **permaweb** is “a global, community-owned web that anyone can contribute to or get paid to maintain.

The **permaweb** looks just like the normal web, but all of its content – from images to full web apps – is permanent, retrieved quickly, and decentralized – forever. Just as the first web connected people over vast distances, the **permaweb** connects people over extremely long periods of time.”

It means the document stored with <img src="src/assets/DecentraDocs.png"  width="50px"><span _ngcontent-xre-c122="" class="decentradocs">DecentraDocs</span> will stay available forever, for every user allowed to access it, without running cost (storage costs are paid upfront, for 100+ years!), without risk of loss, tampering or censorship.

## What does **_decentralized_** mean?

While a traditional storage server may fail, can tamper stored information (intentionally or not) or can deny access, the decentralized storage solutions run without any central authority or single point of failure offering, by design: **resilience**, **immutability**, **censorship resistance** and **openness**.

However, the consensus protocol on the decentralized networks provides a trustless mechanism to certify **authenticity** of the stored information.

![](src/assets/decentralized-1.png)

## Yet another _cloud storage service_? So what?

<img src="src/assets/DecentraDocs.png"  width="50px"><span _ngcontent-xre-c122="" class="decentradocs">DecentraDocs</span> is built on top of:

*   the [![](src/assets/arweave-logo-1-crop.png)Arweave network](https://www.arweave.org/#arweave-intro) providing the storage platform for managed documents (permaweb)
*   a couple of smart contracts (available on both [![](src/assets/eth-logo-1.png)Ethereum](https://ethereum.org) or [![](src/assets/near_logo_crop.png)NEAR Protocol](https://nearprotocol.com) blockchains): providing the document access control and subscription features

![](src/assets/document-information.png)

Hence, it’s not only a world-wide shared hard drive and is quite different from the usual “cloud storage service”, in 2 main aspects:

1.  First, because the decentralized architecture guarantees the provided services and specifications don’t rely on any third-party or central authority
2.  Secondly, because this architecture also provides exclusive document management services like:
    *   ### Version Control

        ![](src/assets/version-control-1.jpg)

        Each time you make a change in a document, then you update your publication in <img src="src/assets/DecentraDocs.png"  width="50px"><span _ngcontent-xre-c122="" class="decentradocs">DecentraDocs</span>, a **new version** of your document will be created

        Every version of your document remains accessible forever, hence you have a complete tracability of your document history

        ![](src/assets/history-revision-1.png)
    *   ### Search Engine and Proof of Authenticty (PoA)

        The **Search Engine** allow to search per:
        *   author
        *   keyword in title
        *   keyword in description![](src/assets/Terminology-document-1600x1024.jpg)

        The **Doc Checker** allows to search in the Library if a given document already exists.

        This feature is very useful when your document has been copied to be shared with others: Given a copy, the doc checker retrieve which publication and which version it corresponds to.

        ![](src/assets/business-paperwork-1.jpg)

        The Doc Checker can also be used to **certify the authenticity** of any document.

        ![](src/assets/authentic-1.jpg)
    *   ### Access Control

        ![](src/assets/32134175-access-granted-denied-stamp.jpg)

        When a document is published, the following option are available:

        *   #### Public

            The document can be downloaded by any user

        *   #### Restricted

            The document can be downloaded only by permissionned users

        After a restricted document is published, the author can still update the authorizations to allow/deny some users.

        When permission is granted to a user for a given document, it applies to all versions (past and future).

    *   ### Subscription/Monetization Services

        ![](src/assets/monetize-1.jpg)

        A restricted document can also be monetized: the author set the price for users to pay if they want to download the publication.

        When a user has subscribed to a given document, it applies to all versions (past and future).

## Why should I need to use <img src="src/assets/DecentraDocs.png"  width="50px"><span _ngcontent-xre-c122="" class="decentradocs">DecentraDocs</span>?

Whatever if you’re an individual or an organization, <img src="src/assets/DecentraDocs.png"  width="50px"><span _ngcontent-xre-c122="" class="decentradocs">DecentraDocs</span> is very useful as soon as you’re interested in:

*   Storing (and share) documents forever,
*   Keeping track of each version,
*   Setting up a subscription process for customers to access your publications,
*   Monetizing your publications,
*   Authentify/certifying any copy of a document.

![](src/assets/Information-Search.jpg)

Here is a non-exhaustive list of what you can (should) manage in <img src="src/assets/DecentraDocs.png"  width="50px"><span _ngcontent-xre-c122="" class="decentradocs">DecentraDocs</span>:

*   Office templates
*   Images
*   Music sheets
*   Artworks
*   Food recipes
*   Product datasheets
*   E-books
*   Regulations
*   Accounting reports
*   KPI reports
*   …

## How much does it cost?

![](src/assets/6a0120a85dcdae970b01a3fcc55683970b-800wi.png)

Blockchain networks need contributions from users in order to work and last in the long term. That’s why there are a few fees when performing transactions.

Here are the fees associated with common actions in <img src="src/assets/DecentraDocs.png"  width="50px"><span _ngcontent-xre-c122="" class="decentradocs">DecentraDocs</span>:

<table _ngcontent-xre-c122="" border="1" cellpadding="10">

<tbody>

<tr _ngcontent-xre-c122="">

<th _ngcontent-xre-c122="">User Role</th>

<th _ngcontent-xre-c122="">Action</th>

<th _ngcontent-xre-c122="">Fees</th>

</tr>

<tr _ngcontent-xre-c122="">

<td _ngcontent-xre-c122="">Document Publisher</td>

<td _ngcontent-xre-c122="">Publish a Document (1st version)</td>

<td _ngcontent-xre-c122="">Arweave gas + Eth/Near gas</td>

</tr>

<tr _ngcontent-xre-c122="">

<td _ngcontent-xre-c122="">Document Publisher</td>

<td _ngcontent-xre-c122="">Publish a new version of a Document</td>

<td _ngcontent-xre-c122="">Arweave gas</td>

</tr>

<tr _ngcontent-xre-c122="">

<td _ngcontent-xre-c122="">Document Publisher</td>

<td _ngcontent-xre-c122="">Change Access Control rules</td>

<td _ngcontent-xre-c122="">Eth/Near gas</td>

</tr>

<tr _ngcontent-xre-c122="">

<td _ngcontent-xre-c122="">Reader</td>

<td _ngcontent-xre-c122="">Browse over documents in Global Library</td>

<td _ngcontent-xre-c122="">no fee</td>

</tr>

<tr _ngcontent-xre-c122="">

<td _ngcontent-xre-c122="">Reader</td>

<td _ngcontent-xre-c122="">Download a given version of a document (assuming the user is authorized or the document is public)</td>

<td _ngcontent-xre-c122="">no fee</td>

</tr>

<tr _ngcontent-xre-c122="">

<td _ngcontent-xre-c122="">Reader</td>

<td _ngcontent-xre-c122="">Subscribe to a Document</td>

<td _ngcontent-xre-c122="">Eth/Near gas</td>

</tr>

</tbody>

</table>

## What would <img src="src/assets/DecentraDocs.png"  width="50px"><span _ngcontent-xre-c122="" class="decentradocs">DecentraDocs</span> feature later?

DecentraDocs is only on its early stage. Here is a list of features that could be added next:

*   Dedicated fungible token to manage subscription fees
*   Dedicated non-fungible token to manage access control
*   Categories of documents to classify in library (for instance: ‘regulations’, ‘food recipes’, ‘templates’, …)
*   Folders (gathering a list of documents), allowing a reader to subscribe to the folder itself
*   Multi-authoring (or delegation)
*   Rating/reviews of publications from subscribers
*   Notification system (for instance, when a new version is available)
*   Document Signing/Approval process
*   Diff viewer (between 2 versions)
*   Advanced Document Workflows
*   …

## Try <img src="src/assets/DecentraDocs.png"  width="50px"><span _ngcontent-xre-c122="" class="decentradocs">DecentraDocs</span> now!

### [Demo 1](https://decentradocs.web.app/)

### [Demo 2](https://decentradocs.levalleuxludo.now.sh/)

## BUIDL IT

See [BUIDL.md](BUIDL.md)

# Credits
thanks to https://www.browserling.com/tools/html-to-markdown for generating this file from HTML

'''
'''--- angular.json ---
{
    "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
    "version": 1,
    "newProjectRoot": "projects",
    "projects": {
        "decentradocs-ng": {
            "projectType": "application",
            "schematics": {
                "@schematics/angular:component": {
                    "style": "scss"
                }
            },
            "root": "",
            "sourceRoot": "src",
            "prefix": "app",
            "architect": {
                "build": {
                    "builder": "@angular-builders/custom-webpack:browser",
                    "options": {
                        "outputPath": "dist/decentradocs-ng",
                        "index": "src/index.html",
                        "main": "src/main.ts",
                        "polyfills": "src/polyfills.ts",
                        "tsConfig": "tsconfig.app.json",
                        "aot": true,
                        "assets": [
                            "src/favicon.ico",
                            "src/assets"
                        ],
                        "styles": [
                            "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
                            "src/styles.scss"
                        ],
                        "scripts": [],
                        "customWebpackConfig": {
                            "path": "./webpack.config.js"
                        }
                    },
                    "configurations": {
                        "production": {
                            "fileReplacements": [{
                                "replace": "src/environments/environment.ts",
                                "with": "src/environments/environment.prod.ts"
                            }],
                            "optimization": true,
                            "outputHashing": "all",
                            "sourceMap": false,
                            "extractCss": true,
                            "namedChunks": false,
                            "extractLicenses": true,
                            "vendorChunk": false,
                            "buildOptimizer": true,
                            "budgets": [{
                                    "type": "initial",
                                    "maximumWarning": "2mb",
                                    "maximumError": "5mb"
                                },
                                {
                                    "type": "anyComponentStyle",
                                    "maximumWarning": "6kb",
                                    "maximumError": "10kb"
                                }
                            ]
                        }
                    }
                },
                "serve": {
                    "builder": "@angular-builders/custom-webpack:dev-server",
                    "options": {
                        "browserTarget": "decentradocs-ng:build",
                        "customWebpackConfig": {
                            "path": "./webpack.config.js"
                        }
                    },
                    "configurations": {
                        "production": {
                            "browserTarget": "decentradocs-ng:build:production"
                        }
                    }
                },
                "extract-i18n": {
                    "builder": "@angular-devkit/build-angular:extract-i18n",
                    "options": {
                        "browserTarget": "decentradocs-ng:build"
                    }
                },
                "test": {
                    "builder": "@angular-devkit/build-angular:karma",
                    "options": {
                        "main": "src/test.ts",
                        "polyfills": "src/polyfills.ts",
                        "tsConfig": "tsconfig.spec.json",
                        "karmaConfig": "karma.conf.js",
                        "assets": [
                            "src/favicon.ico",
                            "src/assets"
                        ],
                        "styles": [
                            "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
                            "src/styles.scss"
                        ],
                        "scripts": []
                    }
                },
                "lint": {
                    "builder": "@angular-devkit/build-angular:tslint",
                    "options": {
                        "tsConfig": [
                            "tsconfig.app.json",
                            "tsconfig.spec.json",
                            "e2e/tsconfig.json"
                        ],
                        "exclude": [
                            "**/node_modules/**"
                        ]
                    }
                },
                "e2e": {
                    "builder": "@angular-devkit/build-angular:protractor",
                    "options": {
                        "protractorConfig": "e2e/protractor.conf.js",
                        "devServerTarget": "decentradocs-ng:serve"
                    },
                    "configurations": {
                        "production": {
                            "devServerTarget": "decentradocs-ng:serve:production"
                        }
                    }
                }
            }
        }
    },
    "defaultProject": "decentradocs-ng",
    "cli": {
        "analytics": false
    }
}
'''
'''--- build/contracts/DVSRegistry.json ---
{
  "contractName": "DVSRegistry",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "docId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "authorized",
          "type": "address[]"
        }
      ],
      "name": "ChangeAuthorized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "docId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "ChangeFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "docId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "authorized",
          "type": "address[]"
        }
      ],
      "name": "Register",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "docId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Subscribe",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PUBLIC_KEY",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "message",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "newMessage",
          "type": "string"
        }
      ],
      "name": "setMessage",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "docId",
          "type": "string"
        }
      ],
      "name": "docExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "docId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "encryptedKey",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "subscriptionFee",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "authorizedAddresses",
          "type": "address[]"
        }
      ],
      "name": "registerDoc",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "docId",
          "type": "string"
        }
      ],
      "name": "getDocumentKey",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "docId",
          "type": "string"
        }
      ],
      "name": "getSubscriptionFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "docId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "subscriptionFee",
          "type": "uint256"
        }
      ],
      "name": "setSubscriptionFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "docId",
          "type": "string"
        }
      ],
      "name": "getAuthor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "docId",
          "type": "string"
        }
      ],
      "name": "getAuthorizedAccounts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "docId",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "authorizedAddresses",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "deniedAddresses",
          "type": "address[]"
        }
      ],
      "name": "setAccess",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "docId",
          "type": "string"
        }
      ],
      "name": "subscribe",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"docId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"authorized\",\"type\":\"address[]\"}],\"name\":\"ChangeAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"docId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"ChangeFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"docId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"authorized\",\"type\":\"address[]\"}],\"name\":\"Register\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"docId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Subscribe\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"PUBLIC_KEY\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"docId\",\"type\":\"string\"}],\"name\":\"docExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"docId\",\"type\":\"string\"}],\"name\":\"getAuthor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"docId\",\"type\":\"string\"}],\"name\":\"getAuthorizedAccounts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"docId\",\"type\":\"string\"}],\"name\":\"getDocumentKey\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"docId\",\"type\":\"string\"}],\"name\":\"getSubscriptionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"message\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"docId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"encryptedKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"subscriptionFee\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"authorizedAddresses\",\"type\":\"address[]\"}],\"name\":\"registerDoc\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"docId\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"authorizedAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"deniedAddresses\",\"type\":\"address[]\"}],\"name\":\"setAccess\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"newMessage\",\"type\":\"string\"}],\"name\":\"setMessage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"docId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"subscriptionFee\",\"type\":\"uint256\"}],\"name\":\"setSubscriptionFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"docId\",\"type\":\"string\"}],\"name\":\"subscribe\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Ludo/Documents/Developpement/ARWEAVE/test-angular/arweave-ng/contracts/DVSRegistry.sol\":\"DVSRegistry\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Ludo/Documents/Developpement/ARWEAVE/test-angular/arweave-ng/contracts/DVSRegistry.sol\":{\"keccak256\":\"0xcc30c0d1fab14399a712d3487d171f807e4f1babbbbdd602d24e812e950b7037\",\"urls\":[\"bzz-raw://533b0a956d627e9755ab085f71b83fc0b72ba6cbec3f7a915ec3b2f0d03930af\",\"dweb:/ipfs/QmUReKNj7U6ePNoST8wsGBX3E4UmALWhKg4Vha1zxnp6ZU\"]}},\"version\":1}",
  "bytecode": "0x60c0604052600b60808190527f48656c6c6f20576f726c6400000000000000000000000000000000000000000060a090815262000040916000919062000067565b503480156200004e57600080fd5b50600180546001600160a01b031916331790556200010c565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620000aa57805160ff1916838001178555620000da565b82800160010185558215620000da579182015b82811115620000da578251825591602001919060010190620000bd565b50620000e8929150620000ec565b5090565b6200010991905b80821115620000e85760008155600101620000f3565b90565b612138806200011c6000396000f3fe6080604052600436106100dc5760003560e01c80638da5cb5b1161007f578063c6ee72bf11610059578063c6ee72bf14610705578063cf7e751f146107d0578063dd34a2cf1461085d578063e21f37ce14610922576100dc565b80638da5cb5b146104c05780639aebd2a1146104d55780639ffb50a11461068a576100dc565b8063350d94d4116100bb578063350d94d4146102c5578063368b87721461035c578063507e7888146103d7578063749b661b14610445576100dc565b8062f714ce146100e1578063030db4451461011c5780632bbabba5146101a6575b600080fd5b3480156100ed57600080fd5b5061011a6004803603604081101561010457600080fd5b50803590602001356001600160a01b0316610937565b005b34801561012857600080fd5b50610131610a3b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016b578181015183820152602001610153565b50505050905090810190601f1680156101985780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101b257600080fd5b5061011a600480360360808110156101c957600080fd5b810190602081018135600160201b8111156101e357600080fd5b8201836020820111156101f557600080fd5b803590602001918460018302840111600160201b8311171561021657600080fd5b919390929091602081019035600160201b81111561023357600080fd5b82018360208201111561024557600080fd5b803590602001918460018302840111600160201b8311171561026657600080fd5b91939092823592604081019060200135600160201b81111561028757600080fd5b82018360208201111561029957600080fd5b803590602001918460208302840111600160201b831117156102ba57600080fd5b509092509050610a74565b3480156102d157600080fd5b50610340600480360360208110156102e857600080fd5b810190602081018135600160201b81111561030257600080fd5b82018360208201111561031457600080fd5b803590602001918460018302840111600160201b8311171561033557600080fd5b509092509050610e11565b604080516001600160a01b039092168252519081900360200190f35b34801561036857600080fd5b5061011a6004803603602081101561037f57600080fd5b810190602081018135600160201b81111561039957600080fd5b8201836020820111156103ab57600080fd5b803590602001918460018302840111600160201b831117156103cc57600080fd5b509092509050610ec6565b61011a600480360360208110156103ed57600080fd5b810190602081018135600160201b81111561040757600080fd5b82018360208201111561041957600080fd5b803590602001918460018302840111600160201b8311171561043a57600080fd5b509092509050610ed7565b34801561045157600080fd5b5061011a6004803603604081101561046857600080fd5b810190602081018135600160201b81111561048257600080fd5b82018360208201111561049457600080fd5b803590602001918460018302840111600160201b831117156104b557600080fd5b91935091503561116b565b3480156104cc57600080fd5b5061034061131a565b3480156104e157600080fd5b5061011a600480360360608110156104f857600080fd5b810190602081018135600160201b81111561051257600080fd5b82018360208201111561052457600080fd5b803590602001918460018302840111600160201b8311171561054557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561059757600080fd5b8201836020820111156105a957600080fd5b803590602001918460208302840111600160201b831117156105ca57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561061957600080fd5b82018360208201111561062b57600080fd5b803590602001918460208302840111600160201b8311171561064c57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061132a945050505050565b34801561069657600080fd5b50610131600480360360208110156106ad57600080fd5b810190602081018135600160201b8111156106c757600080fd5b8201836020820111156106d957600080fd5b803590602001918460018302840111600160201b831117156106fa57600080fd5b50909250905061169e565b34801561071157600080fd5b506107806004803603602081101561072857600080fd5b810190602081018135600160201b81111561074257600080fd5b82018360208201111561075457600080fd5b803590602001918460018302840111600160201b8311171561077557600080fd5b5090925090506118cf565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156107bc5781810151838201526020016107a4565b505050509050019250505060405180910390f35b3480156107dc57600080fd5b5061084b600480360360208110156107f357600080fd5b810190602081018135600160201b81111561080d57600080fd5b82018360208201111561081f57600080fd5b803590602001918460018302840111600160201b8311171561084057600080fd5b5090925090506119cb565b60408051918252519081900360200190f35b34801561086957600080fd5b5061090e6004803603602081101561088057600080fd5b810190602081018135600160201b81111561089a57600080fd5b8201836020820111156108ac57600080fd5b803590602001918460018302840111600160201b831117156108cd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611a76945050505050565b604080519115158252519081900360200190f35b34801561092e57600080fd5b50610131611aeb565b6001546001600160a01b031633146109805760405162461bcd60e51b815260040180806020018281038252602881526020018061202c6028913960400191505060405180910390fd5b30318211156109c05760405162461bcd60e51b8152600401808060200182810382526034815260200180611fc96034913960400191505060405180910390fd5b6040516001600160a01b0382169083156108fc029084906000818181858888f193505050501580156109f6573d6000803e3d6000fd5b506040805183815290516001600160a01b0383169133917f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9181900360200190a35050565b6040518060400160405280601d81526020017f30303030302d30303030302d30303030302d30303030302d303030303000000081525081565b610ab387878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a7692505050565b15610aef5760405162461bcd60e51b81526004018080602001828103825260268152602001806120de6026913960400191505060405180910390fd5b60003390508060028989604051808383808284378083019250505092505050908152602001604051809103902060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550858560038a8a60405180838380828437808301925050509250505090815260200160405180910390209190610b76929190611ead565b50836006898960405180838380828437919091019485525050604051928390036020019092209290925550600090505b82811015610c26576000848483818110610bbc57fe5b905060200201356001600160a01b03169050600160048b8b6040518083838082843791909101948552505060408051602094819003850190206001600160a01b03969096166000908152959093525050909120805460ff1916911515919091179055600101610ba6565b50828260058a8a60405180838380828437808301925050509250505090815260200160405180910390209190610c5d929190611f2b565b50336001600160a01b03167fcf92c0af1412baa9e061faf28dfbcfeec3841ef9c2ad32f08faae31330fb9375898960038c8c604051808383808284378083019250505092505050908152602001604051809103902060068d8d60405180838380828437808301925050509250505090815260200160405180910390205460058e8e60405180838380828437919091019485525050604080519384900360209081018520918501869052608080865285018890529093925082915081016060820160a08301898980828437600083820152601f01601f191690910185810384528854600260001961010060018416150201909116048082526020909101915088908015610daa5780601f10610d7f57610100808354040283529160200191610daa565b820191906000526020600020905b815481529060010190602001808311610d8d57829003601f168201915b50508481038252858181548152602001915080548015610df357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610dd5575b50509850505050505050505060405180910390a25050505050505050565b6000610e5283838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a7692505050565b610e8d5760405162461bcd60e51b81526004018080602001828103825260258152602001806120546025913960400191505060405180910390fd5b600283836040518083838082843791909101948552505060405192839003602001909220546001600160a01b0316925050505b92915050565b610ed260008383611ead565b505050565b60028282604051808383808284379190910194855250506040519283900360200190922054336001600160a01b0390911614801592509050610f4d57506004828260405180838380828437919091019485525050604080516020948190038501902033600090815294529092205460ff16159150505b610f885760405162461bcd60e51b815260040180806020018281038252602f815260200180611ffd602f913960400191505060405180910390fd5b60068282604051808383808284378083019250505092505050908152602001604051809103902054341015610fee5760405162461bcd60e51b815260040180806020018281038252602c8152602001806120b2602c913960400191505060405180910390fd5b60006002838360405180838380828437919091019485525050604051928390036020018320546001600160a01b0316935083926108fc92506006915086908690808383808284379190910194855250506040519283900360200183205480159094029392915060009050818181858888f19350505050158015611075573d6000803e3d6000fd5b50600160048484604051808383808284379190910194855250506040805160209481900385018120336000908152908652829020805460ff191696151596909617909555601f8701849004840285018401905250508382526110f491908590859081908401838280828437600092019190915250339250611b79915050565b336001600160a01b03167fb2c1a860b7618079531666a12a66f643ad0c88aadd23c9d1964d2146813539b284843460405180806020018381526020018281038252858582818152602001925080828437600083820152604051601f909101601f1916909201829003965090945050505050a2505050565b6111aa83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a7692505050565b6111e55760405162461bcd60e51b81526004018080602001828103825260258152602001806120546025913960400191505060405180910390fd5b60028383604051808383808284379190910194855250506040519283900360200190922054336001600160a01b0390911614915061125690505760405162461bcd60e51b81526004018080602001828103825260398152602001806120796039913960400191505060405180910390fd5b8060068484604051808383808284378083019250505092505050908152602001604051809103902081905550336001600160a01b03167f995c2f50a2357ccc0ad2d6fc17e45e986e6b92f4ecc6fb5f633bd7fea7c3a17b84846006878760405180838380828437919091019485525050604080516020948190038501812054948101859052818152908101859052915081905060608101858580828437600083820152604051601f909101601f1916909201829003965090945050505050a2505050565b6001546001600160a01b03165b90565b6002836040518082805190602001908083835b6020831061135c5780518252601f19909201916020918201910161133d565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220546001600160a01b0316331491506113d290505760405162461bcd60e51b81526004018080602001828103825260398152602001806120796039913960400191505060405180910390fd5b60005b82518110156114925760008382815181106113ec57fe5b6020026020010151905060016004866040518082805190602001908083835b6020831061142a5780518252601f19909201916020918201910161140b565b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382019094206001600160a01b0387166000908152915292909220805460ff1916931515939093179092555061148990508582611b79565b506001016113d5565b5060005b81518110156115495760008282815181106114ad57fe5b602002602001015190506004856040518082805190602001908083835b602083106114e95780518252601f1990920191602091820191016114ca565b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382019094206001600160a01b0386166000908152915292909220805460ff191690555061154090508582611c67565b50600101611496565b50336001600160a01b03167f4529acb53914524bf180c507c1eb8eeb81367eb035e966ee8245cdfc55fdb091846005866040518082805190602001908083835b602083106115a85780518252601f199092019160209182019101611589565b51815160209384036101000a60001901801990921691161790529201948552506040805194859003820185208186528651918601919091528551909493508392508282019160608401919087019080838360005b838110156116145781810151838201526020016115fc565b50505050905090810190601f1680156116415780820380516001836020036101000a031916815260200191505b50838103825284818154815260200191508054801561168957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161166b575b505094505050505060405180910390a2505050565b606060028383604051808383808284379190910194855250506040519283900360200190922054336001600160a01b0390911614915081905061171457506004838360405180838380828437919091019485525050604080516020948190038501902033600090815294529092205460ff169150505b80611803575061180360038484604051808383808284379190910194855250506040805160209481900385018120805460026001821615610100026000190190911604601f810187900487028301870190935282825290949093509091508301828280156117c35780601f10611798576101008083540402835291602001916117c3565b820191906000526020600020905b8154815290600101906020018083116117a657829003601f168201915b50505050506040518060400160405280601d81526020017f30303030302d30303030302d30303030302d30303030302d3030303030000000815250611dc6565b156118ba5760038383604051808383808284379190910194855250506040805160209481900385018120805460026001821615610100026000190190911604601f810187900487028301870190935282825290949093509091508301828280156118ae5780601f10611883576101008083540402835291602001916118ae565b820191906000526020600020905b81548152906001019060200180831161189157829003601f168201915b50505050509050610ec0565b50604080516020810190915260008152610ec0565b606061191083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a7692505050565b61194b5760405162461bcd60e51b81526004018080602001828103825260258152602001806120546025913960400191505060405180910390fd5b600583836040518083838082843791909101948552505060408051938490036020908101852080548083028701830190935282865293509091508301828280156119be57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116119a0575b5050505050905092915050565b6000611a0c83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a7692505050565b611a475760405162461bcd60e51b81526004018080602001828103825260258152602001806120546025913960400191505060405180910390fd5b600683836040518083838082843791909101948552505060405192839003602001909220549250505092915050565b6000806002836040518082805190602001908083835b60208310611aab5780518252601f199092019160209182019101611a8c565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220546001600160a01b0316151595945050505050565b6000805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611b715780601f10611b4657610100808354040283529160200191611b71565b820191906000526020600020905b815481529060010190602001808311611b5457829003601f168201915b505050505081565b60006005836040518082805190602001908083835b60208310611bad5780518252601f199092019160209182019101611b8e565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220925060009150505b815463ffffffff82161015611c3557826001600160a01b0316828263ffffffff1681548110611c0b57fe5b6000918252602090912001546001600160a01b03161415611c2d575050611c63565b600101611be0565b508054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0383161790555b5050565b60006005836040518082805190602001908083835b60208310611c9b5780518252601f199092019160209182019101611c7c565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220925060009150505b815463ffffffff82161015611dc057826001600160a01b0316828263ffffffff1681548110611cf957fe5b6000918252602090912001546001600160a01b03161415611db857815482906000198101908110611d2657fe5b9060005260206000200160009054906101000a90046001600160a01b0316828263ffffffff1681548110611d5657fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081805480611d8e57fe5b600082815260209020810160001990810180546001600160a01b031916905501905550611c639050565b600101611cce565b50505050565b6000816040516020018082805190602001908083835b60208310611dfb5780518252601f199092019160209182019101611ddc565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120836040516020018082805190602001908083835b60208310611e695780518252601f199092019160209182019101611e4a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611eee5782800160ff19823516178555611f1b565b82800160010185558215611f1b579182015b82811115611f1b578235825591602001919060010190611f00565b50611f27929150611f8a565b5090565b828054828255906000526020600020908101928215611f7e579160200282015b82811115611f7e5781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190611f4b565b50611f27929150611fa4565b61132791905b80821115611f275760008155600101611f90565b61132791905b80821115611f275780546001600160a01b0319168155600101611faa56fe72657175657374656420616d6f756e7420746f6f206869676820636f6d706172656420746f2061637475616c2062616c616e63656163636f756e742068617320616c7265616479207375627363726962656420746f207468697320646f63756d656e746f6e6c7920636f6e7472616374206f776e65722063616e2063616c6c2074686973206d6574686f647468697320646f63756d656e7420686173206e6f74206265656e20726567697374657265646f6e6c792074686520617574686f72206f662074686520646f63756d656e742063616e206368616e676520617574686f7269736174696f6e736e6f7420656e6f7567682066656520746f2073756273637269626520746f207468697320646f63756d656e746120646f63756d656e742077697468207468697320696420616c726561647920657869737473a265627a7a72315820e3818b51c0f31669bcb5fa08909f5e25b9f91a3614fc002428c43bef21def1bc64736f6c63430005100032",
  "deployedBytecode": "0x6080604052600436106100dc5760003560e01c80638da5cb5b1161007f578063c6ee72bf11610059578063c6ee72bf14610705578063cf7e751f146107d0578063dd34a2cf1461085d578063e21f37ce14610922576100dc565b80638da5cb5b146104c05780639aebd2a1146104d55780639ffb50a11461068a576100dc565b8063350d94d4116100bb578063350d94d4146102c5578063368b87721461035c578063507e7888146103d7578063749b661b14610445576100dc565b8062f714ce146100e1578063030db4451461011c5780632bbabba5146101a6575b600080fd5b3480156100ed57600080fd5b5061011a6004803603604081101561010457600080fd5b50803590602001356001600160a01b0316610937565b005b34801561012857600080fd5b50610131610a3b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016b578181015183820152602001610153565b50505050905090810190601f1680156101985780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101b257600080fd5b5061011a600480360360808110156101c957600080fd5b810190602081018135600160201b8111156101e357600080fd5b8201836020820111156101f557600080fd5b803590602001918460018302840111600160201b8311171561021657600080fd5b919390929091602081019035600160201b81111561023357600080fd5b82018360208201111561024557600080fd5b803590602001918460018302840111600160201b8311171561026657600080fd5b91939092823592604081019060200135600160201b81111561028757600080fd5b82018360208201111561029957600080fd5b803590602001918460208302840111600160201b831117156102ba57600080fd5b509092509050610a74565b3480156102d157600080fd5b50610340600480360360208110156102e857600080fd5b810190602081018135600160201b81111561030257600080fd5b82018360208201111561031457600080fd5b803590602001918460018302840111600160201b8311171561033557600080fd5b509092509050610e11565b604080516001600160a01b039092168252519081900360200190f35b34801561036857600080fd5b5061011a6004803603602081101561037f57600080fd5b810190602081018135600160201b81111561039957600080fd5b8201836020820111156103ab57600080fd5b803590602001918460018302840111600160201b831117156103cc57600080fd5b509092509050610ec6565b61011a600480360360208110156103ed57600080fd5b810190602081018135600160201b81111561040757600080fd5b82018360208201111561041957600080fd5b803590602001918460018302840111600160201b8311171561043a57600080fd5b509092509050610ed7565b34801561045157600080fd5b5061011a6004803603604081101561046857600080fd5b810190602081018135600160201b81111561048257600080fd5b82018360208201111561049457600080fd5b803590602001918460018302840111600160201b831117156104b557600080fd5b91935091503561116b565b3480156104cc57600080fd5b5061034061131a565b3480156104e157600080fd5b5061011a600480360360608110156104f857600080fd5b810190602081018135600160201b81111561051257600080fd5b82018360208201111561052457600080fd5b803590602001918460018302840111600160201b8311171561054557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561059757600080fd5b8201836020820111156105a957600080fd5b803590602001918460208302840111600160201b831117156105ca57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561061957600080fd5b82018360208201111561062b57600080fd5b803590602001918460208302840111600160201b8311171561064c57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061132a945050505050565b34801561069657600080fd5b50610131600480360360208110156106ad57600080fd5b810190602081018135600160201b8111156106c757600080fd5b8201836020820111156106d957600080fd5b803590602001918460018302840111600160201b831117156106fa57600080fd5b50909250905061169e565b34801561071157600080fd5b506107806004803603602081101561072857600080fd5b810190602081018135600160201b81111561074257600080fd5b82018360208201111561075457600080fd5b803590602001918460018302840111600160201b8311171561077557600080fd5b5090925090506118cf565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156107bc5781810151838201526020016107a4565b505050509050019250505060405180910390f35b3480156107dc57600080fd5b5061084b600480360360208110156107f357600080fd5b810190602081018135600160201b81111561080d57600080fd5b82018360208201111561081f57600080fd5b803590602001918460018302840111600160201b8311171561084057600080fd5b5090925090506119cb565b60408051918252519081900360200190f35b34801561086957600080fd5b5061090e6004803603602081101561088057600080fd5b810190602081018135600160201b81111561089a57600080fd5b8201836020820111156108ac57600080fd5b803590602001918460018302840111600160201b831117156108cd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611a76945050505050565b604080519115158252519081900360200190f35b34801561092e57600080fd5b50610131611aeb565b6001546001600160a01b031633146109805760405162461bcd60e51b815260040180806020018281038252602881526020018061202c6028913960400191505060405180910390fd5b30318211156109c05760405162461bcd60e51b8152600401808060200182810382526034815260200180611fc96034913960400191505060405180910390fd5b6040516001600160a01b0382169083156108fc029084906000818181858888f193505050501580156109f6573d6000803e3d6000fd5b506040805183815290516001600160a01b0383169133917f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9181900360200190a35050565b6040518060400160405280601d81526020017f30303030302d30303030302d30303030302d30303030302d303030303000000081525081565b610ab387878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a7692505050565b15610aef5760405162461bcd60e51b81526004018080602001828103825260268152602001806120de6026913960400191505060405180910390fd5b60003390508060028989604051808383808284378083019250505092505050908152602001604051809103902060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550858560038a8a60405180838380828437808301925050509250505090815260200160405180910390209190610b76929190611ead565b50836006898960405180838380828437919091019485525050604051928390036020019092209290925550600090505b82811015610c26576000848483818110610bbc57fe5b905060200201356001600160a01b03169050600160048b8b6040518083838082843791909101948552505060408051602094819003850190206001600160a01b03969096166000908152959093525050909120805460ff1916911515919091179055600101610ba6565b50828260058a8a60405180838380828437808301925050509250505090815260200160405180910390209190610c5d929190611f2b565b50336001600160a01b03167fcf92c0af1412baa9e061faf28dfbcfeec3841ef9c2ad32f08faae31330fb9375898960038c8c604051808383808284378083019250505092505050908152602001604051809103902060068d8d60405180838380828437808301925050509250505090815260200160405180910390205460058e8e60405180838380828437919091019485525050604080519384900360209081018520918501869052608080865285018890529093925082915081016060820160a08301898980828437600083820152601f01601f191690910185810384528854600260001961010060018416150201909116048082526020909101915088908015610daa5780601f10610d7f57610100808354040283529160200191610daa565b820191906000526020600020905b815481529060010190602001808311610d8d57829003601f168201915b50508481038252858181548152602001915080548015610df357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610dd5575b50509850505050505050505060405180910390a25050505050505050565b6000610e5283838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a7692505050565b610e8d5760405162461bcd60e51b81526004018080602001828103825260258152602001806120546025913960400191505060405180910390fd5b600283836040518083838082843791909101948552505060405192839003602001909220546001600160a01b0316925050505b92915050565b610ed260008383611ead565b505050565b60028282604051808383808284379190910194855250506040519283900360200190922054336001600160a01b0390911614801592509050610f4d57506004828260405180838380828437919091019485525050604080516020948190038501902033600090815294529092205460ff16159150505b610f885760405162461bcd60e51b815260040180806020018281038252602f815260200180611ffd602f913960400191505060405180910390fd5b60068282604051808383808284378083019250505092505050908152602001604051809103902054341015610fee5760405162461bcd60e51b815260040180806020018281038252602c8152602001806120b2602c913960400191505060405180910390fd5b60006002838360405180838380828437919091019485525050604051928390036020018320546001600160a01b0316935083926108fc92506006915086908690808383808284379190910194855250506040519283900360200183205480159094029392915060009050818181858888f19350505050158015611075573d6000803e3d6000fd5b50600160048484604051808383808284379190910194855250506040805160209481900385018120336000908152908652829020805460ff191696151596909617909555601f8701849004840285018401905250508382526110f491908590859081908401838280828437600092019190915250339250611b79915050565b336001600160a01b03167fb2c1a860b7618079531666a12a66f643ad0c88aadd23c9d1964d2146813539b284843460405180806020018381526020018281038252858582818152602001925080828437600083820152604051601f909101601f1916909201829003965090945050505050a2505050565b6111aa83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a7692505050565b6111e55760405162461bcd60e51b81526004018080602001828103825260258152602001806120546025913960400191505060405180910390fd5b60028383604051808383808284379190910194855250506040519283900360200190922054336001600160a01b0390911614915061125690505760405162461bcd60e51b81526004018080602001828103825260398152602001806120796039913960400191505060405180910390fd5b8060068484604051808383808284378083019250505092505050908152602001604051809103902081905550336001600160a01b03167f995c2f50a2357ccc0ad2d6fc17e45e986e6b92f4ecc6fb5f633bd7fea7c3a17b84846006878760405180838380828437919091019485525050604080516020948190038501812054948101859052818152908101859052915081905060608101858580828437600083820152604051601f909101601f1916909201829003965090945050505050a2505050565b6001546001600160a01b03165b90565b6002836040518082805190602001908083835b6020831061135c5780518252601f19909201916020918201910161133d565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220546001600160a01b0316331491506113d290505760405162461bcd60e51b81526004018080602001828103825260398152602001806120796039913960400191505060405180910390fd5b60005b82518110156114925760008382815181106113ec57fe5b6020026020010151905060016004866040518082805190602001908083835b6020831061142a5780518252601f19909201916020918201910161140b565b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382019094206001600160a01b0387166000908152915292909220805460ff1916931515939093179092555061148990508582611b79565b506001016113d5565b5060005b81518110156115495760008282815181106114ad57fe5b602002602001015190506004856040518082805190602001908083835b602083106114e95780518252601f1990920191602091820191016114ca565b51815160209384036101000a6000190180199092169116179052920194855250604080519485900382019094206001600160a01b0386166000908152915292909220805460ff191690555061154090508582611c67565b50600101611496565b50336001600160a01b03167f4529acb53914524bf180c507c1eb8eeb81367eb035e966ee8245cdfc55fdb091846005866040518082805190602001908083835b602083106115a85780518252601f199092019160209182019101611589565b51815160209384036101000a60001901801990921691161790529201948552506040805194859003820185208186528651918601919091528551909493508392508282019160608401919087019080838360005b838110156116145781810151838201526020016115fc565b50505050905090810190601f1680156116415780820380516001836020036101000a031916815260200191505b50838103825284818154815260200191508054801561168957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161166b575b505094505050505060405180910390a2505050565b606060028383604051808383808284379190910194855250506040519283900360200190922054336001600160a01b0390911614915081905061171457506004838360405180838380828437919091019485525050604080516020948190038501902033600090815294529092205460ff169150505b80611803575061180360038484604051808383808284379190910194855250506040805160209481900385018120805460026001821615610100026000190190911604601f810187900487028301870190935282825290949093509091508301828280156117c35780601f10611798576101008083540402835291602001916117c3565b820191906000526020600020905b8154815290600101906020018083116117a657829003601f168201915b50505050506040518060400160405280601d81526020017f30303030302d30303030302d30303030302d30303030302d3030303030000000815250611dc6565b156118ba5760038383604051808383808284379190910194855250506040805160209481900385018120805460026001821615610100026000190190911604601f810187900487028301870190935282825290949093509091508301828280156118ae5780601f10611883576101008083540402835291602001916118ae565b820191906000526020600020905b81548152906001019060200180831161189157829003601f168201915b50505050509050610ec0565b50604080516020810190915260008152610ec0565b606061191083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a7692505050565b61194b5760405162461bcd60e51b81526004018080602001828103825260258152602001806120546025913960400191505060405180910390fd5b600583836040518083838082843791909101948552505060408051938490036020908101852080548083028701830190935282865293509091508301828280156119be57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116119a0575b5050505050905092915050565b6000611a0c83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a7692505050565b611a475760405162461bcd60e51b81526004018080602001828103825260258152602001806120546025913960400191505060405180910390fd5b600683836040518083838082843791909101948552505060405192839003602001909220549250505092915050565b6000806002836040518082805190602001908083835b60208310611aab5780518252601f199092019160209182019101611a8c565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220546001600160a01b0316151595945050505050565b6000805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611b715780601f10611b4657610100808354040283529160200191611b71565b820191906000526020600020905b815481529060010190602001808311611b5457829003601f168201915b505050505081565b60006005836040518082805190602001908083835b60208310611bad5780518252601f199092019160209182019101611b8e565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220925060009150505b815463ffffffff82161015611c3557826001600160a01b0316828263ffffffff1681548110611c0b57fe5b6000918252602090912001546001600160a01b03161415611c2d575050611c63565b600101611be0565b508054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0383161790555b5050565b60006005836040518082805190602001908083835b60208310611c9b5780518252601f199092019160209182019101611c7c565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220925060009150505b815463ffffffff82161015611dc057826001600160a01b0316828263ffffffff1681548110611cf957fe5b6000918252602090912001546001600160a01b03161415611db857815482906000198101908110611d2657fe5b9060005260206000200160009054906101000a90046001600160a01b0316828263ffffffff1681548110611d5657fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081805480611d8e57fe5b600082815260209020810160001990810180546001600160a01b031916905501905550611c639050565b600101611cce565b50505050565b6000816040516020018082805190602001908083835b60208310611dfb5780518252601f199092019160209182019101611ddc565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120836040516020018082805190602001908083835b60208310611e695780518252601f199092019160209182019101611e4a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611eee5782800160ff19823516178555611f1b565b82800160010185558215611f1b579182015b82811115611f1b578235825591602001919060010190611f00565b50611f27929150611f8a565b5090565b828054828255906000526020600020908101928215611f7e579160200282015b82811115611f7e5781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190611f4b565b50611f27929150611fa4565b61132791905b80821115611f275760008155600101611f90565b61132791905b80821115611f275780546001600160a01b0319168155600101611faa56fe72657175657374656420616d6f756e7420746f6f206869676820636f6d706172656420746f2061637475616c2062616c616e63656163636f756e742068617320616c7265616479207375627363726962656420746f207468697320646f63756d656e746f6e6c7920636f6e7472616374206f776e65722063616e2063616c6c2074686973206d6574686f647468697320646f63756d656e7420686173206e6f74206265656e20726567697374657265646f6e6c792074686520617574686f72206f662074686520646f63756d656e742063616e206368616e676520617574686f7269736174696f6e736e6f7420656e6f7567682066656520746f2073756273637269626520746f207468697320646f63756d656e746120646f63756d656e742077697468207468697320696420616c726561647920657869737473a265627a7a72315820e3818b51c0f31669bcb5fa08909f5e25b9f91a3614fc002428c43bef21def1bc64736f6c63430005100032",
  "sourceMap": "354:37:0:-;326:7367;354:37;;326:7367;354:37;;;;;;;;;;-1:-1:-1;;354:37:0;;:::i;:::-;;1599:59;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1631:6:0;:19;;-1:-1:-1;;;;;;1631:19:0;1640:10;1631:19;;;326:7367;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;326:7367:0;;;-1:-1:-1;326:7367:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "326:7367:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7341:347;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7341:347:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7341:347:0;;;;;;-1:-1:-1;;;;;7341:347:0;;:::i;:::-;;427:67;;8:9:-1;5:2;;;30:1;27;20:12;5:2;427:67:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;427:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:953;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2219:953:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2219:953:0;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2219:953:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2219:953:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2219:953:0;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2219:953:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2219:953:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2219:953:0;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2219:953:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2219:953:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;2219:953:0;;-1:-1:-1;2219:953:0;-1:-1:-1;2219:953:0;:::i;4333:195::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4333:195:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4333:195:0;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4333:195:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4333:195:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;4333:195:0;;-1:-1:-1;4333:195:0;-1:-1:-1;4333:195:0;:::i;:::-;;;;-1:-1:-1;;;;;4333:195:0;;;;;;;;;;;;;;1753:96;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1753:96:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1753:96:0;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1753:96:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1753:96:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;1753:96:0;;-1:-1:-1;1753:96:0;-1:-1:-1;1753:96:0;:::i;6567:766::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6567:766:0;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;6567:766:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6567:766:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;6567:766:0;;-1:-1:-1;6567:766:0;-1:-1:-1;6567:766:0;:::i;3833:492::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3833:492:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3833:492:0;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3833:492:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3833:492:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3833:492:0;;-1:-1:-1;3833:492:0;-1:-1:-1;3833:492:0;;:::i;1666:79::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1666:79:0;;;:::i;4776:917::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4776:917:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4776:917:0;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4776:917:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4776:917:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4776:917:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4776:917:0;;;;;;;;-1:-1:-1;4776:917:0;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;4776:917:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4776:917:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4776:917:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4776:917:0;;;;;;;;-1:-1:-1;4776:917:0;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;4776:917:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4776:917:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4776:917:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4776:917:0;;-1:-1:-1;4776:917:0;;-1:-1:-1;;;;;4776:917:0:i;3180:420::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3180:420:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3180:420:0;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3180:420:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3180:420:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;3180:420:0;;-1:-1:-1;3180:420:0;-1:-1:-1;3180:420:0;:::i;4536:232::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4536:232:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4536:232:0;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4536:232:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4536:232:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;4536:232:0;;-1:-1:-1;4536:232:0;-1:-1:-1;4536:232:0;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4536:232:0;;;;;;;;;;;;;;;;;3608:217;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3608:217:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3608:217:0;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3608:217:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3608:217:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;3608:217:0;;-1:-1:-1;3608:217:0;-1:-1:-1;3608:217:0;:::i;:::-;;;;;;;;;;;;;;;;1857:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1857:163:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1857:163:0;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1857:163:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1857:163:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1857:163:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1857:163:0;;-1:-1:-1;1857:163:0;;-1:-1:-1;;;;;1857:163:0:i;:::-;;;;;;;;;;;;;;;;;;354:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;354:37:0;;;:::i;7341:347::-;571:6;;-1:-1:-1;;;;;571:6:0;557:10;:20;535:110;;;;-1:-1:-1;;;535:110:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7465:4;7457:21;7447:31;;;7425:133;;;;-1:-1:-1;;;7425:133:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7569:19;;-1:-1:-1;;;;;7569:11:0;;;:19;;;;;7581:6;;7569:19;;;;7581:6;7569:11;:19;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;7604:76:0;;;;;;;;-1:-1:-1;;;;;7604:76:0;;;7625:10;;7604:76;;;;;;;;;7341:347;;:::o;427:67::-;;;;;;;;;;;;;;;;;;;:::o;2219:953::-;2430:16;2440:5;;2430:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2430:9:0;;-1:-1:-1;;;2430:16:0:i;:::-;2429:17;2421:68;;;;-1:-1:-1;;;2421:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2500:14;2517:10;2500:27;;2563:6;2538:15;2554:5;;2538:22;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;2538:22:0;;;;;;;;;;;;;;;;;;;:31;;;;;-1:-1:-1;;;;;2538:31:0;;;;;-1:-1:-1;;;;;2538:31:0;;;;;;2611:12;;2580:21;2602:5;;2580:28;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;2580:28:0;;;;;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;2668:15;2634:24;2659:5;;2634:31;;;;;30:3:-1;22:6;14;1:33;45:16;;;;2634:31:0;;;-1:-1:-1;;2634:31:0;;;;;;;;;;;:49;;;;-1:-1:-1;2699:9:0;;-1:-1:-1;2694:188:0;2714:30;;;2694:188;;;2766:15;2784:19;;2804:1;2784:22;;;;;;;;;;;;;-1:-1:-1;;;;;2784:22:0;2766:40;;2866:4;2821:26;2848:5;;2821:33;;;;;30:3:-1;22:6;14;1:33;45:16;;;;2821:33:0;;;-1:-1:-1;;2821:33:0;;;;;;;;;;;;-1:-1:-1;;;;;2821:42:0;;;;;;;;;;;;-1:-1:-1;;2821:42:0;;;:49;;-1:-1:-1;;2821:49:0;;;;;;;;;;-1:-1:-1;2746:3:0;2694:188;;;;2933:19;;2892:31;2924:5;;2892:38;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;2892:38:0;;;;;;;;;;;;;;;;;;:60;;;;;;;:::i;:::-;;2989:10;-1:-1:-1;;;;;2968:196:0;;3012:5;;3030:21;3052:5;;3030:28;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;3030:28:0;;;;;;;;;;;;;;;;;;3071:24;3096:5;;3071:31;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;3071:31:0;;;;;;;;;;;;;;;;;;;3115;3147:5;;3115:38;;;;;30:3:-1;22:6;14;1:33;45:16;;;;3115:38:0;;;-1:-1:-1;;3115:38:0;;;;;;;;;;;;;2968:196;;;;;;;;;;;;;;;3115:38;;;-1:-1:-1;3115:38:0;;-1:-1:-1;2968:196:0;;;;;;;;;;;;;1:33:-1;99:1;81:16;;;74:27;137:4;117:14;-1:-1;;113:30;157:16;;;2968:196:0;;;;;;;;-1:-1:-1;;2968:196:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;2968:196:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2968:196:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:953;;;;;;;;:::o;4333:195::-;4398:7;4424:16;4434:5;;4424:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4424:9:0;;-1:-1:-1;;;4424:16:0:i;:::-;4416:66;;;;-1:-1:-1;;;4416:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4498:15;4514:5;;4498:22;;;;;30:3:-1;22:6;14;1:33;45:16;;;;4498:22:0;;;-1:-1:-1;;4498:22:0;;;;;;;;;;;;-1:-1:-1;;;;;4498:22:0;;-1:-1:-1;;;4333:195:0;;;;;:::o;1753:96::-;1821:20;:7;1831:10;;1821:20;:::i;:::-;;1753:96;;:::o;6567:766::-;6674:15;6690:5;;6674:22;;;;;30:3:-1;22:6;14;1:33;45:16;;;;6674:22:0;;;-1:-1:-1;;6674:22:0;;;;;;;;;;;;6660:10;-1:-1:-1;;;;;6674:22:0;;;6660:36;;;;-1:-1:-1;6660:36:0;-1:-1:-1;6659:105:0;;;6719:26;6746:5;;6719:33;;;;;30:3:-1;22:6;14;1:33;45:16;;;;6719:33:0;;;-1:-1:-1;;6719:33:0;;;;;;;;;;;;6753:10;6719:45;;;;;;;;;;;;6718:46;;-1:-1:-1;;6659:105:0;6637:202;;;;-1:-1:-1;;;6637:202:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6885:24;6910:5;;6885:31;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;6885:31:0;;;;;;;;;;;;;;;;;;;6872:9;:44;;6850:138;;;;-1:-1:-1;;;6850:138:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6999:22;7040:15;7056:5;;7040:22;;;;;30:3:-1;22:6;14;1:33;45:16;;;;7040:22:0;;;-1:-1:-1;;7040:22:0;;;;;;;;;;;-1:-1:-1;;;;;7040:22:0;;-1:-1:-1;7040:22:0;;7075:48;;-1:-1:-1;7091:24:0;;-1:-1:-1;7116:5:0;;;;7040:22;7116:5;;;;7040:22;1:33:-1;45:16;;;;7091:31:0;;;-1:-1:-1;;7091:31:0;;;;;;;;;;;7075:48;;;;;;7091:31;;-1:-1:-1;7075:48:0;;-1:-1:-1;7091:31:0;7075:48;7091:31;;7075:48;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7075:48:0;7182:4;7134:26;7161:5;;7134:33;;;;;30:3:-1;22:6;14;1:33;45:16;;;;7134:33:0;;;-1:-1:-1;;7134:33:0;;;;;;;;;;;;7168:10;7134:45;;;;;;;;;;:52;;-1:-1:-1;;7134:52:0;;;;;;;;;;;7197:29;;;;;;;;;;;;;;-1:-1:-1;;7197:29:0;;;;;7134:33;7208:5;;7197:29;;;;;;7208:5;7197:29;;7208:5;7197:29;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;7215:10:0;;-1:-1:-1;7197:10:0;;-1:-1:-1;;7197:29:0:i;:::-;7264:10;-1:-1:-1;;;;;7242:83:0;;7287:5;;7305:9;7242:83;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;7242:83:0;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;7242:83:0;;;;-1:-1:-1;7242:83:0;;-1:-1:-1;;;;;7242:83:0;6567:766;;;:::o;3833:492::-;3936:16;3946:5;;3936:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3936:9:0;;-1:-1:-1;;;3936:16:0:i;:::-;3928:66;;;;-1:-1:-1;;;3928:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4041:15;4057:5;;4041:22;;;;;30:3:-1;22:6;14;1:33;45:16;;;;4041:22:0;;;-1:-1:-1;;4041:22:0;;;;;;;;;;;;4027:10;-1:-1:-1;;;;;4041:22:0;;;4027:36;;-1:-1:-1;4005:143:0;;-1:-1:-1;4005:143:0;;;-1:-1:-1;;;4005:143:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4191:15;4157:24;4182:5;;4157:31;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;4157:31:0;;;;;;;;;;;;;;;;;;:49;;;;4240:10;-1:-1:-1;;;;;4220:97:0;;4261:5;;4277:24;4302:5;;4277:31;;;;;30:3:-1;22:6;14;1:33;45:16;;;;4277:31:0;;;-1:-1:-1;;4277:31:0;;;;;;;;;;;;;4220:97;;;;;;;;;;;;;;;4277:31;-1:-1:-1;4277:31:0;;-1:-1:-1;4220:97:0;;;;;;;;1:33:-1;99:1;81:16;;;74:27;4220:97:0;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;4220:97:0;;;;-1:-1:-1;4220:97:0;;-1:-1:-1;;;;;4220:97:0;3833:492;;;:::o;1666:79::-;1731:6;;-1:-1:-1;;;;;1731:6:0;1666:79;;:::o;4776:917::-;4976:15;4992:5;4976:22;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;4976:22:0;;;;;-1:-1:-1;4976:22:0;;;;;;;;;;;-1:-1:-1;;;;;4976:22:0;4962:10;:36;;-1:-1:-1;4940:143:0;;-1:-1:-1;4940:143:0;;;-1:-1:-1;;;4940:143:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5099:6;5094:226;5115:19;:26;5111:1;:30;5094:226;;;5163:15;5181:19;5201:1;5181:22;;;;;;;;;;;;;;5163:40;;5263:4;5218:26;5245:5;5218:33;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;5218::0;;;;;-1:-1:-1;5218:33:0;;;;;;;;;;;;-1:-1:-1;;;;;5218:42:0;;-1:-1:-1;5218:42:0;;;;;;;;;:49;;-1:-1:-1;;5218:49:0;;;;;;;;;;;-1:-1:-1;5282:26:0;;-1:-1:-1;5293:5:0;5218:42;5282:10;:26::i;:::-;-1:-1:-1;5143:3:0;;5094:226;;;-1:-1:-1;5335:6:0;5330:221;5351:15;:22;5347:1;:26;5330:221;;;5395:15;5413;5429:1;5413:18;;;;;;;;;;;;;;5395:36;;5453:26;5480:5;5453:33;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;5453::0;;;;;-1:-1:-1;5453:33:0;;;;;;;;;;;;-1:-1:-1;;;;;5453:42:0;;-1:-1:-1;5453:42:0;;;;;;;;;5446:49;;-1:-1:-1;;5446:49:0;;;-1:-1:-1;5510:29:0;;-1:-1:-1;5524:5:0;5453:42;5510:13;:29::i;:::-;-1:-1:-1;5375:3:0;;5330:221;;;;5595:10;-1:-1:-1;;;;;5566:119:0;;5618:5;5636:31;5668:5;5636:38;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;5636:38:0;;;;;-1:-1:-1;5636:38:0;;;;;;;;;;;5566:119;;;;;;;;;;;;;;5636:38;;;-1:-1:-1;5636:38:0;;-1:-1:-1;5566:119:0;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5566:119:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5566:119:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4776:917;;;:::o;3180:420::-;3277:13;3324:15;3340:5;;3324:22;;;;;30:3:-1;22:6;14;1:33;45:16;;;;3324:22:0;;;-1:-1:-1;;3324:22:0;;;;;;;;;;;;3310:10;-1:-1:-1;;;;;3324:22:0;;;3310:36;;-1:-1:-1;3310:36:0;;-1:-1:-1;3309:104:0;;;3368:26;3395:5;;3368:33;;;;;30:3:-1;22:6;14;1:33;45:16;;;;3368:33:0;;;-1:-1:-1;;3368:33:0;;;;;;;;;;;;3402:10;3368:45;;;;;;;;;;;;;-1:-1:-1;;3309:104:0;:181;;;;3434:56;3449:21;3471:5;;3449:28;;;;;30:3:-1;22:6;14;1:33;45:16;;;;3449:28:0;;;-1:-1:-1;;3449:28:0;;;;;;;;;;;;3434:56;;;;;;;;;-1:-1:-1;;3434:56:0;;;;;;;;;;;;;;;;;;;;;;;3449:28;;;;-1:-1:-1;3434:56:0;;-1:-1:-1;3434:56:0;;3449:28;3434:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3479:10;;;;;;;;;;;;;;;;;3434:14;:56::i;:::-;3306:287;;;3513:21;3535:5;;3513:28;;;;;30:3:-1;22:6;14;1:33;45:16;;;;3513:28:0;;;-1:-1:-1;;3513:28:0;;;;;;;;;;;;3506:35;;;;;;;;;-1:-1:-1;;3506:35:0;;;;;;;;;;;;;;;;;;;;;;;3513:28;;;;-1:-1:-1;3506:35:0;;-1:-1:-1;3506:35:0;;3513:28;3506:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3306:287;-1:-1:-1;3572:9:0;;;;;;;;;-1:-1:-1;3572:9:0;;;;4536:232;4613:16;4648;4658:5;;4648:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4648:9:0;;-1:-1:-1;;;4648:16:0:i;:::-;4640:66;;;;-1:-1:-1;;;4640:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4722:31;4754:5;;4722:38;;;;;30:3:-1;22:6;14;1:33;45:16;;;;4722:38:0;;;-1:-1:-1;;4722:38:0;;;;;;;;;;;;;4715:45;;;;;;;;;;;;;;;4722:38;-1:-1:-1;4715:45:0;;-1:-1:-1;4715:45:0;;4722:38;4715:45;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4715:45:0;;;;;;;;;;;;;;;;;;;;;;;4536:232;;;;:::o;3608:217::-;3682:11;3712:16;3722:5;;3712:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3712:9:0;;-1:-1:-1;;;3712:16:0:i;:::-;3704:66;;;;-1:-1:-1;;;3704:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3786:24;3811:5;;3786:31;;;;;30:3:-1;22:6;14;1:33;45:16;;;;3786:31:0;;;-1:-1:-1;;3786:31:0;;;;;;;;;;;;;-1:-1:-1;;;3608:217:0;;;;:::o;1857:163::-;1918:4;1935:14;1952:15;1968:5;1952:22;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1952:22:0;;;;;-1:-1:-1;1952:22:0;;;;;;;;;;;-1:-1:-1;;;;;1952:22:0;1992:20;;;1857:163;-1:-1:-1;;;;;1857:163:0:o;354:37::-;;;;;;;;;;;;;;;-1:-1:-1;;354:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6188:371::-;6263:27;6293:31;6325:5;6293:38;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;6293:38:0;;;;;-1:-1:-1;6293:38:0;;;;;;;;;;;-1:-1:-1;;;;;6340:161:0;6363:16;;6359:20;;;;6340:161;;;6417:7;-1:-1:-1;;;;;6401:23:0;:9;6411:1;6401:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6401:12:0;:23;6397:95;;;6474:7;;;;6397:95;6381:3;;6340:161;;;-1:-1:-1;27:10;;39:1;23:18;;45:23;;-1:-1;6509:23:0;;;;;;;;;;-1:-1:-1;;;;;;6509:23:0;-1:-1:-1;;;;;6509:23:0;;;;;6188:371;;;:::o;5701:479::-;5779:27;5809:31;5841:5;5809:38;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;5809:38:0;;;;;-1:-1:-1;5809:38:0;;;;;;;;;;;-1:-1:-1;;;;;5856:317:0;5879:16;;5875:20;;;;5856:317;;;5933:7;-1:-1:-1;;;;;5917:23:0;:9;5927:1;5917:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5917:12:0;:23;5913:251;;;6037:16;;6027:9;;-1:-1:-1;;6037:20:0;;;6027:31;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6027:31:0;6012:9;6022:1;6012:12;;;;;;;;;;;;;;;;;;:46;;;;;-1:-1:-1;;;;;6012:46:0;;;;;-1:-1:-1;;;;;6012:46:0;;;;;;6071:9;:15;;;;;;;;;;;;;;;;-1:-1:-1;;6071:15:0;;;;;-1:-1:-1;;;;;;6071:15:0;;;;;;-1:-1:-1;6146:7:0;;-1:-1:-1;6146:7:0;5913:251;5897:3;;5856:317;;;;5701:479;;;:::o;2028:183::-;2110:4;2197:1;2179:21;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2179:21:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2179:21:0;;;2169:32;;;;;;2161:1;2143:21;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2143:21:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2143:21:0;;;2133:32;;;;;;:68;2125:78;;2028:183;;;;:::o;326:7367::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;326:7367:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;326:7367:0;;;-1:-1:-1;326:7367:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;326:7367:0;-1:-1:-1;;;;;326:7367:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;326:7367:0;;;-1:-1:-1;326:7367:0;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;326:7367:0;;;;;;",
  "source": "pragma solidity >=0.5.13 <0.7.0;\r\n\r\ncontract AddressList {\r\n    mapping(address => bool) public _addressMap;\r\n\r\n    function setWallet(address account) public {\r\n        _addressMap[account] = true;\r\n    }\r\n\r\n    function contains(address account) public view returns (bool) {\r\n        return _addressMap[account];\r\n    }\r\n}\r\ncontract DVSRegistry {\r\n    string public message = \"Hello World\";\r\n    address private _owner;\r\n    string public constant PUBLIC_KEY = '00000-00000-00000-00000-00000';\r\n\r\n    modifier onlyOwner() {\r\n        require(\r\n            msg.sender == _owner,\r\n            \"only contract owner can call this method\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    mapping(string => address) private _authorPerDocId;\r\n    mapping(string => string) private _encryptedKeyPerDocId;\r\n    mapping(string => mapping(address => bool)) private _authorizedAddressPerDocId;\r\n    mapping(string => address[]) private _authorizedAddressArrayPerDocId;\r\n    mapping(string => uint256) private _subscriptionFeePerDocId;\r\n\r\n    event Register(\r\n      address indexed from,\r\n      string docId,\r\n      string key,\r\n      uint256 fee,\r\n      address[] authorized\r\n    );\r\n\r\n    event Subscribe(\r\n      address indexed from,\r\n      string docId,\r\n      uint256 amount\r\n    );\r\n\r\n    event Withdraw(\r\n      address indexed from,\r\n      address indexed to,\r\n      uint256 amount\r\n    );\r\n\r\n    event ChangeFee(\r\n      address indexed from,\r\n      string docId,\r\n      uint256 fee\r\n    );\r\n\r\n    event ChangeAuthorized(\r\n      address indexed from,\r\n      string docId,\r\n      address[] authorized\r\n    );\r\n\r\n    constructor() public {\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    function setMessage(string calldata newMessage) external {\r\n        message = newMessage;\r\n    }\r\n\r\n    function docExists(string memory docId) public view returns (bool) {\r\n        address author = _authorPerDocId[docId];\r\n        return author != address(0);\r\n    }\r\n\r\n    function compareStrings (string memory a, string memory b) internal view returns (bool) {\r\n      return (keccak256(abi.encodePacked((a))) == keccak256(abi.encodePacked((b))) );\r\n    }\r\n\r\n    function registerDoc(\r\n        string calldata docId,\r\n        string calldata encryptedKey,\r\n        uint256 subscriptionFee,\r\n        address[] calldata authorizedAddresses\r\n    ) external {\r\n        require(!docExists(docId), \"a document with this id already exists\");\r\n        address author = msg.sender;\r\n        _authorPerDocId[docId] = author;\r\n        _encryptedKeyPerDocId[docId] = encryptedKey;\r\n        _subscriptionFeePerDocId[docId] = subscriptionFee;\r\n        for (uint256 i = 0; i < authorizedAddresses.length; i++) {\r\n            address account = authorizedAddresses[i];\r\n            _authorizedAddressPerDocId[docId][account] = true;\r\n        }\r\n        _authorizedAddressArrayPerDocId[docId] = authorizedAddresses;\r\n        emit Register(\r\n          msg.sender,\r\n          docId,\r\n          _encryptedKeyPerDocId[docId],\r\n          _subscriptionFeePerDocId[docId],\r\n          _authorizedAddressArrayPerDocId[docId]\r\n        );\r\n    }\r\n\r\n    function getDocumentKey(string calldata docId)\r\n        external\r\n        view\r\n        returns (string memory)\r\n    {\r\n      if((msg.sender == _authorPerDocId[docId]) ||\r\n                _authorizedAddressPerDocId[docId][msg.sender] ||\r\n                compareStrings(_encryptedKeyPerDocId[docId], PUBLIC_KEY) ) {\r\n          return _encryptedKeyPerDocId[docId];\r\n        } else {\r\n          return '';\r\n        }\r\n    }\r\n\r\n    function getSubscriptionFee(string calldata docId) external view returns (uint256 fee) {\r\n      require(docExists(docId), \"this document has not been registered\");\r\n      return _subscriptionFeePerDocId[docId];\r\n    }\r\n\r\n    function setSubscriptionFee(string calldata docId, uint256 subscriptionFee) external  {\r\n      require(docExists(docId), \"this document has not been registered\");\r\n        require(\r\n            msg.sender == _authorPerDocId[docId],\r\n            \"only the author of the document can change authorisations\"\r\n        );\r\n      _subscriptionFeePerDocId[docId] = subscriptionFee;\r\n      emit ChangeFee(\r\n        msg.sender,\r\n        docId,\r\n        _subscriptionFeePerDocId[docId]\r\n      );\r\n    }\r\n\r\n    function getAuthor(string calldata docId) external view returns (address) {\r\n      require(docExists(docId), \"this document has not been registered\");\r\n      return _authorPerDocId[docId];\r\n    }\r\n\r\n    function getAuthorizedAccounts(string calldata docId) external view returns (address[] memory) {\r\n      require(docExists(docId), \"this document has not been registered\");\r\n      return _authorizedAddressArrayPerDocId[docId];\r\n    }\r\n\r\n    function setAccess(\r\n        string memory docId,\r\n        address[] memory authorizedAddresses,\r\n        address[] memory deniedAddresses\r\n    ) public {\r\n        require(\r\n            msg.sender == _authorPerDocId[docId],\r\n            \"only the author of the document can change authorisations\"\r\n        );\r\n        for (uint i = 0; i < authorizedAddresses.length; i++) {\r\n            address account = authorizedAddresses[i];\r\n            _authorizedAddressPerDocId[docId][account] = true;\r\n            addAccount(docId, account);\r\n        }\r\n        for (uint i = 0; i < deniedAddresses.length; i++) {\r\n            address account = deniedAddresses[i];\r\n            delete _authorizedAddressPerDocId[docId][account];\r\n            removeAccount(docId, account);\r\n        }\r\n        emit ChangeAuthorized(\r\n          msg.sender,\r\n          docId,\r\n          _authorizedAddressArrayPerDocId[docId]\r\n        );\r\n    }\r\n\r\n    function removeAccount(string memory docId, address account) private {\r\n      address[] storage addresses = _authorizedAddressArrayPerDocId[docId];\r\n      for (uint32 i = 0; i < addresses.length; i++) {\r\n        if (addresses[i] == account) {\r\n          // replace the current value with value (n-1)\r\n          addresses[i] = addresses[addresses.length - 1];\r\n          addresses.pop(); // remove the last item and reduce length by 1\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    function addAccount(string memory docId, address account) private {\r\n      address[] storage addresses = _authorizedAddressArrayPerDocId[docId];\r\n      for (uint32 i = 0; i < addresses.length; i++) {\r\n        if (addresses[i] == account) {\r\n          // already in the array\r\n          return;\r\n        }\r\n      }\r\n      addresses.push(account); // add the account\r\n    }\r\n\r\n    function subscribe(string calldata docId) external payable {\r\n        require(\r\n            (msg.sender != _authorPerDocId[docId]) &&\r\n                !_authorizedAddressPerDocId[docId][msg.sender],\r\n            \"account has already subscribed to this document\"\r\n        );\r\n        require(\r\n            msg.value >= _subscriptionFeePerDocId[docId],\r\n            \"not enough fee to subscribe to this document\"\r\n        );\r\n        address payable author = address(uint160(_authorPerDocId[docId]));\r\n        author.transfer(_subscriptionFeePerDocId[docId]);\r\n        _authorizedAddressPerDocId[docId][msg.sender] = true;\r\n        addAccount(docId, msg.sender);\r\n        emit Subscribe(\r\n          msg.sender,\r\n          docId,\r\n          msg.value\r\n        );\r\n    }\r\n\r\n    function withdraw(uint256 amount, address payable to) external onlyOwner {\r\n        require(\r\n            amount <= address(this).balance,\r\n            \"requested amount too high compared to actual balance\"\r\n        );\r\n        to.transfer(amount);\r\n        emit Withdraw(\r\n          msg.sender,\r\n          to,\r\n          amount\r\n        );\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "C:\\Users\\Ludo\\Documents\\Developpement\\ARWEAVE\\test-angular\\arweave-ng\\contracts\\DVSRegistry.sol",
  "ast": {
    "absolutePath": "/C/Users/Ludo/Documents/Developpement/ARWEAVE/test-angular/arweave-ng/contracts/DVSRegistry.sol",
    "exportedSymbols": {
      "AddressList": [
        30
      ],
      "DVSRegistry": [
        721
      ]
    },
    "id": 722,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".13",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 30,
        "linearizedBaseContracts": [
          30
        ],
        "name": "AddressList",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5,
            "name": "_addressMap",
            "nodeType": "VariableDeclaration",
            "scope": 30,
            "src": "64:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 4,
              "keyType": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "72:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "64:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "83:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 16,
              "nodeType": "Block",
              "src": "159:46:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 10,
                        "name": "_addressMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "170:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 12,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 11,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "182:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "170:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 13,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "193:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "170:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15,
                  "nodeType": "ExpressionStatement",
                  "src": "170:27:0"
                }
              ]
            },
            "documentation": null,
            "id": 17,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setWallet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "135:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "135:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "134:17:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "159:0:0"
            },
            "scope": 30,
            "src": "116:89:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "275:46:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 24,
                      "name": "_addressMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "293:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 26,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 25,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "305:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "293:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 23,
                  "id": 27,
                  "nodeType": "Return",
                  "src": "286:27:0"
                }
              ]
            },
            "documentation": null,
            "id": 29,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contains",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "231:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "231:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "230:17:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "269:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "268:6:0"
            },
            "scope": 30,
            "src": "213:108:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 722,
        "src": "36:288:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 721,
        "linearizedBaseContracts": [
          721
        ],
        "name": "DVSRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 33,
            "name": "message",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "354:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 31,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "354:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "48656c6c6f20576f726c64",
              "id": 32,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "378:13:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba",
                "typeString": "literal_string \"Hello World\""
              },
              "value": "Hello World"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 35,
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "398:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "398:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 38,
            "name": "PUBLIC_KEY",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "427:67:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 36,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "427:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30303030302d30303030302d30303030302d30303030302d3030303030",
              "id": 37,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "463:31:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_5fe7e25a2c9e4118eb6e860a939a14417e6384c7a52f8854a6dfdfd079e22c8f",
                "typeString": "literal_string \"00000-00000-00000-00000-00000\""
              },
              "value": "00000-00000-00000-00000-00000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 49,
              "nodeType": "Block",
              "src": "524:141:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 41,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 773,
                            "src": "557:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "557:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 43,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "571:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "557:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f6e7472616374206f776e65722063616e2063616c6c2074686973206d6574686f64",
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "592:42:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5be8cd2a2af51235f6f9644705feacdce4101ec28ee5df9501bbf33fae6f3688",
                          "typeString": "literal_string \"only contract owner can call this method\""
                        },
                        "value": "only contract owner can call this method"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5be8cd2a2af51235f6f9644705feacdce4101ec28ee5df9501bbf33fae6f3688",
                          "typeString": "literal_string \"only contract owner can call this method\""
                        }
                      ],
                      "id": 40,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "535:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "535:110:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "535:110:0"
                },
                {
                  "id": 48,
                  "nodeType": "PlaceholderStatement",
                  "src": "656:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 50,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:2:0"
            },
            "src": "503:162:0",
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 54,
            "name": "_authorPerDocId",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "673:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 53,
              "keyType": {
                "id": 51,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "681:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "673:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 52,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "691:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 58,
            "name": "_encryptedKeyPerDocId",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "730:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_string_storage_$",
              "typeString": "mapping(string => string)"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 55,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "738:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "730:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_string_storage_$",
                "typeString": "mapping(string => string)"
              },
              "valueType": {
                "id": 56,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "748:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 64,
            "name": "_authorizedAddressPerDocId",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "792:78:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(string => mapping(address => bool))"
            },
            "typeName": {
              "id": 63,
              "keyType": {
                "id": 59,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "800:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "792:43:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(string => mapping(address => bool))"
              },
              "valueType": {
                "id": 62,
                "keyType": {
                  "id": 60,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "818:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "810:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 61,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "829:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 69,
            "name": "_authorizedAddressArrayPerDocId",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "877:68:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(string => address[])"
            },
            "typeName": {
              "id": 68,
              "keyType": {
                "id": 65,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "885:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "877:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(string => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 66,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "895:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 67,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "895:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 73,
            "name": "_subscriptionFeePerDocId",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "952:59:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 72,
              "keyType": {
                "id": 70,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "960:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "952:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueType": {
                "id": 71,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "970:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 86,
            "name": "Register",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1043:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "indexed": false,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1072:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "indexed": false,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1093:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "indexed": false,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1112:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "indexed": false,
                  "name": "authorized",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1132:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 82,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1132:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 83,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1132:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1034:125:0"
            },
            "src": "1020:140:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 94,
            "name": "Subscribe",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1192:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "indexed": false,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1221:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1242:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1183:80:0"
            },
            "src": "1168:96:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 102,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1295:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1295:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1324:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1351:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1351:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1286:86:0"
            },
            "src": "1272:101:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 110,
            "name": "ChangeFee",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1405:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1405:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "indexed": false,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1434:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "indexed": false,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1455:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1455:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1396:77:0"
            },
            "src": "1381:93:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 119,
            "name": "ChangeAuthorized",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1513:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1513:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "indexed": false,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1542:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1542:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "indexed": false,
                  "name": "authorized",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1563:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 115,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1563:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 116,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1563:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1504:86:0"
            },
            "src": "1482:109:0"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1620:38:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "1631:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "1640:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1640:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1631:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1631:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 128,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1610:2:0"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1620:0:0"
            },
            "scope": 721,
            "src": "1599:59:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "1713:32:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 133,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35,
                    "src": "1731:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 132,
                  "id": 134,
                  "nodeType": "Return",
                  "src": "1724:13:0"
                }
              ]
            },
            "documentation": null,
            "id": 136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1680:2:0"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1704:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1704:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1703:9:0"
            },
            "scope": 721,
            "src": "1666:79:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "1810:39:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 141,
                      "name": "message",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "1821:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 142,
                      "name": "newMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "1831:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "1821:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1821:20:0"
                }
              ]
            },
            "documentation": null,
            "id": 146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMessage",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "name": "newMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "1773:26:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1773:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1772:28:0"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1810:0:0"
            },
            "scope": 721,
            "src": "1753:96:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "1924:96:0",
              "statements": [
                {
                  "assignments": [
                    154
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 154,
                      "name": "author",
                      "nodeType": "VariableDeclaration",
                      "scope": 165,
                      "src": "1935:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 153,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1935:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 158,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 155,
                      "name": "_authorPerDocId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "1952:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 157,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 156,
                      "name": "docId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "1968:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1952:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1935:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 159,
                      "name": "author",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "1992:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2010:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2002:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2002:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1992:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 152,
                  "id": 164,
                  "nodeType": "Return",
                  "src": "1985:27:0"
                }
              ]
            },
            "documentation": null,
            "id": 166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "docExists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 148,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "1876:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1876:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1875:21:0"
            },
            "returnParameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "1918:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1918:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1917:6:0"
            },
            "scope": 721,
            "src": "1857:163:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "2116:95:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "id": 178,
                                      "name": "a",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 168,
                                      "src": "2161:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 179,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2160:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 176,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 760,
                                  "src": "2143:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 177,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2143:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2143:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 175,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "2133:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2133:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "id": 185,
                                      "name": "b",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 170,
                                      "src": "2197:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 186,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2196:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 183,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 760,
                                  "src": "2179:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2179:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2179:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 182,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "2169:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2169:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2133:68:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 190,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2132:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 174,
                  "id": 191,
                  "nodeType": "Return",
                  "src": "2125:78:0"
                }
              ]
            },
            "documentation": null,
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "compareStrings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 168,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2053:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 170,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2070:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2070:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2052:34:0"
            },
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2110:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2110:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2109:6:0"
            },
            "scope": 721,
            "src": "2028:183:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 284,
              "nodeType": "Block",
              "src": "2410:762:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2429:17:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 207,
                              "name": "docId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 195,
                              "src": "2440:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 206,
                            "name": "docExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 166,
                            "src": "2430:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (string memory) view returns (bool)"
                            }
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2430:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6120646f63756d656e742077697468207468697320696420616c726561647920657869737473",
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2448:40:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e87afd096f68d622e55bb73fb9fe786250506884143143e70fbeceac0fcccfcf",
                          "typeString": "literal_string \"a document with this id already exists\""
                        },
                        "value": "a document with this id already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e87afd096f68d622e55bb73fb9fe786250506884143143e70fbeceac0fcccfcf",
                          "typeString": "literal_string \"a document with this id already exists\""
                        }
                      ],
                      "id": 205,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "2421:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2421:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "2421:68:0"
                },
                {
                  "assignments": [
                    214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 214,
                      "name": "author",
                      "nodeType": "VariableDeclaration",
                      "scope": 284,
                      "src": "2500:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 213,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2500:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 217,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 215,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 773,
                      "src": "2517:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2517:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2500:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 218,
                        "name": "_authorPerDocId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "2538:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 220,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 219,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2554:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2538:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 221,
                      "name": "author",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "2563:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2538:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "2538:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 224,
                        "name": "_encryptedKeyPerDocId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "2580:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_string_storage_$",
                          "typeString": "mapping(string memory => string storage ref)"
                        }
                      },
                      "id": 226,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 225,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2602:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2580:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 227,
                      "name": "encryptedKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "2611:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "2580:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "2580:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 230,
                        "name": "_subscriptionFeePerDocId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "2634:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 232,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 231,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2659:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2634:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 233,
                      "name": "subscriptionFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "2668:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2634:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "2634:49:0"
                },
                {
                  "body": {
                    "id": 261,
                    "nodeType": "Block",
                    "src": "2751:131:0",
                    "statements": [
                      {
                        "assignments": [
                          248
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 248,
                            "name": "account",
                            "nodeType": "VariableDeclaration",
                            "scope": 261,
                            "src": "2766:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 247,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2766:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 252,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 249,
                            "name": "authorizedAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "2784:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 251,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 250,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 237,
                            "src": "2804:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2784:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2766:40:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 253,
                                "name": "_authorizedAddressPerDocId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64,
                                "src": "2821:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(string memory => mapping(address => bool))"
                                }
                              },
                              "id": 256,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 254,
                                "name": "docId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 195,
                                "src": "2848:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2821:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 257,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 255,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "2855:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2821:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2866:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2821:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 260,
                        "nodeType": "ExpressionStatement",
                        "src": "2821:49:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 240,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "2714:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 241,
                        "name": "authorizedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "2718:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2718:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2714:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 262,
                  "initializationExpression": {
                    "assignments": [
                      237
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 237,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "2699:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 236,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2699:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 239,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2711:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2699:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2746:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 244,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "2746:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 246,
                    "nodeType": "ExpressionStatement",
                    "src": "2746:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2694:188:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 263,
                        "name": "_authorizedAddressArrayPerDocId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "2892:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_array$_t_address_$dyn_storage_$",
                          "typeString": "mapping(string memory => address[] storage ref)"
                        }
                      },
                      "id": 265,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 264,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2924:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2892:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 266,
                      "name": "authorizedAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "2933:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "src": "2892:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "2892:60:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 270,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "2989:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2989:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 272,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "3012:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 273,
                          "name": "_encryptedKeyPerDocId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "3030:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_string_storage_$",
                            "typeString": "mapping(string memory => string storage ref)"
                          }
                        },
                        "id": 275,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 274,
                          "name": "docId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "3052:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3030:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 276,
                          "name": "_subscriptionFeePerDocId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "3071:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                            "typeString": "mapping(string memory => uint256)"
                          }
                        },
                        "id": 278,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 277,
                          "name": "docId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "3096:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3071:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 279,
                          "name": "_authorizedAddressArrayPerDocId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "3115:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(string memory => address[] storage ref)"
                          }
                        },
                        "id": 281,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 280,
                          "name": "docId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "3147:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3115:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      ],
                      "id": 269,
                      "name": "Register",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "2968:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory,string memory,uint256,address[] memory)"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2968:196:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 283,
                  "nodeType": "EmitStatement",
                  "src": "2963:201:0"
                }
              ]
            },
            "documentation": null,
            "id": 285,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerDoc",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 195,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "2250:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2250:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "name": "encryptedKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "2282:28:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2282:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 199,
                  "name": "subscriptionFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "2321:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2321:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 202,
                  "name": "authorizedAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "2355:38:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 200,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2355:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 201,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2355:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2239:161:0"
            },
            "returnParameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2410:0:0"
            },
            "scope": 721,
            "src": "2219:953:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 322,
              "nodeType": "Block",
              "src": "3297:303:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 292,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 773,
                                "src": "3310:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3310:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 294,
                                "name": "_authorPerDocId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54,
                                "src": "3324:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                                  "typeString": "mapping(string memory => address)"
                                }
                              },
                              "id": 296,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 295,
                                "name": "docId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 287,
                                "src": "3340:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3324:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3310:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 298,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3309:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 299,
                            "name": "_authorizedAddressPerDocId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "3368:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(string memory => mapping(address => bool))"
                            }
                          },
                          "id": 301,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 300,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "3395:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3368:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 304,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 302,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 773,
                            "src": "3402:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3402:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3368:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "3309:104:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 307,
                            "name": "_encryptedKeyPerDocId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "3449:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_string_storage_$",
                              "typeString": "mapping(string memory => string storage ref)"
                            }
                          },
                          "id": 309,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 308,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "3471:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3449:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 310,
                          "name": "PUBLIC_KEY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "3479:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 306,
                        "name": "compareStrings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "3434:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                          "typeString": "function (string memory,string memory) view returns (bool)"
                        }
                      },
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3434:56:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3309:181:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 320,
                    "nodeType": "Block",
                    "src": "3559:34:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "",
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3579:2:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "functionReturnParameters": 291,
                        "id": 319,
                        "nodeType": "Return",
                        "src": "3572:9:0"
                      }
                    ]
                  },
                  "id": 321,
                  "nodeType": "IfStatement",
                  "src": "3306:287:0",
                  "trueBody": {
                    "id": 317,
                    "nodeType": "Block",
                    "src": "3493:60:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 313,
                            "name": "_encryptedKeyPerDocId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "3513:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_string_storage_$",
                              "typeString": "mapping(string memory => string storage ref)"
                            }
                          },
                          "id": 315,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 314,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "3535:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3513:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 291,
                        "id": 316,
                        "nodeType": "Return",
                        "src": "3506:35:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDocumentKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "3204:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3204:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3203:23:0"
            },
            "returnParameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "3277:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3277:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3276:15:0"
            },
            "scope": 721,
            "src": "3180:420:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 341,
              "nodeType": "Block",
              "src": "3695:130:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 332,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 325,
                            "src": "3722:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 331,
                          "name": "docExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 166,
                          "src": "3712:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory) view returns (bool)"
                          }
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3712:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7468697320646f63756d656e7420686173206e6f74206265656e2072656769737465726564",
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3730:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68913e3a64e4c797608946bc9a85ae7f8b11554ad9d4648191620c35506dcae7",
                          "typeString": "literal_string \"this document has not been registered\""
                        },
                        "value": "this document has not been registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68913e3a64e4c797608946bc9a85ae7f8b11554ad9d4648191620c35506dcae7",
                          "typeString": "literal_string \"this document has not been registered\""
                        }
                      ],
                      "id": 330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "3704:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3704:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "3704:66:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 337,
                      "name": "_subscriptionFeePerDocId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "3786:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 339,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 338,
                      "name": "docId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 325,
                      "src": "3811:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3786:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 329,
                  "id": 340,
                  "nodeType": "Return",
                  "src": "3779:38:0"
                }
              ]
            },
            "documentation": null,
            "id": 342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSubscriptionFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 325,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "3636:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3636:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3635:23:0"
            },
            "returnParameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 328,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "3682:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3682:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3681:13:0"
            },
            "scope": 721,
            "src": "3608:217:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 381,
              "nodeType": "Block",
              "src": "3919:406:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 351,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 344,
                            "src": "3946:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 350,
                          "name": "docExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 166,
                          "src": "3936:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory) view returns (bool)"
                          }
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3936:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7468697320646f63756d656e7420686173206e6f74206265656e2072656769737465726564",
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3954:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68913e3a64e4c797608946bc9a85ae7f8b11554ad9d4648191620c35506dcae7",
                          "typeString": "literal_string \"this document has not been registered\""
                        },
                        "value": "this document has not been registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68913e3a64e4c797608946bc9a85ae7f8b11554ad9d4648191620c35506dcae7",
                          "typeString": "literal_string \"this document has not been registered\""
                        }
                      ],
                      "id": 349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "3928:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3928:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "ExpressionStatement",
                  "src": "3928:66:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 357,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 773,
                            "src": "4027:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4027:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 359,
                            "name": "_authorPerDocId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "4041:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 361,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 360,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 344,
                            "src": "4057:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4041:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4027:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c792074686520617574686f72206f662074686520646f63756d656e742063616e206368616e676520617574686f7269736174696f6e73",
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4078:59:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b88fd76f8fdc04fa6972557100435bbfaba56bde6980f4c28a2f38b4c812874",
                          "typeString": "literal_string \"only the author of the document can change authorisations\""
                        },
                        "value": "only the author of the document can change authorisations"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b88fd76f8fdc04fa6972557100435bbfaba56bde6980f4c28a2f38b4c812874",
                          "typeString": "literal_string \"only the author of the document can change authorisations\""
                        }
                      ],
                      "id": 356,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "4005:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4005:143:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "4005:143:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 366,
                        "name": "_subscriptionFeePerDocId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "4157:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 368,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 367,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "4182:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4157:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 369,
                      "name": "subscriptionFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 346,
                      "src": "4191:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4157:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "4157:49:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 373,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "4240:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4240:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 375,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "4261:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 376,
                          "name": "_subscriptionFeePerDocId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "4277:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                            "typeString": "mapping(string memory => uint256)"
                          }
                        },
                        "id": 378,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 377,
                          "name": "docId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "4302:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4277:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 372,
                      "name": "ChangeFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "4220:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256)"
                      }
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4220:97:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 380,
                  "nodeType": "EmitStatement",
                  "src": "4215:102:0"
                }
              ]
            },
            "documentation": null,
            "id": 382,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSubscriptionFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 344,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 382,
                  "src": "3861:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 343,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3861:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 346,
                  "name": "subscriptionFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 382,
                  "src": "3884:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3884:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3860:48:0"
            },
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3919:0:0"
            },
            "scope": 721,
            "src": "3833:492:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 400,
              "nodeType": "Block",
              "src": "4407:121:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 391,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 384,
                            "src": "4434:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 390,
                          "name": "docExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 166,
                          "src": "4424:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory) view returns (bool)"
                          }
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4424:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7468697320646f63756d656e7420686173206e6f74206265656e2072656769737465726564",
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4442:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68913e3a64e4c797608946bc9a85ae7f8b11554ad9d4648191620c35506dcae7",
                          "typeString": "literal_string \"this document has not been registered\""
                        },
                        "value": "this document has not been registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68913e3a64e4c797608946bc9a85ae7f8b11554ad9d4648191620c35506dcae7",
                          "typeString": "literal_string \"this document has not been registered\""
                        }
                      ],
                      "id": 389,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "4416:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4416:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "4416:66:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 396,
                      "name": "_authorPerDocId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "4498:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 398,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 397,
                      "name": "docId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 384,
                      "src": "4514:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4498:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 388,
                  "id": 399,
                  "nodeType": "Return",
                  "src": "4491:29:0"
                }
              ]
            },
            "documentation": null,
            "id": 401,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAuthor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 384,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "4352:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 383,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4352:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4351:23:0"
            },
            "returnParameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "4398:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4398:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4397:9:0"
            },
            "scope": 721,
            "src": "4333:195:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "4631:137:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 411,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "4658:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 410,
                          "name": "docExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 166,
                          "src": "4648:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory) view returns (bool)"
                          }
                        },
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4648:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7468697320646f63756d656e7420686173206e6f74206265656e2072656769737465726564",
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4666:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68913e3a64e4c797608946bc9a85ae7f8b11554ad9d4648191620c35506dcae7",
                          "typeString": "literal_string \"this document has not been registered\""
                        },
                        "value": "this document has not been registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68913e3a64e4c797608946bc9a85ae7f8b11554ad9d4648191620c35506dcae7",
                          "typeString": "literal_string \"this document has not been registered\""
                        }
                      ],
                      "id": 409,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "4640:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4640:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "4640:66:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 416,
                      "name": "_authorizedAddressArrayPerDocId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "4722:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(string memory => address[] storage ref)"
                      }
                    },
                    "id": 418,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 417,
                      "name": "docId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "4754:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4722:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 408,
                  "id": 419,
                  "nodeType": "Return",
                  "src": "4715:45:0"
                }
              ]
            },
            "documentation": null,
            "id": 421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAuthorizedAccounts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 403,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "4567:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4567:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4566:23:0"
            },
            "returnParameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "4613:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 405,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4613:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 406,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4613:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4612:18:0"
            },
            "scope": 721,
            "src": "4536:232:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 514,
              "nodeType": "Block",
              "src": "4929:764:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 433,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 773,
                            "src": "4962:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4962:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 435,
                            "name": "_authorPerDocId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "4976:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 437,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 436,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "4992:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4976:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4962:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c792074686520617574686f72206f662074686520646f63756d656e742063616e206368616e676520617574686f7269736174696f6e73",
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5013:59:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b88fd76f8fdc04fa6972557100435bbfaba56bde6980f4c28a2f38b4c812874",
                          "typeString": "literal_string \"only the author of the document can change authorisations\""
                        },
                        "value": "only the author of the document can change authorisations"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b88fd76f8fdc04fa6972557100435bbfaba56bde6980f4c28a2f38b4c812874",
                          "typeString": "literal_string \"only the author of the document can change authorisations\""
                        }
                      ],
                      "id": 432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "4940:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4940:143:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "4940:143:0"
                },
                {
                  "body": {
                    "id": 472,
                    "nodeType": "Block",
                    "src": "5148:172:0",
                    "statements": [
                      {
                        "assignments": [
                          454
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 454,
                            "name": "account",
                            "nodeType": "VariableDeclaration",
                            "scope": 472,
                            "src": "5163:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 453,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5163:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 458,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 455,
                            "name": "authorizedAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "5181:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 457,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 456,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "5201:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5181:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5163:40:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 459,
                                "name": "_authorizedAddressPerDocId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64,
                                "src": "5218:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(string memory => mapping(address => bool))"
                                }
                              },
                              "id": 462,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 460,
                                "name": "docId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 423,
                                "src": "5245:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5218:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 463,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 461,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 454,
                              "src": "5252:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5218:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5263:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5218:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 466,
                        "nodeType": "ExpressionStatement",
                        "src": "5218:49:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 468,
                              "name": "docId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "5293:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 469,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 454,
                              "src": "5300:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 467,
                            "name": "addAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 611,
                            "src": "5282:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (string memory,address)"
                            }
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5282:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 471,
                        "nodeType": "ExpressionStatement",
                        "src": "5282:26:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 446,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 443,
                      "src": "5111:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 447,
                        "name": "authorizedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 426,
                        "src": "5115:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5115:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5111:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 473,
                  "initializationExpression": {
                    "assignments": [
                      443
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 443,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 473,
                        "src": "5099:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 442,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5099:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 445,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5108:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5099:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5143:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 450,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 443,
                        "src": "5143:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 452,
                    "nodeType": "ExpressionStatement",
                    "src": "5143:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5094:226:0"
                },
                {
                  "body": {
                    "id": 503,
                    "nodeType": "Block",
                    "src": "5380:171:0",
                    "statements": [
                      {
                        "assignments": [
                          486
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 486,
                            "name": "account",
                            "nodeType": "VariableDeclaration",
                            "scope": 503,
                            "src": "5395:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 485,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5395:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 490,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 487,
                            "name": "deniedAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 429,
                            "src": "5413:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 489,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 488,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "5429:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5413:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5395:36:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "5446:49:0",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 491,
                                "name": "_authorizedAddressPerDocId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64,
                                "src": "5453:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(string memory => mapping(address => bool))"
                                }
                              },
                              "id": 493,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 492,
                                "name": "docId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 423,
                                "src": "5480:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5453:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 495,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 494,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 486,
                              "src": "5487:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5453:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 497,
                        "nodeType": "ExpressionStatement",
                        "src": "5446:49:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 499,
                              "name": "docId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "5524:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 500,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 486,
                              "src": "5531:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 498,
                            "name": "removeAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 568,
                            "src": "5510:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (string memory,address)"
                            }
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5510:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 502,
                        "nodeType": "ExpressionStatement",
                        "src": "5510:29:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 478,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "5347:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 479,
                        "name": "deniedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "5351:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5351:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5347:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 504,
                  "initializationExpression": {
                    "assignments": [
                      475
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 475,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 504,
                        "src": "5335:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 474,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5335:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 477,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5344:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5335:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5375:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 482,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "5375:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 484,
                    "nodeType": "ExpressionStatement",
                    "src": "5375:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5330:221:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 506,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "5595:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5595:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 508,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "5618:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 509,
                          "name": "_authorizedAddressArrayPerDocId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "5636:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(string memory => address[] storage ref)"
                          }
                        },
                        "id": 511,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 510,
                          "name": "docId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "5668:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5636:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      ],
                      "id": 505,
                      "name": "ChangeAuthorized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "5566:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory,address[] memory)"
                      }
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5566:119:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 513,
                  "nodeType": "EmitStatement",
                  "src": "5561:124:0"
                }
              ]
            },
            "documentation": null,
            "id": 515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAccess",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "4805:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4805:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 426,
                  "name": "authorizedAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "4835:36:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 424,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4835:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 425,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4835:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 429,
                  "name": "deniedAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "4882:32:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 427,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4882:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 428,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4882:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4794:127:0"
            },
            "returnParameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4929:0:0"
            },
            "scope": 721,
            "src": "4776:917:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 567,
              "nodeType": "Block",
              "src": "5770:410:0",
              "statements": [
                {
                  "assignments": [
                    525
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 525,
                      "name": "addresses",
                      "nodeType": "VariableDeclaration",
                      "scope": 567,
                      "src": "5779:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 523,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5779:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 524,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5779:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 529,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 526,
                      "name": "_authorizedAddressArrayPerDocId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "5809:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(string memory => address[] storage ref)"
                      }
                    },
                    "id": 528,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 527,
                      "name": "docId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 517,
                      "src": "5841:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5809:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5779:68:0"
                },
                {
                  "body": {
                    "id": 565,
                    "nodeType": "Block",
                    "src": "5902:271:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 541,
                              "name": "addresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 525,
                              "src": "5917:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            },
                            "id": 543,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 542,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 531,
                              "src": "5927:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5917:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 544,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 519,
                            "src": "5933:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5917:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 564,
                        "nodeType": "IfStatement",
                        "src": "5913:251:0",
                        "trueBody": {
                          "id": 563,
                          "nodeType": "Block",
                          "src": "5942:222:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 546,
                                    "name": "addresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 525,
                                    "src": "6012:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[] storage pointer"
                                    }
                                  },
                                  "id": 548,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 547,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 531,
                                    "src": "6022:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6012:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 549,
                                    "name": "addresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 525,
                                    "src": "6027:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[] storage pointer"
                                    }
                                  },
                                  "id": 554,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 553,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 550,
                                        "name": "addresses",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 525,
                                        "src": "6037:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                          "typeString": "address[] storage pointer"
                                        }
                                      },
                                      "id": 551,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "6037:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 552,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6056:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "6037:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6027:31:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "6012:46:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 556,
                              "nodeType": "ExpressionStatement",
                              "src": "6012:46:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 557,
                                    "name": "addresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 525,
                                    "src": "6071:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[] storage pointer"
                                    }
                                  },
                                  "id": 559,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pop",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "6071:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 560,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6071:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 561,
                              "nodeType": "ExpressionStatement",
                              "src": "6071:15:0"
                            },
                            {
                              "expression": null,
                              "functionReturnParameters": 521,
                              "id": 562,
                              "nodeType": "Return",
                              "src": "6146:7:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 534,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 531,
                      "src": "5875:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 535,
                        "name": "addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 525,
                        "src": "5879:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 536,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5879:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5875:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 566,
                  "initializationExpression": {
                    "assignments": [
                      531
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 531,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 566,
                        "src": "5861:8:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 530,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5861:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 533,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5872:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5861:12:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5897:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 538,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 531,
                        "src": "5897:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 540,
                    "nodeType": "ExpressionStatement",
                    "src": "5897:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5856:317:0"
                }
              ]
            },
            "documentation": null,
            "id": 568,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAccount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 517,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "5724:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5724:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 519,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "5745:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5745:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5723:38:0"
            },
            "returnParameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5770:0:0"
            },
            "scope": 721,
            "src": "5701:479:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 610,
              "nodeType": "Block",
              "src": "6254:305:0",
              "statements": [
                {
                  "assignments": [
                    578
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 578,
                      "name": "addresses",
                      "nodeType": "VariableDeclaration",
                      "scope": 610,
                      "src": "6263:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 576,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6263:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 577,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "6263:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 582,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 579,
                      "name": "_authorizedAddressArrayPerDocId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "6293:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(string memory => address[] storage ref)"
                      }
                    },
                    "id": 581,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 580,
                      "name": "docId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 570,
                      "src": "6325:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6293:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6263:68:0"
                },
                {
                  "body": {
                    "id": 602,
                    "nodeType": "Block",
                    "src": "6386:115:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 594,
                              "name": "addresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
                              "src": "6401:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            },
                            "id": 596,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 595,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "6411:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6401:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 597,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 572,
                            "src": "6417:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6401:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 601,
                        "nodeType": "IfStatement",
                        "src": "6397:95:0",
                        "trueBody": {
                          "id": 600,
                          "nodeType": "Block",
                          "src": "6426:66:0",
                          "statements": [
                            {
                              "expression": null,
                              "functionReturnParameters": 574,
                              "id": 599,
                              "nodeType": "Return",
                              "src": "6474:7:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 587,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 584,
                      "src": "6359:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 588,
                        "name": "addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "6363:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 589,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6363:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6359:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 603,
                  "initializationExpression": {
                    "assignments": [
                      584
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 584,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 603,
                        "src": "6345:8:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 583,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6345:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 586,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6356:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6345:12:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6381:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 591,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "6381:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 593,
                    "nodeType": "ExpressionStatement",
                    "src": "6381:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "6340:161:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 607,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 572,
                        "src": "6524:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 604,
                        "name": "addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "6509:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6509:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6509:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "6509:23:0"
                }
              ]
            },
            "documentation": null,
            "id": 611,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAccount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 570,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 611,
                  "src": "6208:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 569,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6208:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 572,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 611,
                  "src": "6229:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 571,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6229:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6207:38:0"
            },
            "returnParameters": {
              "id": 574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6254:0:0"
            },
            "scope": 721,
            "src": "6188:371:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 686,
              "nodeType": "Block",
              "src": "6626:707:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 617,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 773,
                                  "src": "6660:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 618,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "6660:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 619,
                                  "name": "_authorPerDocId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54,
                                  "src": "6674:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                                    "typeString": "mapping(string memory => address)"
                                  }
                                },
                                "id": 621,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 620,
                                  "name": "docId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 613,
                                  "src": "6690:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6674:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6660:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 623,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6659:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6718:46:0",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 624,
                                "name": "_authorizedAddressPerDocId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64,
                                "src": "6719:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(string memory => mapping(address => bool))"
                                }
                              },
                              "id": 626,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 625,
                                "name": "docId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 613,
                                "src": "6746:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6719:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 629,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 627,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 773,
                                "src": "6753:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6753:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6719:45:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6659:105:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6163636f756e742068617320616c7265616479207375627363726962656420746f207468697320646f63756d656e74",
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6779:49:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a344d4ac7aef7e35c54d89795620eb13b805ee1f7b96e926b3f27785cca2731",
                          "typeString": "literal_string \"account has already subscribed to this document\""
                        },
                        "value": "account has already subscribed to this document"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a344d4ac7aef7e35c54d89795620eb13b805ee1f7b96e926b3f27785cca2731",
                          "typeString": "literal_string \"account has already subscribed to this document\""
                        }
                      ],
                      "id": 616,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "6637:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6637:202:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 634,
                  "nodeType": "ExpressionStatement",
                  "src": "6637:202:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 636,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 773,
                            "src": "6872:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6872:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 638,
                            "name": "_subscriptionFeePerDocId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "6885:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                              "typeString": "mapping(string memory => uint256)"
                            }
                          },
                          "id": 640,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 639,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 613,
                            "src": "6910:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6885:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6872:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f7567682066656520746f2073756273637269626520746f207468697320646f63756d656e74",
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6931:46:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b94ce032c0face3589eacf61c5a4ad0e5f4b75b01f8dc3ee1a4281ab86bb3dee",
                          "typeString": "literal_string \"not enough fee to subscribe to this document\""
                        },
                        "value": "not enough fee to subscribe to this document"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b94ce032c0face3589eacf61c5a4ad0e5f4b75b01f8dc3ee1a4281ab86bb3dee",
                          "typeString": "literal_string \"not enough fee to subscribe to this document\""
                        }
                      ],
                      "id": 635,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "6850:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6850:138:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 644,
                  "nodeType": "ExpressionStatement",
                  "src": "6850:138:0"
                },
                {
                  "assignments": [
                    646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 646,
                      "name": "author",
                      "nodeType": "VariableDeclaration",
                      "scope": 686,
                      "src": "6999:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 645,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6999:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 654,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 649,
                              "name": "_authorPerDocId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "7040:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 651,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 650,
                              "name": "docId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 613,
                              "src": "7056:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7040:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7032:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": "uint160"
                        },
                        "id": 652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7032:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "id": 647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7024:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7024:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6999:65:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 658,
                          "name": "_subscriptionFeePerDocId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "7091:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                            "typeString": "mapping(string memory => uint256)"
                          }
                        },
                        "id": 660,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 659,
                          "name": "docId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 613,
                          "src": "7116:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7091:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 655,
                        "name": "author",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 646,
                        "src": "7075:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7075:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7075:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 662,
                  "nodeType": "ExpressionStatement",
                  "src": "7075:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 663,
                          "name": "_authorizedAddressPerDocId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "7134:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(string memory => mapping(address => bool))"
                          }
                        },
                        "id": 667,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 664,
                          "name": "docId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 613,
                          "src": "7161:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7134:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 668,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 665,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "7168:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7168:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7134:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7182:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7134:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "7134:52:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 673,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "7208:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 674,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "7215:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7215:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 672,
                      "name": "addAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 611,
                      "src": "7197:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7197:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 677,
                  "nodeType": "ExpressionStatement",
                  "src": "7197:29:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 679,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "7264:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7264:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 681,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "7287:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 682,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "7305:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7305:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 678,
                      "name": "Subscribe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "7242:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256)"
                      }
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7242:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 685,
                  "nodeType": "EmitStatement",
                  "src": "7237:88:0"
                }
              ]
            },
            "documentation": null,
            "id": 687,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subscribe",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 613,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 687,
                  "src": "6586:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6586:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6585:23:0"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6626:0:0"
            },
            "scope": 721,
            "src": "6567:766:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 719,
              "nodeType": "Block",
              "src": "7414:274:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 697,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 689,
                          "src": "7447:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 699,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 789,
                                "src": "7465:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DVSRegistry_$721",
                                  "typeString": "contract DVSRegistry"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DVSRegistry_$721",
                                  "typeString": "contract DVSRegistry"
                                }
                              ],
                              "id": 698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7457:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7457:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7457:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7447:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "72657175657374656420616d6f756e7420746f6f206869676820636f6d706172656420746f2061637475616c2062616c616e6365",
                        "id": 703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7493:54:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38918cc1803de48a05dfb38d68e7ce63d710e43c9f13561266c1c0dcd968863e",
                          "typeString": "literal_string \"requested amount too high compared to actual balance\""
                        },
                        "value": "requested amount too high compared to actual balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38918cc1803de48a05dfb38d68e7ce63d710e43c9f13561266c1c0dcd968863e",
                          "typeString": "literal_string \"requested amount too high compared to actual balance\""
                        }
                      ],
                      "id": 696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "7425:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7425:133:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "7425:133:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 709,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "7581:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 706,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "7569:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7569:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7569:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 711,
                  "nodeType": "ExpressionStatement",
                  "src": "7569:19:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 713,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "7625:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7625:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 715,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "7648:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 716,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "7663:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 712,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "7604:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7604:76:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 718,
                  "nodeType": "EmitStatement",
                  "src": "7599:81:0"
                }
              ]
            },
            "documentation": null,
            "id": 720,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 694,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 693,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 50,
                  "src": "7404:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7404:9:0"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 689,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "7359:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7359:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 691,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "7375:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7375:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7358:36:0"
            },
            "returnParameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7414:0:0"
            },
            "scope": 721,
            "src": "7341:347:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 722,
        "src": "326:7367:0"
      }
    ],
    "src": "0:7695:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Ludo/Documents/Developpement/ARWEAVE/test-angular/arweave-ng/contracts/DVSRegistry.sol",
    "exportedSymbols": {
      "AddressList": [
        30
      ],
      "DVSRegistry": [
        721
      ]
    },
    "id": 722,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".13",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 30,
        "linearizedBaseContracts": [
          30
        ],
        "name": "AddressList",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5,
            "name": "_addressMap",
            "nodeType": "VariableDeclaration",
            "scope": 30,
            "src": "64:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 4,
              "keyType": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "72:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "64:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "83:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 16,
              "nodeType": "Block",
              "src": "159:46:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 10,
                        "name": "_addressMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "170:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 12,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 11,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "182:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "170:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 13,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "193:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "170:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15,
                  "nodeType": "ExpressionStatement",
                  "src": "170:27:0"
                }
              ]
            },
            "documentation": null,
            "id": 17,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setWallet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "135:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "135:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "134:17:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "159:0:0"
            },
            "scope": 30,
            "src": "116:89:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "275:46:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 24,
                      "name": "_addressMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "293:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 26,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 25,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "305:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "293:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 23,
                  "id": 27,
                  "nodeType": "Return",
                  "src": "286:27:0"
                }
              ]
            },
            "documentation": null,
            "id": 29,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contains",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "231:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "231:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "230:17:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "269:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "268:6:0"
            },
            "scope": 30,
            "src": "213:108:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 722,
        "src": "36:288:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 721,
        "linearizedBaseContracts": [
          721
        ],
        "name": "DVSRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 33,
            "name": "message",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "354:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 31,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "354:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "48656c6c6f20576f726c64",
              "id": 32,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "378:13:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_592fa743889fc7f92ac2a37bb1f5ba1daf2a5c84741ca0e0061d243a2e6707ba",
                "typeString": "literal_string \"Hello World\""
              },
              "value": "Hello World"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 35,
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "398:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 34,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "398:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 38,
            "name": "PUBLIC_KEY",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "427:67:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 36,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "427:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30303030302d30303030302d30303030302d30303030302d3030303030",
              "id": 37,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "463:31:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_5fe7e25a2c9e4118eb6e860a939a14417e6384c7a52f8854a6dfdfd079e22c8f",
                "typeString": "literal_string \"00000-00000-00000-00000-00000\""
              },
              "value": "00000-00000-00000-00000-00000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 49,
              "nodeType": "Block",
              "src": "524:141:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 41,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 773,
                            "src": "557:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "557:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 43,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "571:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "557:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920636f6e7472616374206f776e65722063616e2063616c6c2074686973206d6574686f64",
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "592:42:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5be8cd2a2af51235f6f9644705feacdce4101ec28ee5df9501bbf33fae6f3688",
                          "typeString": "literal_string \"only contract owner can call this method\""
                        },
                        "value": "only contract owner can call this method"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5be8cd2a2af51235f6f9644705feacdce4101ec28ee5df9501bbf33fae6f3688",
                          "typeString": "literal_string \"only contract owner can call this method\""
                        }
                      ],
                      "id": 40,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "535:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "535:110:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "535:110:0"
                },
                {
                  "id": 48,
                  "nodeType": "PlaceholderStatement",
                  "src": "656:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 50,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:2:0"
            },
            "src": "503:162:0",
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 54,
            "name": "_authorPerDocId",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "673:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 53,
              "keyType": {
                "id": 51,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "681:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "673:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 52,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "691:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 58,
            "name": "_encryptedKeyPerDocId",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "730:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_string_storage_$",
              "typeString": "mapping(string => string)"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 55,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "738:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "730:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_string_storage_$",
                "typeString": "mapping(string => string)"
              },
              "valueType": {
                "id": 56,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "748:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 64,
            "name": "_authorizedAddressPerDocId",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "792:78:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(string => mapping(address => bool))"
            },
            "typeName": {
              "id": 63,
              "keyType": {
                "id": 59,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "800:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "792:43:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(string => mapping(address => bool))"
              },
              "valueType": {
                "id": 62,
                "keyType": {
                  "id": 60,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "818:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "810:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 61,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "829:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 69,
            "name": "_authorizedAddressArrayPerDocId",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "877:68:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(string => address[])"
            },
            "typeName": {
              "id": 68,
              "keyType": {
                "id": 65,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "885:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "877:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(string => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 66,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "895:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 67,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "895:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 73,
            "name": "_subscriptionFeePerDocId",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "952:59:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 72,
              "keyType": {
                "id": 70,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "960:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "952:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueType": {
                "id": 71,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "970:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 86,
            "name": "Register",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1043:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "indexed": false,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1072:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "indexed": false,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1093:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "indexed": false,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1112:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "indexed": false,
                  "name": "authorized",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1132:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 82,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1132:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 83,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1132:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1034:125:0"
            },
            "src": "1020:140:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 94,
            "name": "Subscribe",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1192:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "indexed": false,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1221:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "1242:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1183:80:0"
            },
            "src": "1168:96:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 102,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1295:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1295:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1324:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "1351:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1351:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1286:86:0"
            },
            "src": "1272:101:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 110,
            "name": "ChangeFee",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1405:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1405:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "indexed": false,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1434:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "indexed": false,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1455:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1455:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1396:77:0"
            },
            "src": "1381:93:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 119,
            "name": "ChangeAuthorized",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1513:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1513:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "indexed": false,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1542:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1542:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "indexed": false,
                  "name": "authorized",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1563:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 115,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1563:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 116,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1563:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1504:86:0"
            },
            "src": "1482:109:0"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1620:38:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "1631:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "1640:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1640:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1631:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1631:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 128,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1610:2:0"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1620:0:0"
            },
            "scope": 721,
            "src": "1599:59:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "1713:32:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 133,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35,
                    "src": "1731:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 132,
                  "id": 134,
                  "nodeType": "Return",
                  "src": "1724:13:0"
                }
              ]
            },
            "documentation": null,
            "id": 136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1680:2:0"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1704:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1704:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1703:9:0"
            },
            "scope": 721,
            "src": "1666:79:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "1810:39:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 141,
                      "name": "message",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "1821:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 142,
                      "name": "newMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "1831:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "1821:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1821:20:0"
                }
              ]
            },
            "documentation": null,
            "id": 146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMessage",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "name": "newMessage",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "1773:26:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1773:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1772:28:0"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1810:0:0"
            },
            "scope": 721,
            "src": "1753:96:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "1924:96:0",
              "statements": [
                {
                  "assignments": [
                    154
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 154,
                      "name": "author",
                      "nodeType": "VariableDeclaration",
                      "scope": 165,
                      "src": "1935:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 153,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1935:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 158,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 155,
                      "name": "_authorPerDocId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "1952:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 157,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 156,
                      "name": "docId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "1968:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1952:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1935:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 159,
                      "name": "author",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "1992:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2010:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2002:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2002:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1992:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 152,
                  "id": 164,
                  "nodeType": "Return",
                  "src": "1985:27:0"
                }
              ]
            },
            "documentation": null,
            "id": 166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "docExists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 148,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "1876:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1876:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1875:21:0"
            },
            "returnParameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "1918:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1918:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1917:6:0"
            },
            "scope": 721,
            "src": "1857:163:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "2116:95:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "id": 178,
                                      "name": "a",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 168,
                                      "src": "2161:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 179,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2160:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 176,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 760,
                                  "src": "2143:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 177,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2143:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2143:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 175,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "2133:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2133:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "id": 185,
                                      "name": "b",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 170,
                                      "src": "2197:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 186,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2196:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 183,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 760,
                                  "src": "2179:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2179:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2179:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 182,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "2169:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2169:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2133:68:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 190,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2132:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 174,
                  "id": 191,
                  "nodeType": "Return",
                  "src": "2125:78:0"
                }
              ]
            },
            "documentation": null,
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "compareStrings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 168,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2053:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 170,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2070:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2070:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2052:34:0"
            },
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2110:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2110:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2109:6:0"
            },
            "scope": 721,
            "src": "2028:183:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 284,
              "nodeType": "Block",
              "src": "2410:762:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2429:17:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 207,
                              "name": "docId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 195,
                              "src": "2440:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 206,
                            "name": "docExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 166,
                            "src": "2430:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (string memory) view returns (bool)"
                            }
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2430:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6120646f63756d656e742077697468207468697320696420616c726561647920657869737473",
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2448:40:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e87afd096f68d622e55bb73fb9fe786250506884143143e70fbeceac0fcccfcf",
                          "typeString": "literal_string \"a document with this id already exists\""
                        },
                        "value": "a document with this id already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e87afd096f68d622e55bb73fb9fe786250506884143143e70fbeceac0fcccfcf",
                          "typeString": "literal_string \"a document with this id already exists\""
                        }
                      ],
                      "id": 205,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "2421:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2421:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "2421:68:0"
                },
                {
                  "assignments": [
                    214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 214,
                      "name": "author",
                      "nodeType": "VariableDeclaration",
                      "scope": 284,
                      "src": "2500:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 213,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2500:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 217,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 215,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 773,
                      "src": "2517:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2517:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2500:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 218,
                        "name": "_authorPerDocId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "2538:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 220,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 219,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2554:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2538:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 221,
                      "name": "author",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "2563:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2538:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "2538:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 224,
                        "name": "_encryptedKeyPerDocId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "2580:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_string_storage_$",
                          "typeString": "mapping(string memory => string storage ref)"
                        }
                      },
                      "id": 226,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 225,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2602:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2580:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 227,
                      "name": "encryptedKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "2611:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "2580:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "2580:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 230,
                        "name": "_subscriptionFeePerDocId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "2634:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 232,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 231,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2659:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2634:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 233,
                      "name": "subscriptionFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "2668:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2634:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "2634:49:0"
                },
                {
                  "body": {
                    "id": 261,
                    "nodeType": "Block",
                    "src": "2751:131:0",
                    "statements": [
                      {
                        "assignments": [
                          248
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 248,
                            "name": "account",
                            "nodeType": "VariableDeclaration",
                            "scope": 261,
                            "src": "2766:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 247,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2766:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 252,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 249,
                            "name": "authorizedAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "2784:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 251,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 250,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 237,
                            "src": "2804:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2784:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2766:40:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 253,
                                "name": "_authorizedAddressPerDocId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64,
                                "src": "2821:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(string memory => mapping(address => bool))"
                                }
                              },
                              "id": 256,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 254,
                                "name": "docId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 195,
                                "src": "2848:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2821:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 257,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 255,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "2855:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2821:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2866:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2821:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 260,
                        "nodeType": "ExpressionStatement",
                        "src": "2821:49:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 240,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "2714:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 241,
                        "name": "authorizedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "2718:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2718:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2714:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 262,
                  "initializationExpression": {
                    "assignments": [
                      237
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 237,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "2699:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 236,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2699:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 239,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2711:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2699:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2746:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 244,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "2746:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 246,
                    "nodeType": "ExpressionStatement",
                    "src": "2746:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2694:188:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 263,
                        "name": "_authorizedAddressArrayPerDocId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "2892:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_array$_t_address_$dyn_storage_$",
                          "typeString": "mapping(string memory => address[] storage ref)"
                        }
                      },
                      "id": 265,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 264,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2924:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2892:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 266,
                      "name": "authorizedAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "2933:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "src": "2892:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "2892:60:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 270,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "2989:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2989:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 272,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "3012:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 273,
                          "name": "_encryptedKeyPerDocId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "3030:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_string_storage_$",
                            "typeString": "mapping(string memory => string storage ref)"
                          }
                        },
                        "id": 275,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 274,
                          "name": "docId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "3052:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3030:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 276,
                          "name": "_subscriptionFeePerDocId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "3071:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                            "typeString": "mapping(string memory => uint256)"
                          }
                        },
                        "id": 278,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 277,
                          "name": "docId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "3096:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3071:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 279,
                          "name": "_authorizedAddressArrayPerDocId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "3115:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(string memory => address[] storage ref)"
                          }
                        },
                        "id": 281,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 280,
                          "name": "docId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "3147:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3115:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      ],
                      "id": 269,
                      "name": "Register",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "2968:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory,string memory,uint256,address[] memory)"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2968:196:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 283,
                  "nodeType": "EmitStatement",
                  "src": "2963:201:0"
                }
              ]
            },
            "documentation": null,
            "id": 285,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerDoc",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 195,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "2250:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2250:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "name": "encryptedKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "2282:28:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2282:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 199,
                  "name": "subscriptionFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "2321:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2321:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 202,
                  "name": "authorizedAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "2355:38:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 200,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2355:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 201,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2355:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2239:161:0"
            },
            "returnParameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2410:0:0"
            },
            "scope": 721,
            "src": "2219:953:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 322,
              "nodeType": "Block",
              "src": "3297:303:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 292,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 773,
                                "src": "3310:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3310:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 294,
                                "name": "_authorPerDocId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54,
                                "src": "3324:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                                  "typeString": "mapping(string memory => address)"
                                }
                              },
                              "id": 296,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 295,
                                "name": "docId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 287,
                                "src": "3340:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3324:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3310:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 298,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3309:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 299,
                            "name": "_authorizedAddressPerDocId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "3368:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(string memory => mapping(address => bool))"
                            }
                          },
                          "id": 301,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 300,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "3395:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3368:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 304,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 302,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 773,
                            "src": "3402:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3402:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3368:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "3309:104:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 307,
                            "name": "_encryptedKeyPerDocId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "3449:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_string_storage_$",
                              "typeString": "mapping(string memory => string storage ref)"
                            }
                          },
                          "id": 309,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 308,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "3471:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3449:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 310,
                          "name": "PUBLIC_KEY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "3479:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          },
                          {
                            "typeIdentifier": "t_string_memory",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 306,
                        "name": "compareStrings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "3434:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                          "typeString": "function (string memory,string memory) view returns (bool)"
                        }
                      },
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3434:56:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3309:181:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 320,
                    "nodeType": "Block",
                    "src": "3559:34:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "",
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3579:2:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "functionReturnParameters": 291,
                        "id": 319,
                        "nodeType": "Return",
                        "src": "3572:9:0"
                      }
                    ]
                  },
                  "id": 321,
                  "nodeType": "IfStatement",
                  "src": "3306:287:0",
                  "trueBody": {
                    "id": 317,
                    "nodeType": "Block",
                    "src": "3493:60:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 313,
                            "name": "_encryptedKeyPerDocId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "3513:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_string_storage_$",
                              "typeString": "mapping(string memory => string storage ref)"
                            }
                          },
                          "id": 315,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 314,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "3535:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3513:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 291,
                        "id": 316,
                        "nodeType": "Return",
                        "src": "3506:35:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDocumentKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "3204:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3204:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3203:23:0"
            },
            "returnParameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "3277:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3277:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3276:15:0"
            },
            "scope": 721,
            "src": "3180:420:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 341,
              "nodeType": "Block",
              "src": "3695:130:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 332,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 325,
                            "src": "3722:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 331,
                          "name": "docExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 166,
                          "src": "3712:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory) view returns (bool)"
                          }
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3712:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7468697320646f63756d656e7420686173206e6f74206265656e2072656769737465726564",
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3730:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68913e3a64e4c797608946bc9a85ae7f8b11554ad9d4648191620c35506dcae7",
                          "typeString": "literal_string \"this document has not been registered\""
                        },
                        "value": "this document has not been registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68913e3a64e4c797608946bc9a85ae7f8b11554ad9d4648191620c35506dcae7",
                          "typeString": "literal_string \"this document has not been registered\""
                        }
                      ],
                      "id": 330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "3704:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3704:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "3704:66:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 337,
                      "name": "_subscriptionFeePerDocId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "3786:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 339,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 338,
                      "name": "docId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 325,
                      "src": "3811:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3786:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 329,
                  "id": 340,
                  "nodeType": "Return",
                  "src": "3779:38:0"
                }
              ]
            },
            "documentation": null,
            "id": 342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSubscriptionFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 325,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "3636:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3636:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3635:23:0"
            },
            "returnParameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 328,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "3682:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3682:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3681:13:0"
            },
            "scope": 721,
            "src": "3608:217:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 381,
              "nodeType": "Block",
              "src": "3919:406:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 351,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 344,
                            "src": "3946:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 350,
                          "name": "docExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 166,
                          "src": "3936:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory) view returns (bool)"
                          }
                        },
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3936:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7468697320646f63756d656e7420686173206e6f74206265656e2072656769737465726564",
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3954:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68913e3a64e4c797608946bc9a85ae7f8b11554ad9d4648191620c35506dcae7",
                          "typeString": "literal_string \"this document has not been registered\""
                        },
                        "value": "this document has not been registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68913e3a64e4c797608946bc9a85ae7f8b11554ad9d4648191620c35506dcae7",
                          "typeString": "literal_string \"this document has not been registered\""
                        }
                      ],
                      "id": 349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "3928:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3928:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 355,
                  "nodeType": "ExpressionStatement",
                  "src": "3928:66:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 357,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 773,
                            "src": "4027:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4027:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 359,
                            "name": "_authorPerDocId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "4041:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 361,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 360,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 344,
                            "src": "4057:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4041:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4027:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c792074686520617574686f72206f662074686520646f63756d656e742063616e206368616e676520617574686f7269736174696f6e73",
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4078:59:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b88fd76f8fdc04fa6972557100435bbfaba56bde6980f4c28a2f38b4c812874",
                          "typeString": "literal_string \"only the author of the document can change authorisations\""
                        },
                        "value": "only the author of the document can change authorisations"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b88fd76f8fdc04fa6972557100435bbfaba56bde6980f4c28a2f38b4c812874",
                          "typeString": "literal_string \"only the author of the document can change authorisations\""
                        }
                      ],
                      "id": 356,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "4005:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4005:143:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "4005:143:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 366,
                        "name": "_subscriptionFeePerDocId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "4157:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 368,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 367,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "4182:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4157:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 369,
                      "name": "subscriptionFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 346,
                      "src": "4191:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4157:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "4157:49:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 373,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "4240:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4240:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 375,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "4261:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 376,
                          "name": "_subscriptionFeePerDocId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "4277:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                            "typeString": "mapping(string memory => uint256)"
                          }
                        },
                        "id": 378,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 377,
                          "name": "docId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "4302:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4277:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 372,
                      "name": "ChangeFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "4220:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256)"
                      }
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4220:97:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 380,
                  "nodeType": "EmitStatement",
                  "src": "4215:102:0"
                }
              ]
            },
            "documentation": null,
            "id": 382,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSubscriptionFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 344,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 382,
                  "src": "3861:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 343,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3861:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 346,
                  "name": "subscriptionFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 382,
                  "src": "3884:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3884:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3860:48:0"
            },
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3919:0:0"
            },
            "scope": 721,
            "src": "3833:492:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 400,
              "nodeType": "Block",
              "src": "4407:121:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 391,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 384,
                            "src": "4434:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 390,
                          "name": "docExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 166,
                          "src": "4424:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory) view returns (bool)"
                          }
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4424:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7468697320646f63756d656e7420686173206e6f74206265656e2072656769737465726564",
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4442:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68913e3a64e4c797608946bc9a85ae7f8b11554ad9d4648191620c35506dcae7",
                          "typeString": "literal_string \"this document has not been registered\""
                        },
                        "value": "this document has not been registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68913e3a64e4c797608946bc9a85ae7f8b11554ad9d4648191620c35506dcae7",
                          "typeString": "literal_string \"this document has not been registered\""
                        }
                      ],
                      "id": 389,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "4416:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4416:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "4416:66:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 396,
                      "name": "_authorPerDocId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "4498:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 398,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 397,
                      "name": "docId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 384,
                      "src": "4514:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4498:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 388,
                  "id": 399,
                  "nodeType": "Return",
                  "src": "4491:29:0"
                }
              ]
            },
            "documentation": null,
            "id": 401,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAuthor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 384,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "4352:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 383,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4352:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4351:23:0"
            },
            "returnParameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "4398:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4398:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4397:9:0"
            },
            "scope": 721,
            "src": "4333:195:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "4631:137:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 411,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "4658:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 410,
                          "name": "docExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 166,
                          "src": "4648:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory) view returns (bool)"
                          }
                        },
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4648:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7468697320646f63756d656e7420686173206e6f74206265656e2072656769737465726564",
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4666:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68913e3a64e4c797608946bc9a85ae7f8b11554ad9d4648191620c35506dcae7",
                          "typeString": "literal_string \"this document has not been registered\""
                        },
                        "value": "this document has not been registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68913e3a64e4c797608946bc9a85ae7f8b11554ad9d4648191620c35506dcae7",
                          "typeString": "literal_string \"this document has not been registered\""
                        }
                      ],
                      "id": 409,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "4640:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4640:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "4640:66:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 416,
                      "name": "_authorizedAddressArrayPerDocId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "4722:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(string memory => address[] storage ref)"
                      }
                    },
                    "id": 418,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 417,
                      "name": "docId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "4754:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4722:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 408,
                  "id": 419,
                  "nodeType": "Return",
                  "src": "4715:45:0"
                }
              ]
            },
            "documentation": null,
            "id": 421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAuthorizedAccounts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 403,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "4567:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4567:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4566:23:0"
            },
            "returnParameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "4613:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 405,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4613:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 406,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4613:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4612:18:0"
            },
            "scope": 721,
            "src": "4536:232:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 514,
              "nodeType": "Block",
              "src": "4929:764:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 433,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 773,
                            "src": "4962:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4962:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 435,
                            "name": "_authorPerDocId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "4976:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 437,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 436,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "4992:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4976:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4962:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c792074686520617574686f72206f662074686520646f63756d656e742063616e206368616e676520617574686f7269736174696f6e73",
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5013:59:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b88fd76f8fdc04fa6972557100435bbfaba56bde6980f4c28a2f38b4c812874",
                          "typeString": "literal_string \"only the author of the document can change authorisations\""
                        },
                        "value": "only the author of the document can change authorisations"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b88fd76f8fdc04fa6972557100435bbfaba56bde6980f4c28a2f38b4c812874",
                          "typeString": "literal_string \"only the author of the document can change authorisations\""
                        }
                      ],
                      "id": 432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "4940:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4940:143:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "4940:143:0"
                },
                {
                  "body": {
                    "id": 472,
                    "nodeType": "Block",
                    "src": "5148:172:0",
                    "statements": [
                      {
                        "assignments": [
                          454
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 454,
                            "name": "account",
                            "nodeType": "VariableDeclaration",
                            "scope": 472,
                            "src": "5163:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 453,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5163:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 458,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 455,
                            "name": "authorizedAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "5181:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 457,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 456,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "5201:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5181:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5163:40:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 459,
                                "name": "_authorizedAddressPerDocId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64,
                                "src": "5218:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(string memory => mapping(address => bool))"
                                }
                              },
                              "id": 462,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 460,
                                "name": "docId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 423,
                                "src": "5245:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5218:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 463,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 461,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 454,
                              "src": "5252:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5218:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5263:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5218:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 466,
                        "nodeType": "ExpressionStatement",
                        "src": "5218:49:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 468,
                              "name": "docId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "5293:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 469,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 454,
                              "src": "5300:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 467,
                            "name": "addAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 611,
                            "src": "5282:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (string memory,address)"
                            }
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5282:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 471,
                        "nodeType": "ExpressionStatement",
                        "src": "5282:26:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 446,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 443,
                      "src": "5111:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 447,
                        "name": "authorizedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 426,
                        "src": "5115:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5115:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5111:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 473,
                  "initializationExpression": {
                    "assignments": [
                      443
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 443,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 473,
                        "src": "5099:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 442,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5099:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 445,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5108:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5099:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5143:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 450,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 443,
                        "src": "5143:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 452,
                    "nodeType": "ExpressionStatement",
                    "src": "5143:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5094:226:0"
                },
                {
                  "body": {
                    "id": 503,
                    "nodeType": "Block",
                    "src": "5380:171:0",
                    "statements": [
                      {
                        "assignments": [
                          486
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 486,
                            "name": "account",
                            "nodeType": "VariableDeclaration",
                            "scope": 503,
                            "src": "5395:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 485,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5395:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 490,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 487,
                            "name": "deniedAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 429,
                            "src": "5413:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 489,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 488,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "5429:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5413:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5395:36:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "5446:49:0",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 491,
                                "name": "_authorizedAddressPerDocId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64,
                                "src": "5453:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(string memory => mapping(address => bool))"
                                }
                              },
                              "id": 493,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 492,
                                "name": "docId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 423,
                                "src": "5480:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5453:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 495,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 494,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 486,
                              "src": "5487:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5453:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 497,
                        "nodeType": "ExpressionStatement",
                        "src": "5446:49:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 499,
                              "name": "docId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 423,
                              "src": "5524:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 500,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 486,
                              "src": "5531:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 498,
                            "name": "removeAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 568,
                            "src": "5510:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (string memory,address)"
                            }
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5510:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 502,
                        "nodeType": "ExpressionStatement",
                        "src": "5510:29:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 478,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "5347:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 479,
                        "name": "deniedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "5351:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5351:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5347:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 504,
                  "initializationExpression": {
                    "assignments": [
                      475
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 475,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 504,
                        "src": "5335:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 474,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5335:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 477,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5344:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5335:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5375:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 482,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "5375:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 484,
                    "nodeType": "ExpressionStatement",
                    "src": "5375:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5330:221:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 506,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "5595:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5595:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 508,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "5618:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 509,
                          "name": "_authorizedAddressArrayPerDocId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "5636:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(string memory => address[] storage ref)"
                          }
                        },
                        "id": 511,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 510,
                          "name": "docId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "5668:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5636:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      ],
                      "id": 505,
                      "name": "ChangeAuthorized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "5566:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory,address[] memory)"
                      }
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5566:119:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 513,
                  "nodeType": "EmitStatement",
                  "src": "5561:124:0"
                }
              ]
            },
            "documentation": null,
            "id": 515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAccess",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "4805:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4805:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 426,
                  "name": "authorizedAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "4835:36:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 424,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4835:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 425,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4835:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 429,
                  "name": "deniedAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "4882:32:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 427,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4882:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 428,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4882:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4794:127:0"
            },
            "returnParameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4929:0:0"
            },
            "scope": 721,
            "src": "4776:917:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 567,
              "nodeType": "Block",
              "src": "5770:410:0",
              "statements": [
                {
                  "assignments": [
                    525
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 525,
                      "name": "addresses",
                      "nodeType": "VariableDeclaration",
                      "scope": 567,
                      "src": "5779:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 523,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5779:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 524,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5779:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 529,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 526,
                      "name": "_authorizedAddressArrayPerDocId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "5809:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(string memory => address[] storage ref)"
                      }
                    },
                    "id": 528,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 527,
                      "name": "docId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 517,
                      "src": "5841:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5809:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5779:68:0"
                },
                {
                  "body": {
                    "id": 565,
                    "nodeType": "Block",
                    "src": "5902:271:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 541,
                              "name": "addresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 525,
                              "src": "5917:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            },
                            "id": 543,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 542,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 531,
                              "src": "5927:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5917:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 544,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 519,
                            "src": "5933:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5917:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 564,
                        "nodeType": "IfStatement",
                        "src": "5913:251:0",
                        "trueBody": {
                          "id": 563,
                          "nodeType": "Block",
                          "src": "5942:222:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 546,
                                    "name": "addresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 525,
                                    "src": "6012:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[] storage pointer"
                                    }
                                  },
                                  "id": 548,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 547,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 531,
                                    "src": "6022:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6012:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 549,
                                    "name": "addresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 525,
                                    "src": "6027:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[] storage pointer"
                                    }
                                  },
                                  "id": 554,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 553,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 550,
                                        "name": "addresses",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 525,
                                        "src": "6037:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                          "typeString": "address[] storage pointer"
                                        }
                                      },
                                      "id": 551,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "6037:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 552,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6056:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "6037:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6027:31:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "6012:46:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 556,
                              "nodeType": "ExpressionStatement",
                              "src": "6012:46:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 557,
                                    "name": "addresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 525,
                                    "src": "6071:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[] storage pointer"
                                    }
                                  },
                                  "id": 559,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pop",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "6071:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 560,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6071:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 561,
                              "nodeType": "ExpressionStatement",
                              "src": "6071:15:0"
                            },
                            {
                              "expression": null,
                              "functionReturnParameters": 521,
                              "id": 562,
                              "nodeType": "Return",
                              "src": "6146:7:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 534,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 531,
                      "src": "5875:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 535,
                        "name": "addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 525,
                        "src": "5879:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 536,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5879:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5875:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 566,
                  "initializationExpression": {
                    "assignments": [
                      531
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 531,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 566,
                        "src": "5861:8:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 530,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5861:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 533,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5872:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5861:12:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5897:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 538,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 531,
                        "src": "5897:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 540,
                    "nodeType": "ExpressionStatement",
                    "src": "5897:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5856:317:0"
                }
              ]
            },
            "documentation": null,
            "id": 568,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAccount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 517,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "5724:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5724:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 519,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 568,
                  "src": "5745:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5745:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5723:38:0"
            },
            "returnParameters": {
              "id": 521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5770:0:0"
            },
            "scope": 721,
            "src": "5701:479:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 610,
              "nodeType": "Block",
              "src": "6254:305:0",
              "statements": [
                {
                  "assignments": [
                    578
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 578,
                      "name": "addresses",
                      "nodeType": "VariableDeclaration",
                      "scope": 610,
                      "src": "6263:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 576,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6263:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 577,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "6263:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 582,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 579,
                      "name": "_authorizedAddressArrayPerDocId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "6293:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(string memory => address[] storage ref)"
                      }
                    },
                    "id": 581,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 580,
                      "name": "docId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 570,
                      "src": "6325:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6293:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6263:68:0"
                },
                {
                  "body": {
                    "id": 602,
                    "nodeType": "Block",
                    "src": "6386:115:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 594,
                              "name": "addresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
                              "src": "6401:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            },
                            "id": 596,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 595,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "6411:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6401:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 597,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 572,
                            "src": "6417:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6401:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 601,
                        "nodeType": "IfStatement",
                        "src": "6397:95:0",
                        "trueBody": {
                          "id": 600,
                          "nodeType": "Block",
                          "src": "6426:66:0",
                          "statements": [
                            {
                              "expression": null,
                              "functionReturnParameters": 574,
                              "id": 599,
                              "nodeType": "Return",
                              "src": "6474:7:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 587,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 584,
                      "src": "6359:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 588,
                        "name": "addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "6363:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 589,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6363:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6359:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 603,
                  "initializationExpression": {
                    "assignments": [
                      584
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 584,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 603,
                        "src": "6345:8:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 583,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6345:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 586,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6356:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6345:12:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6381:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 591,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "6381:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 593,
                    "nodeType": "ExpressionStatement",
                    "src": "6381:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "6340:161:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 607,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 572,
                        "src": "6524:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 604,
                        "name": "addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "6509:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6509:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6509:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "6509:23:0"
                }
              ]
            },
            "documentation": null,
            "id": 611,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAccount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 570,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 611,
                  "src": "6208:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 569,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6208:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 572,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 611,
                  "src": "6229:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 571,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6229:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6207:38:0"
            },
            "returnParameters": {
              "id": 574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6254:0:0"
            },
            "scope": 721,
            "src": "6188:371:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 686,
              "nodeType": "Block",
              "src": "6626:707:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 617,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 773,
                                  "src": "6660:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 618,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "6660:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 619,
                                  "name": "_authorPerDocId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54,
                                  "src": "6674:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                                    "typeString": "mapping(string memory => address)"
                                  }
                                },
                                "id": 621,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 620,
                                  "name": "docId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 613,
                                  "src": "6690:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6674:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6660:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 623,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6659:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6718:46:0",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 624,
                                "name": "_authorizedAddressPerDocId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64,
                                "src": "6719:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(string memory => mapping(address => bool))"
                                }
                              },
                              "id": 626,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 625,
                                "name": "docId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 613,
                                "src": "6746:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6719:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 629,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 627,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 773,
                                "src": "6753:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6753:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6719:45:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6659:105:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6163636f756e742068617320616c7265616479207375627363726962656420746f207468697320646f63756d656e74",
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6779:49:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a344d4ac7aef7e35c54d89795620eb13b805ee1f7b96e926b3f27785cca2731",
                          "typeString": "literal_string \"account has already subscribed to this document\""
                        },
                        "value": "account has already subscribed to this document"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a344d4ac7aef7e35c54d89795620eb13b805ee1f7b96e926b3f27785cca2731",
                          "typeString": "literal_string \"account has already subscribed to this document\""
                        }
                      ],
                      "id": 616,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "6637:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6637:202:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 634,
                  "nodeType": "ExpressionStatement",
                  "src": "6637:202:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 636,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 773,
                            "src": "6872:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6872:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 638,
                            "name": "_subscriptionFeePerDocId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "6885:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                              "typeString": "mapping(string memory => uint256)"
                            }
                          },
                          "id": 640,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 639,
                            "name": "docId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 613,
                            "src": "6910:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6885:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6872:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f7567682066656520746f2073756273637269626520746f207468697320646f63756d656e74",
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6931:46:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b94ce032c0face3589eacf61c5a4ad0e5f4b75b01f8dc3ee1a4281ab86bb3dee",
                          "typeString": "literal_string \"not enough fee to subscribe to this document\""
                        },
                        "value": "not enough fee to subscribe to this document"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b94ce032c0face3589eacf61c5a4ad0e5f4b75b01f8dc3ee1a4281ab86bb3dee",
                          "typeString": "literal_string \"not enough fee to subscribe to this document\""
                        }
                      ],
                      "id": 635,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "6850:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6850:138:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 644,
                  "nodeType": "ExpressionStatement",
                  "src": "6850:138:0"
                },
                {
                  "assignments": [
                    646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 646,
                      "name": "author",
                      "nodeType": "VariableDeclaration",
                      "scope": 686,
                      "src": "6999:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 645,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6999:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 654,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 649,
                              "name": "_authorPerDocId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "7040:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 651,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 650,
                              "name": "docId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 613,
                              "src": "7056:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7040:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7032:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": "uint160"
                        },
                        "id": 652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7032:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "id": 647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7024:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7024:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6999:65:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 658,
                          "name": "_subscriptionFeePerDocId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "7091:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint256_$",
                            "typeString": "mapping(string memory => uint256)"
                          }
                        },
                        "id": 660,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 659,
                          "name": "docId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 613,
                          "src": "7116:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7091:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 655,
                        "name": "author",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 646,
                        "src": "7075:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7075:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7075:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 662,
                  "nodeType": "ExpressionStatement",
                  "src": "7075:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 663,
                          "name": "_authorizedAddressPerDocId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "7134:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(string memory => mapping(address => bool))"
                          }
                        },
                        "id": 667,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 664,
                          "name": "docId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 613,
                          "src": "7161:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7134:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 668,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 665,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "7168:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7168:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7134:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7182:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7134:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "7134:52:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 673,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "7208:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 674,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "7215:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7215:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 672,
                      "name": "addAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 611,
                      "src": "7197:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7197:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 677,
                  "nodeType": "ExpressionStatement",
                  "src": "7197:29:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 679,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "7264:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7264:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 681,
                        "name": "docId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "7287:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 682,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "7305:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7305:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 678,
                      "name": "Subscribe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "7242:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256)"
                      }
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7242:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 685,
                  "nodeType": "EmitStatement",
                  "src": "7237:88:0"
                }
              ]
            },
            "documentation": null,
            "id": 687,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "subscribe",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 613,
                  "name": "docId",
                  "nodeType": "VariableDeclaration",
                  "scope": 687,
                  "src": "6586:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 612,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6586:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6585:23:0"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6626:0:0"
            },
            "scope": 721,
            "src": "6567:766:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 719,
              "nodeType": "Block",
              "src": "7414:274:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 697,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 689,
                          "src": "7447:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 699,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 789,
                                "src": "7465:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DVSRegistry_$721",
                                  "typeString": "contract DVSRegistry"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DVSRegistry_$721",
                                  "typeString": "contract DVSRegistry"
                                }
                              ],
                              "id": 698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7457:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7457:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7457:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7447:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "72657175657374656420616d6f756e7420746f6f206869676820636f6d706172656420746f2061637475616c2062616c616e6365",
                        "id": 703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7493:54:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38918cc1803de48a05dfb38d68e7ce63d710e43c9f13561266c1c0dcd968863e",
                          "typeString": "literal_string \"requested amount too high compared to actual balance\""
                        },
                        "value": "requested amount too high compared to actual balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38918cc1803de48a05dfb38d68e7ce63d710e43c9f13561266c1c0dcd968863e",
                          "typeString": "literal_string \"requested amount too high compared to actual balance\""
                        }
                      ],
                      "id": 696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        776,
                        777
                      ],
                      "referencedDeclaration": 777,
                      "src": "7425:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7425:133:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "7425:133:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 709,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "7581:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 706,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "7569:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7569:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7569:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 711,
                  "nodeType": "ExpressionStatement",
                  "src": "7569:19:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 713,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "7625:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7625:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 715,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "7648:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 716,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "7663:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 712,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "7604:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7604:76:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 718,
                  "nodeType": "EmitStatement",
                  "src": "7599:81:0"
                }
              ]
            },
            "documentation": null,
            "id": 720,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 694,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 693,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 50,
                  "src": "7404:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7404:9:0"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 689,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "7359:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7359:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 691,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "7375:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7375:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7358:36:0"
            },
            "returnParameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7414:0:0"
            },
            "scope": 721,
            "src": "7341:347:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 722,
        "src": "326:7367:0"
      }
    ],
    "src": "0:7695:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x4529acb53914524bf180c507c1eb8eeb81367eb035e966ee8245cdfc55fdb091": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "docId",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address[]",
              "name": "authorized",
              "type": "address[]"
            }
          ],
          "name": "ChangeAuthorized",
          "type": "event"
        },
        "0x995c2f50a2357ccc0ad2d6fc17e45e986e6b92f4ecc6fb5f633bd7fea7c3a17b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "docId",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ],
          "name": "ChangeFee",
          "type": "event"
        },
        "0xcf92c0af1412baa9e061faf28dfbcfeec3841ef9c2ad32f08faae31330fb9375": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "docId",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "key",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address[]",
              "name": "authorized",
              "type": "address[]"
            }
          ],
          "name": "Register",
          "type": "event"
        },
        "0xb2c1a860b7618079531666a12a66f643ad0c88aadd23c9d1964d2146813539b2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "docId",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Subscribe",
          "type": "event"
        },
        "0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Withdraw",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x0a20F9fB738411C0cdb78ADAA0C9E5b95E5C5adA",
      "transactionHash": "0x0ead969d0df707a322810e9b6e444c926ba8eca1fa8ee3973b4319f767e7c94e"
    },
    "5777": {
      "events": {
        "0x4529acb53914524bf180c507c1eb8eeb81367eb035e966ee8245cdfc55fdb091": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "docId",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address[]",
              "name": "authorized",
              "type": "address[]"
            }
          ],
          "name": "ChangeAuthorized",
          "type": "event"
        },
        "0x995c2f50a2357ccc0ad2d6fc17e45e986e6b92f4ecc6fb5f633bd7fea7c3a17b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "docId",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ],
          "name": "ChangeFee",
          "type": "event"
        },
        "0xcf92c0af1412baa9e061faf28dfbcfeec3841ef9c2ad32f08faae31330fb9375": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "docId",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "key",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address[]",
              "name": "authorized",
              "type": "address[]"
            }
          ],
          "name": "Register",
          "type": "event"
        },
        "0xb2c1a860b7618079531666a12a66f643ad0c88aadd23c9d1964d2146813539b2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "docId",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Subscribe",
          "type": "event"
        },
        "0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Withdraw",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x981809f2DF4385CD6d4b1461D9623285161b57DF",
      "transactionHash": "0x64561e6de3709a9eac9fe955d5d64ec6a997d13e77860454078101066f60e404"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-26T17:11:59.083Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}
'''
'''--- e2e/protractor.conf.js ---
// @ts-check
// Protractor configuration file, see link for more information
// https://github.com/angular/protractor/blob/master/lib/config.ts

const { SpecReporter } = require('jasmine-spec-reporter');

/**
 * @type { import("protractor").Config }
 */
exports.config = {
  allScriptsTimeout: 11000,
  specs: [
    './src/**/*.e2e-spec.ts'
  ],
  capabilities: {
    browserName: 'chrome'
  },
  directConnect: true,
  baseUrl: 'http://localhost:4200/',
  framework: 'jasmine',
  jasmineNodeOpts: {
    showColors: true,
    defaultTimeoutInterval: 30000,
    print: function() {}
  },
  onPrepare() {
    require('ts-node').register({
      project: require('path').join(__dirname, './tsconfig.json')
    });
    jasmine.getEnv().addReporter(new SpecReporter({ spec: { displayStacktrace: true } }));
  }
};
'''
'''--- e2e/src/app.e2e-spec.ts ---
import { AppPage } from './app.po';
import { browser, logging } from 'protractor';

describe('workspace-project App', () => {
  let page: AppPage;

  beforeEach(() => {
    page = new AppPage();
  });

  it('should display welcome message', () => {
    page.navigateTo();
    expect(page.getTitleText()).toEqual('arweave-ng app is running!');
  });

  afterEach(async () => {
    // Assert that there are no errors emitted from the browser
    const logs = await browser.manage().logs().get(logging.Type.BROWSER);
    expect(logs).not.toContain(jasmine.objectContaining({
      level: logging.Level.SEVERE,
    } as logging.Entry));
  });
});

'''
'''--- e2e/src/app.po.ts ---
import { browser, by, element } from 'protractor';

export class AppPage {
  navigateTo(): Promise<unknown> {
    return browser.get(browser.baseUrl) as Promise<unknown>;
  }

  getTitleText(): Promise<string> {
    return element(by.css('app-root .content span')).getText() as Promise<string>;
  }
}

'''
'''--- e2e/tsconfig.json ---
{
  "extends": "../tsconfig.json",
  "compilerOptions": {
    "outDir": "../out-tsc/e2e",
    "module": "commonjs",
    "target": "es5",
    "types": [
      "jasmine",
      "jasminewd2",
      "node"
    ]
  }
}

'''
'''--- fakeArweave/.travis.yml ---
language: node_js
node_js:
  - 'node'
script:
  - npm run build  # build
  - npm run coverage  # run mocha unit tests with coverage
after_script:
  - 'cat coverage/lcov.info | ./node_modules/.bin/coveralls' # sends the coverage report to coveralls

'''
'''--- fakeArweave/.vscode/settings.json ---
{
    "typescript.tsdk": "node_modules/typescript/lib/"
}

'''
'''--- fakeArweave/.vscode/tasks.json ---
{
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format
  "version": "2.0.0",
  "tasks": [
    {
      "taskName": "Run current file",
      "command": "ts-node ${relativeFile}",
      "type": "shell",
      "problemMatcher": []
    },
    {
      "type": "npm",
      "label": "clean",
      "script": "clean",
      "problemMatcher": []
    },
    {
      "type": "npm",
      "label": "build",
      "script": "build",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher":[]
    },
    {
      "type": "npm",
      "label": "format",
      "script": "format",
      "problemMatcher": []
    },
    {
      "type": "npm",
      "label": "coverage",
      "script": "coverage",
      "problemMatcher": []
    },
    {
      "type": "npm",
      "label": "test",
      "script": "test",
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "problemMatcher": []
    },
    {
      "type": "npm",
      "label": "lint",
      "script": "lint",
      "problemMatcher": [
        "$eslint-stylish"
      ]
    }
  ]
}

'''
'''--- fakeArweave/README.md ---
This project has been generated using the generator: https://github.com/opitzconsulting/generator-node-express-typescript

```console
yo node-express-typescript --mocha
```

[![Build Status](https://travis-ci.org/{{github-user-name}}/{{github-app-name}}.svg?branch=master)](https://travis-ci.org/{{github-user-name}}/{{github-app-name}}.svg?branch=master)
[![Coverage Status](https://coveralls.io/repos/github/{{github-user-name}}/{{github-app-name}}/badge.svg?branch=master)](https://coveralls.io/github/{{github-user-name}}/{{github-app-name}}?branch=master)
[![MIT license](http://img.shields.io/badge/license-MIT-brightgreen.svg)](http://opensource.org/licenses/MIT)

# Using this module in other modules

Here is a quick example of how this module can be used in other modules. The [TypeScript Module Resolution Logic](https://www.typescriptlang.org/docs/handbook/module-resolution.html) makes it quite easy. The file `src/index.ts` is a [barrel](https://basarat.gitbooks.io/typescript/content/docs/tips/barrel.html) that re-exports selected exports from other files. The _package.json_ file contains `main` attribute that points to the generated `lib/index.js` file and `typings` attribute that points to the generated `lib/index.d.ts` file.

> If you are planning to have code in multiple files (which is quite natural for a NodeJS module) that users can import, make sure you update `src/index.ts` file appropriately.

Now assuming you have published this amazing module to _npm_ with the name `my-amazing-lib`, and installed it in the module in which you need it -

- To use the `Greeter` class in a TypeScript file -

```ts
import { Greeter } from "my-amazing-lib";

const greeter = new Greeter("World!");
greeter.greet();
```

- To use the `Greeter` class in a JavaScript file -

```js
const Greeter = require('my-amazing-lib').Greeter;

const greeter = new Greeter('World!');
greeter.greet();
```

## Setting travis and coveralls badges
1. Sign in to [travis](https://travis-ci.org/) and activate the build for your project.
2. Sign in to [coveralls](https://coveralls.io/) and activate the build for your project.
3. Replace {{github-user-name}}/{{github-app-name}} with your repo details like: "ospatil/generator-node-typescript".

'''
'''--- fakeArweave/package-lock.json ---
{
  "name": "fake-arweave",
  "version": "0.0.0",
  "lockfileVersion": 1,
  "requires": true,
  "dependencies": {
    "@babel/code-frame": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.8.3.tgz",
      "integrity": "sha512-a9gxpmdXtZEInkCSHUJDLHZVBgb1QS0jhss4cPP93EW7s+uC5bikET2twEF3KV+7rDblJcmNvTR7VJejqd2C2g==",
      "dev": true,
      "requires": {
        "@babel/highlight": "^7.8.3"
      }
    },
    "@babel/highlight": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.8.3.tgz",
      "integrity": "sha512-PX4y5xQUvy0fnEVHrYOarRPXVWafSjTW9T0Hab8gVIawpl2Sj0ORyrygANq+KjcNlSSTw0YCLSNA8OyZ1I4yEg==",
      "dev": true,
      "requires": {
        "chalk": "^2.0.0",
        "esutils": "^2.0.2",
        "js-tokens": "^4.0.0"
      }
    },
    "@types/body-parser": {
      "version": "1.19.0",
      "resolved": "https://registry.npmjs.org/@types/body-parser/-/body-parser-1.19.0.tgz",
      "integrity": "sha512-W98JrE0j2K78swW4ukqMleo8R7h/pFETjM2DQ90MF6XK2i4LO4W3gQ71Lt4w3bfm2EvVSyWHplECvB5sK22yFQ==",
      "dev": true,
      "requires": {
        "@types/connect": "*",
        "@types/node": "*"
      }
    },
    "@types/chai": {
      "version": "3.5.2",
      "resolved": "https://registry.npmjs.org/@types/chai/-/chai-3.5.2.tgz",
      "integrity": "sha1-wRzSgX06QBt7oPWkIPNcVhObHB4=",
      "dev": true
    },
    "@types/connect": {
      "version": "3.4.33",
      "resolved": "https://registry.npmjs.org/@types/connect/-/connect-3.4.33.tgz",
      "integrity": "sha512-2+FrkXY4zllzTNfJth7jOqEHC+enpLeGslEhpnTAkg21GkRrWV4SsAtqchtT4YS9/nODBU2/ZfsBY2X4J/dX7A==",
      "dev": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/cors": {
      "version": "2.8.6",
      "resolved": "https://registry.npmjs.org/@types/cors/-/cors-2.8.6.tgz",
      "integrity": "sha512-invOmosX0DqbpA+cE2yoHGUlF/blyf7nB0OGYBBiH27crcVm5NmFaZkLP4Ta1hGaesckCi5lVLlydNJCxkTOSg==",
      "dev": true,
      "requires": {
        "@types/express": "*"
      }
    },
    "@types/express": {
      "version": "4.17.3",
      "resolved": "https://registry.npmjs.org/@types/express/-/express-4.17.3.tgz",
      "integrity": "sha512-I8cGRJj3pyOLs/HndoP+25vOqhqWkAZsWMEmq1qXy/b/M3ppufecUwaK2/TVDVxcV61/iSdhykUjQQ2DLSrTdg==",
      "dev": true,
      "requires": {
        "@types/body-parser": "*",
        "@types/express-serve-static-core": "*",
        "@types/serve-static": "*"
      }
    },
    "@types/express-serve-static-core": {
      "version": "4.17.2",
      "resolved": "https://registry.npmjs.org/@types/express-serve-static-core/-/express-serve-static-core-4.17.2.tgz",
      "integrity": "sha512-El9yMpctM6tORDAiBwZVLMcxoTMcqqRO9dVyYcn7ycLWbvR8klrDn8CAOwRfZujZtWD7yS/mshTdz43jMOejbg==",
      "dev": true,
      "requires": {
        "@types/node": "*",
        "@types/range-parser": "*"
      }
    },
    "@types/mime": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/@types/mime/-/mime-2.0.1.tgz",
      "integrity": "sha512-FwI9gX75FgVBJ7ywgnq/P7tw+/o1GUbtP0KzbtusLigAOgIgNISRK0ZPl4qertvXSIE8YbsVJueQ90cDt9YYyw==",
      "dev": true
    },
    "@types/mocha": {
      "version": "2.2.48",
      "resolved": "https://registry.npmjs.org/@types/mocha/-/mocha-2.2.48.tgz",
      "integrity": "sha512-nlK/iyETgafGli8Zh9zJVCTicvU3iajSkRwOh3Hhiva598CMqNJ4NcVCGMTGKpGpTYj/9R8RLzS9NAykSSCqGw==",
      "dev": true
    },
    "@types/node": {
      "version": "8.10.59",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-8.10.59.tgz",
      "integrity": "sha512-8RkBivJrDCyPpBXhVZcjh7cQxVBSmRk9QM7hOketZzp6Tg79c0N8kkpAIito9bnJ3HCVCHVYz+KHTEbfQNfeVQ==",
      "dev": true
    },
    "@types/range-parser": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/@types/range-parser/-/range-parser-1.2.3.tgz",
      "integrity": "sha512-ewFXqrQHlFsgc09MK5jP5iR7vumV/BYayNC6PgJO2LPe8vrnNFyjQjSppfEngITi0qvfKtzFvgKymGheFM9UOA==",
      "dev": true
    },
    "@types/serve-static": {
      "version": "1.13.3",
      "resolved": "https://registry.npmjs.org/@types/serve-static/-/serve-static-1.13.3.tgz",
      "integrity": "sha512-oprSwp094zOglVrXdlo/4bAHtKTAxX6VT8FOZlBKrmyLbNvE1zxZyJ6yikMVtHIvwP45+ZQGJn+FdXGKTozq0g==",
      "dev": true,
      "requires": {
        "@types/express-serve-static-core": "*",
        "@types/mime": "*"
      }
    },
    "@types/sqlite3": {
      "version": "3.1.6",
      "resolved": "https://registry.npmjs.org/@types/sqlite3/-/sqlite3-3.1.6.tgz",
      "integrity": "sha512-OBsK0KIGUICExQ/ZvnPY4cKx5Kz4NcrVyGTIvOL5y4ajXu7r++RfBajfpGfGDmDVCKcoCDX1dO84/oeyeITnxA==",
      "dev": true,
      "requires": {
        "@types/node": "*"
      }
    },
    "abbrev": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",
      "integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q=="
    },
    "accepts": {
      "version": "1.3.7",
      "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.7.tgz",
      "integrity": "sha512-Il80Qs2WjYlJIBNzNkK6KYqlVMTbZLXgHx2oT0pU/fjRHyEp+PEfEPY0R3WCwAGVOtauxh1hOxNgIf5bv7dQpA==",
      "requires": {
        "mime-types": "~2.1.24",
        "negotiator": "0.6.2"
      }
    },
    "ajv": {
      "version": "6.12.0",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.0.tgz",
      "integrity": "sha512-D6gFiFA0RRLyUbvijN74DWAjXSFxWKaWP7mldxkVhyhAV3+SWA9HEJPHQ2c9soIeTFJqcSdFDGFgdqs1iUU2Hw==",
      "requires": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      }
    },
    "ansi-regex": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
      "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="
    },
    "ansi-styles": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
      "dev": true,
      "requires": {
        "color-convert": "^1.9.0"
      }
    },
    "aproba": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/aproba/-/aproba-1.2.0.tgz",
      "integrity": "sha512-Y9J6ZjXtoYh8RnXVCMOU/ttDmk1aBjunq9vO0ta5x85WDQiQfUF9sIPBITdbiiIVcBo03Hi3jMxigBtsddlXRw=="
    },
    "are-we-there-yet": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/are-we-there-yet/-/are-we-there-yet-1.1.5.tgz",
      "integrity": "sha512-5hYdAkZlcG8tOLujVDTgCT+uPX0VnpAH28gWsLfzpXYm7wP6mp5Q/gYyR7YQ0cKVJcXJnl3j2kpBan13PtQf6w==",
      "requires": {
        "delegates": "^1.0.0",
        "readable-stream": "^2.0.6"
      }
    },
    "argparse": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
      "dev": true,
      "requires": {
        "sprintf-js": "~1.0.2"
      }
    },
    "array-flatten": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
      "integrity": "sha1-ml9pkFGx5wczKPKgCJaLZOopVdI="
    },
    "arrify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz",
      "integrity": "sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0=",
      "dev": true
    },
    "asn1": {
      "version": "0.2.4",
      "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz",
      "integrity": "sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==",
      "requires": {
        "safer-buffer": "~2.1.0"
      }
    },
    "assert-plus": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-0.2.0.tgz",
      "integrity": "sha1-104bh+ev/A24qttwIfP+SBAasjQ=",
      "dev": true
    },
    "assertion-error": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/assertion-error/-/assertion-error-1.1.0.tgz",
      "integrity": "sha512-jgsaNduz+ndvGyFt3uSuWqvy4lCnIJiovtouQN5JZHOKCS2QuhEdbcQHFhVksz2N2U9hXJo8odG7ETyWlEeuDw==",
      "dev": true
    },
    "asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha1-x57Zf380y48robyXkLzDZkdLS3k="
    },
    "aws-sign2": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.6.0.tgz",
      "integrity": "sha1-FDQt0428yU0OW4fXY81jYSwOeU8=",
      "dev": true
    },
    "aws4": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.9.1.tgz",
      "integrity": "sha512-wMHVg2EOHaMRxbzgFJ9gtjOOCrI80OHLG14rxi28XwOW8ux6IiEbRCGGGqCtdAIg4FQCbW20k9RsT4y3gJlFug=="
    },
    "balanced-match": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz",
      "integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c="
    },
    "bcrypt-pbkdf": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
      "integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
      "requires": {
        "tweetnacl": "^0.14.3"
      }
    },
    "body-parser": {
      "version": "1.19.0",
      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.19.0.tgz",
      "integrity": "sha512-dhEPs72UPbDnAQJ9ZKMNTP6ptJaionhP5cBb541nXPlW60Jepo9RV/a4fX4XWW9CuFNK22krhrj1+rgzifNCsw==",
      "requires": {
        "bytes": "3.1.0",
        "content-type": "~1.0.4",
        "debug": "2.6.9",
        "depd": "~1.1.2",
        "http-errors": "1.7.2",
        "iconv-lite": "0.4.24",
        "on-finished": "~2.3.0",
        "qs": "6.7.0",
        "raw-body": "2.4.0",
        "type-is": "~1.6.17"
      },
      "dependencies": {
        "qs": {
          "version": "6.7.0",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.7.0.tgz",
          "integrity": "sha512-VCdBRNFTX1fyE7Nb6FYoURo/SPe62QCaAyzJvUjwRaIsc+NePBEniHlvxFmmX56+HZphIGtV0XeCirBtpDrTyQ=="
        }
      }
    },
    "boom": {
      "version": "2.10.1",
      "resolved": "https://registry.npmjs.org/boom/-/boom-2.10.1.tgz",
      "integrity": "sha1-OciRjO/1eZ+D+UkqhI9iWt0Mdm8=",
      "dev": true,
      "requires": {
        "hoek": "2.x.x"
      }
    },
    "brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "requires": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "browser-stdout": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/browser-stdout/-/browser-stdout-1.3.0.tgz",
      "integrity": "sha1-81HTKWnTL6XXpVZxVCY9korjvR8=",
      "dev": true
    },
    "builtin-modules": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/builtin-modules/-/builtin-modules-1.1.1.tgz",
      "integrity": "sha1-Jw8HbFpywC9bZaR9+Uxf46J4iS8=",
      "dev": true
    },
    "bytes": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.0.tgz",
      "integrity": "sha512-zauLjrfCG+xvoyaqLoV8bLVXXNGC4JqlxFCutSDWA6fJrTo2ZuvLYTqZ7aHBLZSMOopbzwv8f+wZcVzfVTI2Dg=="
    },
    "caseless": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.11.0.tgz",
      "integrity": "sha1-cVuW6phBWTzDMGeSP17GDr2k99c=",
      "dev": true
    },
    "chai": {
      "version": "3.5.0",
      "resolved": "https://registry.npmjs.org/chai/-/chai-3.5.0.tgz",
      "integrity": "sha1-TQJjewZ/6Vi9v906QOxW/vc3Mkc=",
      "dev": true,
      "requires": {
        "assertion-error": "^1.0.1",
        "deep-eql": "^0.1.3",
        "type-detect": "^1.0.0"
      }
    },
    "chalk": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
      "dev": true,
      "requires": {
        "ansi-styles": "^3.2.1",
        "escape-string-regexp": "^1.0.5",
        "supports-color": "^5.3.0"
      },
      "dependencies": {
        "has-flag": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
          "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",
          "dev": true
        },
        "supports-color": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "chownr": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
      "integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg=="
    },
    "code-point-at": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",
      "integrity": "sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c="
    },
    "color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "dev": true,
      "requires": {
        "color-name": "1.1.3"
      }
    },
    "color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",
      "dev": true
    },
    "combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "requires": {
        "delayed-stream": "~1.0.0"
      }
    },
    "commander": {
      "version": "2.20.3",
      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
      "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
      "dev": true
    },
    "concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="
    },
    "console-control-strings": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/console-control-strings/-/console-control-strings-1.1.0.tgz",
      "integrity": "sha1-PXz0Rk22RG6mRL9LOVB/mFEAjo4="
    },
    "content-disposition": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.3.tgz",
      "integrity": "sha512-ExO0774ikEObIAEV9kDo50o+79VCUdEB6n6lzKgGwupcVeRlhrj3qGAfwq8G6uBJjkqLrhT0qEYFcWng8z1z0g==",
      "requires": {
        "safe-buffer": "5.1.2"
      }
    },
    "content-type": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz",
      "integrity": "sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA=="
    },
    "cookie": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.4.0.tgz",
      "integrity": "sha512-+Hp8fLp57wnUSt0tY0tHEXh4voZRDnoIrZPqlo3DPiI4y9lwg/jqx+1Om94/W6ZaPDOUbnjOt/99w66zk+l1Xg=="
    },
    "cookie-signature": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
      "integrity": "sha1-4wOogrNCzD7oylE6eZmXNNqzriw="
    },
    "core-util-is": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
      "integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac="
    },
    "cors": {
      "version": "2.8.5",
      "resolved": "https://registry.npmjs.org/cors/-/cors-2.8.5.tgz",
      "integrity": "sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==",
      "requires": {
        "object-assign": "^4",
        "vary": "^1"
      }
    },
    "coveralls": {
      "version": "2.13.3",
      "resolved": "https://registry.npmjs.org/coveralls/-/coveralls-2.13.3.tgz",
      "integrity": "sha512-iiAmn+l1XqRwNLXhW8Rs5qHZRFMYp9ZIPjEOVRpC/c4so6Y/f4/lFi0FfR5B9cCqgyhkJ5cZmbvcVRfP8MHchw==",
      "dev": true,
      "requires": {
        "js-yaml": "3.6.1",
        "lcov-parse": "0.0.10",
        "log-driver": "1.2.5",
        "minimist": "1.2.0",
        "request": "2.79.0"
      },
      "dependencies": {
        "minimist": {
          "version": "1.2.0",
          "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz",
          "integrity": "sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ=",
          "dev": true
        }
      }
    },
    "cryptiles": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/cryptiles/-/cryptiles-2.0.5.tgz",
      "integrity": "sha1-O9/s3GCBR8HGcgL6KR59ylnqo7g=",
      "dev": true,
      "requires": {
        "boom": "2.x.x"
      }
    },
    "dashdash": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
      "integrity": "sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=",
      "requires": {
        "assert-plus": "^1.0.0"
      },
      "dependencies": {
        "assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU="
        }
      }
    },
    "debug": {
      "version": "2.6.9",
      "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
      "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
      "requires": {
        "ms": "2.0.0"
      }
    },
    "deep-eql": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/deep-eql/-/deep-eql-0.1.3.tgz",
      "integrity": "sha1-71WKyrjeJSBs1xOQbXTlaTDrafI=",
      "dev": true,
      "requires": {
        "type-detect": "0.1.1"
      },
      "dependencies": {
        "type-detect": {
          "version": "0.1.1",
          "resolved": "https://registry.npmjs.org/type-detect/-/type-detect-0.1.1.tgz",
          "integrity": "sha1-C6XsKohWQORw6k6FBZcZANrFiCI=",
          "dev": true
        }
      }
    },
    "deep-extend": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.6.0.tgz",
      "integrity": "sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA=="
    },
    "delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha1-3zrhmayt+31ECqrgsp4icrJOxhk="
    },
    "delegates": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delegates/-/delegates-1.0.0.tgz",
      "integrity": "sha1-hMbhWbgZBP3KWaDvRM2HDTElD5o="
    },
    "depd": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
      "integrity": "sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak="
    },
    "destroy": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.0.4.tgz",
      "integrity": "sha1-l4hXRCxEdJ5CBmE+N5RiBYJqvYA="
    },
    "detect-libc": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-1.0.3.tgz",
      "integrity": "sha1-+hN8S9aY7fVc1c0CrFWfkaTEups="
    },
    "diff": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/diff/-/diff-3.2.0.tgz",
      "integrity": "sha1-yc45Okt8vQsFinJck98pkCeGj/k=",
      "dev": true
    },
    "ecc-jsbn": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
      "integrity": "sha1-OoOpBOVDUyh4dMVkt1SThoSamMk=",
      "requires": {
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.1.0"
      }
    },
    "ee-first": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
      "integrity": "sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0="
    },
    "encodeurl": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
      "integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k="
    },
    "escape-html": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
      "integrity": "sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg="
    },
    "escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
      "dev": true
    },
    "esprima": {
      "version": "2.7.3",
      "resolved": "https://registry.npmjs.org/esprima/-/esprima-2.7.3.tgz",
      "integrity": "sha1-luO3DVd59q1JzQMmc9HDEnZ7pYE=",
      "dev": true
    },
    "esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true
    },
    "etag": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
      "integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc="
    },
    "express": {
      "version": "4.17.1",
      "resolved": "https://registry.npmjs.org/express/-/express-4.17.1.tgz",
      "integrity": "sha512-mHJ9O79RqluphRrcw2X/GTh3k9tVv8YcoyY4Kkh4WDMUYKRZUq0h1o0w2rrrxBqM7VoeUVqgb27xlEMXTnYt4g==",
      "requires": {
        "accepts": "~1.3.7",
        "array-flatten": "1.1.1",
        "body-parser": "1.19.0",
        "content-disposition": "0.5.3",
        "content-type": "~1.0.4",
        "cookie": "0.4.0",
        "cookie-signature": "1.0.6",
        "debug": "2.6.9",
        "depd": "~1.1.2",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "finalhandler": "~1.1.2",
        "fresh": "0.5.2",
        "merge-descriptors": "1.0.1",
        "methods": "~1.1.2",
        "on-finished": "~2.3.0",
        "parseurl": "~1.3.3",
        "path-to-regexp": "0.1.7",
        "proxy-addr": "~2.0.5",
        "qs": "6.7.0",
        "range-parser": "~1.2.1",
        "safe-buffer": "5.1.2",
        "send": "0.17.1",
        "serve-static": "1.14.1",
        "setprototypeof": "1.1.1",
        "statuses": "~1.5.0",
        "type-is": "~1.6.18",
        "utils-merge": "1.0.1",
        "vary": "~1.1.2"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "requires": {
            "ms": "2.0.0"
          }
        },
        "qs": {
          "version": "6.7.0",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.7.0.tgz",
          "integrity": "sha512-VCdBRNFTX1fyE7Nb6FYoURo/SPe62QCaAyzJvUjwRaIsc+NePBEniHlvxFmmX56+HZphIGtV0XeCirBtpDrTyQ=="
        }
      }
    },
    "extend": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
      "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g=="
    },
    "extsprintf": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
      "integrity": "sha1-lpGEQOMEGnpBT4xS48V06zw+HgU="
    },
    "fast-deep-equal": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.1.tgz",
      "integrity": "sha512-8UEa58QDLauDNfpbrX55Q9jrGHThw2ZMdOky5Gl1CDtVeJDPVrG4Jxx1N8jw2gkWaff5UUuX1KJd+9zGe2B+ZA=="
    },
    "fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw=="
    },
    "finalhandler": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.2.tgz",
      "integrity": "sha512-aAWcW57uxVNrQZqFXjITpW3sIUQmHGG3qSb9mUah9MgMC4NeWhNOlNjXEYq3HjRAvL6arUviZGGJsBg6z0zsWA==",
      "requires": {
        "debug": "2.6.9",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "on-finished": "~2.3.0",
        "parseurl": "~1.3.3",
        "statuses": "~1.5.0",
        "unpipe": "~1.0.0"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "requires": {
            "ms": "2.0.0"
          }
        }
      }
    },
    "forever-agent": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
      "integrity": "sha1-+8cfDEGt6zf5bFd60e1C2P2sypE="
    },
    "form-data": {
      "version": "2.1.4",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.1.4.tgz",
      "integrity": "sha1-M8GDrPGTJ27KqYFDpp6Uv+4XUNE=",
      "dev": true,
      "requires": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.5",
        "mime-types": "^2.1.12"
      }
    },
    "forwarded": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.1.2.tgz",
      "integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ="
    },
    "fresh": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
      "integrity": "sha1-PYyt2Q2XZWn6g1qx+OSyOhBWBac="
    },
    "fs-minipass": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-1.2.7.tgz",
      "integrity": "sha512-GWSSJGFy4e9GUeCcbIkED+bgAoFyj7XF1mV8rma3QW4NIqX9Kyx79N/PF61H5udOV3aY1IaMLs6pGbH71nlCTA==",
      "requires": {
        "minipass": "^2.6.0"
      }
    },
    "fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8="
    },
    "gauge": {
      "version": "2.7.4",
      "resolved": "https://registry.npmjs.org/gauge/-/gauge-2.7.4.tgz",
      "integrity": "sha1-LANAXHU4w51+s3sxcCLjJfsBi/c=",
      "requires": {
        "aproba": "^1.0.3",
        "console-control-strings": "^1.0.0",
        "has-unicode": "^2.0.0",
        "object-assign": "^4.1.0",
        "signal-exit": "^3.0.0",
        "string-width": "^1.0.1",
        "strip-ansi": "^3.0.1",
        "wide-align": "^1.1.0"
      }
    },
    "generate-function": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/generate-function/-/generate-function-2.3.1.tgz",
      "integrity": "sha512-eeB5GfMNeevm/GRYq20ShmsaGcmI81kIX2K9XQx5miC8KdHaC6Jm0qQ8ZNeGOi7wYB8OsdxKs+Y2oVuTFuVwKQ==",
      "dev": true,
      "requires": {
        "is-property": "^1.0.2"
      }
    },
    "generate-object-property": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/generate-object-property/-/generate-object-property-1.2.0.tgz",
      "integrity": "sha1-nA4cQDCM6AT0eDYYuTf6iPmdUNA=",
      "dev": true,
      "requires": {
        "is-property": "^1.0.0"
      }
    },
    "getpass": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
      "integrity": "sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=",
      "requires": {
        "assert-plus": "^1.0.0"
      },
      "dependencies": {
        "assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU="
        }
      }
    },
    "glob": {
      "version": "7.1.6",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.6.tgz",
      "integrity": "sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==",
      "requires": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.0.4",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      }
    },
    "growl": {
      "version": "1.9.2",
      "resolved": "https://registry.npmjs.org/growl/-/growl-1.9.2.tgz",
      "integrity": "sha1-Dqd0NxXbjY3ixe3hd14bRayFwC8=",
      "dev": true
    },
    "har-schema": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
      "integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI="
    },
    "har-validator": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-2.0.6.tgz",
      "integrity": "sha1-zcvAgYgmWtEZtqWnyKtw7s+10n0=",
      "dev": true,
      "requires": {
        "chalk": "^1.1.1",
        "commander": "^2.9.0",
        "is-my-json-valid": "^2.12.4",
        "pinkie-promise": "^2.0.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "2.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
          "dev": true
        },
        "chalk": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
          "dev": true,
          "requires": {
            "ansi-styles": "^2.2.1",
            "escape-string-regexp": "^1.0.2",
            "has-ansi": "^2.0.0",
            "strip-ansi": "^3.0.0",
            "supports-color": "^2.0.0"
          }
        },
        "supports-color": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
          "dev": true
        }
      }
    },
    "has-ansi": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz",
      "integrity": "sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=",
      "dev": true,
      "requires": {
        "ansi-regex": "^2.0.0"
      }
    },
    "has-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-1.0.0.tgz",
      "integrity": "sha1-nZ55MWXOAXoA8AQYxD+UKnsdEfo=",
      "dev": true
    },
    "has-unicode": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/has-unicode/-/has-unicode-2.0.1.tgz",
      "integrity": "sha1-4Ob+aijPUROIVeCG0Wkedx3iqLk="
    },
    "hawk": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/hawk/-/hawk-3.1.3.tgz",
      "integrity": "sha1-B4REvXwWQLD+VA0sm3PVlnjo4cQ=",
      "dev": true,
      "requires": {
        "boom": "2.x.x",
        "cryptiles": "2.x.x",
        "hoek": "2.x.x",
        "sntp": "1.x.x"
      }
    },
    "he": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/he/-/he-1.1.1.tgz",
      "integrity": "sha1-k0EP0hsAlzUVH4howvJx80J+I/0=",
      "dev": true
    },
    "hoek": {
      "version": "2.16.3",
      "resolved": "https://registry.npmjs.org/hoek/-/hoek-2.16.3.tgz",
      "integrity": "sha1-ILt0A9POo5jpHcRxCo/xuCdKJe0=",
      "dev": true
    },
    "homedir-polyfill": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/homedir-polyfill/-/homedir-polyfill-1.0.3.tgz",
      "integrity": "sha512-eSmmWE5bZTK2Nou4g0AI3zZ9rswp7GRKoKXS1BLUkvPviOqs4YTN1djQIqrXy9k5gEtdLPy86JjRwsNM9tnDcA==",
      "dev": true,
      "requires": {
        "parse-passwd": "^1.0.0"
      }
    },
    "http-errors": {
      "version": "1.7.2",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.7.2.tgz",
      "integrity": "sha512-uUQBt3H/cSIVfch6i1EuPNy/YsRSOUBXTVfZ+yR7Zjez3qjBz6i9+i4zjNaoqcoFVI4lQJ5plg63TvGfRSDCRg==",
      "requires": {
        "depd": "~1.1.2",
        "inherits": "2.0.3",
        "setprototypeof": "1.1.1",
        "statuses": ">= 1.5.0 < 2",
        "toidentifier": "1.0.0"
      },
      "dependencies": {
        "inherits": {
          "version": "2.0.3",
          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
          "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4="
        }
      }
    },
    "http-signature": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.1.1.tgz",
      "integrity": "sha1-33LiZwZs0Kxn+3at+OE0qPvPkb8=",
      "dev": true,
      "requires": {
        "assert-plus": "^0.2.0",
        "jsprim": "^1.2.2",
        "sshpk": "^1.7.0"
      }
    },
    "iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "requires": {
        "safer-buffer": ">= 2.1.2 < 3"
      }
    },
    "ignore-walk": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/ignore-walk/-/ignore-walk-3.0.3.tgz",
      "integrity": "sha512-m7o6xuOaT1aqheYHKf8W6J5pYH85ZI9w077erOzLje3JsB1gkafkAhHHY19dqjulgIZHFm32Cp5uNZgcQqdJKw==",
      "requires": {
        "minimatch": "^3.0.4"
      }
    },
    "inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
      "requires": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "ini": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/ini/-/ini-1.3.5.tgz",
      "integrity": "sha512-RZY5huIKCMRWDUqZlEi72f/lmXKMvuszcMBduliQ3nnWbx9X/ZBQO7DijMEYS9EhHBb2qacRUMtC7svLwe0lcw=="
    },
    "ipaddr.js": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g=="
    },
    "is-fullwidth-code-point": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
      "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
      "requires": {
        "number-is-nan": "^1.0.0"
      }
    },
    "is-my-ip-valid": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-my-ip-valid/-/is-my-ip-valid-1.0.0.tgz",
      "integrity": "sha512-gmh/eWXROncUzRnIa1Ubrt5b8ep/MGSnfAUI3aRp+sqTCs1tv1Isl8d8F6JmkN3dXKc3ehZMrtiPN9eL03NuaQ==",
      "dev": true
    },
    "is-my-json-valid": {
      "version": "2.20.0",
      "resolved": "https://registry.npmjs.org/is-my-json-valid/-/is-my-json-valid-2.20.0.tgz",
      "integrity": "sha512-XTHBZSIIxNsIsZXg7XB5l8z/OBFosl1Wao4tXLpeC7eKU4Vm/kdop2azkPqULwnfGQjmeDIyey9g7afMMtdWAA==",
      "dev": true,
      "requires": {
        "generate-function": "^2.0.0",
        "generate-object-property": "^1.1.0",
        "is-my-ip-valid": "^1.0.0",
        "jsonpointer": "^4.0.0",
        "xtend": "^4.0.0"
      }
    },
    "is-property": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-property/-/is-property-1.0.2.tgz",
      "integrity": "sha1-V/4cTkhHTt1lsJkR8msc1Ald2oQ=",
      "dev": true
    },
    "is-typedarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
      "integrity": "sha1-5HnICFjfDBsR3dppQPlgEfzaSpo="
    },
    "isarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
      "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
    },
    "isstream": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
      "integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="
    },
    "js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
      "dev": true
    },
    "js-yaml": {
      "version": "3.6.1",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.6.1.tgz",
      "integrity": "sha1-bl/mfYsgXOTSL60Ft3geja3MSzA=",
      "dev": true,
      "requires": {
        "argparse": "^1.0.7",
        "esprima": "^2.6.0"
      }
    },
    "jsbn": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
      "integrity": "sha1-peZUwuWi3rXyAdls77yoDA7y9RM="
    },
    "json-schema": {
      "version": "0.2.3",
      "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz",
      "integrity": "sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM="
    },
    "json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg=="
    },
    "json-stringify-safe": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
      "integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="
    },
    "json3": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/json3/-/json3-3.3.2.tgz",
      "integrity": "sha1-PAQ0dD35Pi9cQq7nsZvLSDV19OE=",
      "dev": true
    },
    "jsonpointer": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/jsonpointer/-/jsonpointer-4.0.1.tgz",
      "integrity": "sha1-T9kss04OnbPInIYi7PUfm5eMbLk=",
      "dev": true
    },
    "jsprim": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz",
      "integrity": "sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=",
      "requires": {
        "assert-plus": "1.0.0",
        "extsprintf": "1.3.0",
        "json-schema": "0.2.3",
        "verror": "1.10.0"
      },
      "dependencies": {
        "assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU="
        }
      }
    },
    "lcov-parse": {
      "version": "0.0.10",
      "resolved": "https://registry.npmjs.org/lcov-parse/-/lcov-parse-0.0.10.tgz",
      "integrity": "sha1-GwuP+ayceIklBYK3C3ExXZ2m2aM=",
      "dev": true
    },
    "lodash._baseassign": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/lodash._baseassign/-/lodash._baseassign-3.2.0.tgz",
      "integrity": "sha1-jDigmVAPIVrQnlnxci/QxSv+Ck4=",
      "dev": true,
      "requires": {
        "lodash._basecopy": "^3.0.0",
        "lodash.keys": "^3.0.0"
      }
    },
    "lodash._basecopy": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/lodash._basecopy/-/lodash._basecopy-3.0.1.tgz",
      "integrity": "sha1-jaDmqHbPNEwK2KVIghEd08XHyjY=",
      "dev": true
    },
    "lodash._basecreate": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/lodash._basecreate/-/lodash._basecreate-3.0.3.tgz",
      "integrity": "sha1-G8ZhYU2qf8MRt9A78WgGoCE8+CE=",
      "dev": true
    },
    "lodash._getnative": {
      "version": "3.9.1",
      "resolved": "https://registry.npmjs.org/lodash._getnative/-/lodash._getnative-3.9.1.tgz",
      "integrity": "sha1-VwvH3t5G1hzc3mh9ZdPuy6o6r/U=",
      "dev": true
    },
    "lodash._isiterateecall": {
      "version": "3.0.9",
      "resolved": "https://registry.npmjs.org/lodash._isiterateecall/-/lodash._isiterateecall-3.0.9.tgz",
      "integrity": "sha1-UgOte6Ql+uhCRg5pbbnPPmqsBXw=",
      "dev": true
    },
    "lodash.create": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/lodash.create/-/lodash.create-3.1.1.tgz",
      "integrity": "sha1-1/KEnw29p+BGgruM1yqwIkYd6+c=",
      "dev": true,
      "requires": {
        "lodash._baseassign": "^3.0.0",
        "lodash._basecreate": "^3.0.0",
        "lodash._isiterateecall": "^3.0.0"
      }
    },
    "lodash.isarguments": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/lodash.isarguments/-/lodash.isarguments-3.1.0.tgz",
      "integrity": "sha1-L1c9hcaiQon/AGY7SRwdM4/zRYo=",
      "dev": true
    },
    "lodash.isarray": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/lodash.isarray/-/lodash.isarray-3.0.4.tgz",
      "integrity": "sha1-eeTriMNqgSKvhvhEqpvNhRtfu1U=",
      "dev": true
    },
    "lodash.keys": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/lodash.keys/-/lodash.keys-3.1.2.tgz",
      "integrity": "sha1-TbwEcrFWvlCgsoaFXRvQsMZWCYo=",
      "dev": true,
      "requires": {
        "lodash._getnative": "^3.0.0",
        "lodash.isarguments": "^3.0.0",
        "lodash.isarray": "^3.0.0"
      }
    },
    "log-driver": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/log-driver/-/log-driver-1.2.5.tgz",
      "integrity": "sha1-euTsJXMC/XkNVXyxDJcQDYV7AFY=",
      "dev": true
    },
    "make-error": {
      "version": "1.3.6",
      "resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.6.tgz",
      "integrity": "sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==",
      "dev": true
    },
    "media-typer": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
      "integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g="
    },
    "merge-descriptors": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz",
      "integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E="
    },
    "methods": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
      "integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4="
    },
    "mime": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
      "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg=="
    },
    "mime-db": {
      "version": "1.43.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.43.0.tgz",
      "integrity": "sha512-+5dsGEEovYbT8UY9yD7eE4XTc4UwJ1jBYlgaQQF38ENsKR3wj/8q8RFZrF9WIZpB2V1ArTVFUva8sAul1NzRzQ=="
    },
    "mime-types": {
      "version": "2.1.26",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.26.tgz",
      "integrity": "sha512-01paPWYgLrkqAyrlDorC1uDwl2p3qZT7yl806vW7DvDoxwXi46jsjFbg+WdwotBIk6/MbEhO/dh5aZ5sNj/dWQ==",
      "requires": {
        "mime-db": "1.43.0"
      }
    },
    "minimatch": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",
      "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",
      "requires": {
        "brace-expansion": "^1.1.7"
      }
    },
    "minimist": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.5.tgz",
      "integrity": "sha512-FM9nNUYrRBAELZQT3xeZQ7fmMOBg6nWNmJKTcgsJeaLstP/UODVpGsr5OhXhhXg6f+qtJ8uiZ+PUxkDWcgIXLw=="
    },
    "minipass": {
      "version": "2.9.0",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-2.9.0.tgz",
      "integrity": "sha512-wxfUjg9WebH+CUDX/CdbRlh5SmfZiy/hpkxaRI16Y9W56Pa75sWgd/rvFilSgrauD9NyFymP/+JFV3KwzIsJeg==",
      "requires": {
        "safe-buffer": "^5.1.2",
        "yallist": "^3.0.0"
      }
    },
    "minizlib": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-1.3.3.tgz",
      "integrity": "sha512-6ZYMOEnmVsdCeTJVE0W9ZD+pVnE8h9Hma/iOwwRDsdQoePpoX56/8B6z3P9VNwppJuBKNRuFDRNRqRWexT9G9Q==",
      "requires": {
        "minipass": "^2.9.0"
      }
    },
    "mkdirp": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.3.tgz",
      "integrity": "sha512-P+2gwrFqx8lhew375MQHHeTlY8AuOJSrGf0R5ddkEndUkmwpgUob/vQuBD1V22/Cw1/lJr4x+EjllSezBThzBg==",
      "requires": {
        "minimist": "^1.2.5"
      }
    },
    "mocha": {
      "version": "3.5.3",
      "resolved": "https://registry.npmjs.org/mocha/-/mocha-3.5.3.tgz",
      "integrity": "sha512-/6na001MJWEtYxHOV1WLfsmR4YIynkUEhBwzsb+fk2qmQ3iqsi258l/Q2MWHJMImAcNpZ8DEdYAK72NHoIQ9Eg==",
      "dev": true,
      "requires": {
        "browser-stdout": "1.3.0",
        "commander": "2.9.0",
        "debug": "2.6.8",
        "diff": "3.2.0",
        "escape-string-regexp": "1.0.5",
        "glob": "7.1.1",
        "growl": "1.9.2",
        "he": "1.1.1",
        "json3": "3.3.2",
        "lodash.create": "3.1.1",
        "mkdirp": "0.5.1",
        "supports-color": "3.1.2"
      },
      "dependencies": {
        "commander": {
          "version": "2.9.0",
          "resolved": "https://registry.npmjs.org/commander/-/commander-2.9.0.tgz",
          "integrity": "sha1-nJkJQXbhIkDLItbFFGCYQA/g99Q=",
          "dev": true,
          "requires": {
            "graceful-readlink": ">= 1.0.0"
          },
          "dependencies": {
            "graceful-readlink": {
              "version": "1.0.1",
              "resolved": "https://registry.npmjs.org/graceful-readlink/-/graceful-readlink-1.0.1.tgz",
              "integrity": "sha1-TK+tdrxi8C+gObL5Tpo906ORpyU=",
              "dev": true
            }
          }
        },
        "debug": {
          "version": "2.6.8",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.8.tgz",
          "integrity": "sha1-5zFTHKLt4n0YgiJCfaF4IdaP9Pw=",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "glob": {
          "version": "7.1.1",
          "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.1.tgz",
          "integrity": "sha1-gFIR3wT6rxxjo2ADBs31reULLsg=",
          "dev": true,
          "requires": {
            "fs.realpath": "^1.0.0",
            "inflight": "^1.0.4",
            "inherits": "2",
            "minimatch": "^3.0.2",
            "once": "^1.3.0",
            "path-is-absolute": "^1.0.0"
          }
        },
        "minimist": {
          "version": "0.0.8",
          "resolved": "https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz",
          "integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=",
          "dev": true
        },
        "mkdirp": {
          "version": "0.5.1",
          "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz",
          "integrity": "sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=",
          "dev": true,
          "requires": {
            "minimist": "0.0.8"
          }
        }
      }
    },
    "ms": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
      "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
    },
    "nan": {
      "version": "2.14.0",
      "resolved": "https://registry.npmjs.org/nan/-/nan-2.14.0.tgz",
      "integrity": "sha512-INOFj37C7k3AfaNTtX8RhsTw7qRy7eLET14cROi9+5HAVbbHuIWUHEauBv5qT4Av2tWasiTY1Jw6puUNqRJXQg=="
    },
    "needle": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/needle/-/needle-2.3.3.tgz",
      "integrity": "sha512-EkY0GeSq87rWp1hoq/sH/wnTWgFVhYlnIkbJ0YJFfRgEFlz2RraCjBpFQ+vrEgEdp0ThfyHADmkChEhcb7PKyw==",
      "requires": {
        "debug": "^3.2.6",
        "iconv-lite": "^0.4.4",
        "sax": "^1.2.4"
      },
      "dependencies": {
        "debug": {
          "version": "3.2.6",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
          "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "ms": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
        }
      }
    },
    "negotiator": {
      "version": "0.6.2",
      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.2.tgz",
      "integrity": "sha512-hZXc7K2e+PgeI1eDBe/10Ard4ekbfrrqG8Ep+8Jmf4JID2bNg7NvCPOZN+kfF574pFQI7mum2AUqDidoKqcTOw=="
    },
    "node-pre-gyp": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/node-pre-gyp/-/node-pre-gyp-0.11.0.tgz",
      "integrity": "sha512-TwWAOZb0j7e9eGaf9esRx3ZcLaE5tQ2lvYy1pb5IAaG1a2e2Kv5Lms1Y4hpj+ciXJRofIxxlt5haeQ/2ANeE0Q==",
      "requires": {
        "detect-libc": "^1.0.2",
        "mkdirp": "^0.5.1",
        "needle": "^2.2.1",
        "nopt": "^4.0.1",
        "npm-packlist": "^1.1.6",
        "npmlog": "^4.0.2",
        "rc": "^1.2.7",
        "rimraf": "^2.6.1",
        "semver": "^5.3.0",
        "tar": "^4"
      }
    },
    "nopt": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/nopt/-/nopt-4.0.3.tgz",
      "integrity": "sha512-CvaGwVMztSMJLOeXPrez7fyfObdZqNUK1cPAEzLHrTybIua9pMdmmPR5YwtfNftIOMv3DPUhFaxsZMNTQO20Kg==",
      "requires": {
        "abbrev": "1",
        "osenv": "^0.1.4"
      }
    },
    "npm-bundled": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/npm-bundled/-/npm-bundled-1.1.1.tgz",
      "integrity": "sha512-gqkfgGePhTpAEgUsGEgcq1rqPXA+tv/aVBlgEzfXwA1yiUJF7xtEt3CtVwOjNYQOVknDk0F20w58Fnm3EtG0fA==",
      "requires": {
        "npm-normalize-package-bin": "^1.0.1"
      }
    },
    "npm-normalize-package-bin": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/npm-normalize-package-bin/-/npm-normalize-package-bin-1.0.1.tgz",
      "integrity": "sha512-EPfafl6JL5/rU+ot6P3gRSCpPDW5VmIzX959Ob1+ySFUuuYHWHekXpwdUZcKP5C+DS4GEtdJluwBjnsNDl+fSA=="
    },
    "npm-packlist": {
      "version": "1.4.8",
      "resolved": "https://registry.npmjs.org/npm-packlist/-/npm-packlist-1.4.8.tgz",
      "integrity": "sha512-5+AZgwru5IevF5ZdnFglB5wNlHG1AOOuw28WhUq8/8emhBmLv6jX5by4WJCh7lW0uSYZYS6DXqIsyZVIXRZU9A==",
      "requires": {
        "ignore-walk": "^3.0.1",
        "npm-bundled": "^1.0.1",
        "npm-normalize-package-bin": "^1.0.1"
      }
    },
    "npmlog": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/npmlog/-/npmlog-4.1.2.tgz",
      "integrity": "sha512-2uUqazuKlTaSI/dC8AzicUck7+IrEaOnN/e0jd3Xtt1KcGpwx30v50mL7oPyr/h9bL3E4aZccVwpwP+5W9Vjkg==",
      "requires": {
        "are-we-there-yet": "~1.1.2",
        "console-control-strings": "~1.1.0",
        "gauge": "~2.7.3",
        "set-blocking": "~2.0.0"
      }
    },
    "number-is-nan": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",
      "integrity": "sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0="
    },
    "nyc": {
      "version": "10.3.2",
      "resolved": "https://registry.npmjs.org/nyc/-/nyc-10.3.2.tgz",
      "integrity": "sha1-8n9NkfKp2zbCT1dP9cbv/wIz3kY=",
      "dev": true,
      "requires": {
        "archy": "^1.0.0",
        "arrify": "^1.0.1",
        "caching-transform": "^1.0.0",
        "convert-source-map": "^1.3.0",
        "debug-log": "^1.0.1",
        "default-require-extensions": "^1.0.0",
        "find-cache-dir": "^0.1.1",
        "find-up": "^1.1.2",
        "foreground-child": "^1.5.3",
        "glob": "^7.0.6",
        "istanbul-lib-coverage": "^1.1.0",
        "istanbul-lib-hook": "^1.0.6",
        "istanbul-lib-instrument": "^1.7.1",
        "istanbul-lib-report": "^1.1.0",
        "istanbul-lib-source-maps": "^1.2.0",
        "istanbul-reports": "^1.1.0",
        "md5-hex": "^1.2.0",
        "merge-source-map": "^1.0.2",
        "micromatch": "^2.3.11",
        "mkdirp": "^0.5.0",
        "resolve-from": "^2.0.0",
        "rimraf": "^2.5.4",
        "signal-exit": "^3.0.1",
        "spawn-wrap": "1.2.4",
        "test-exclude": "^4.1.0",
        "yargs": "^7.1.0",
        "yargs-parser": "^5.0.0"
      },
      "dependencies": {
        "align-text": {
          "version": "0.1.4",
          "resolved": "https://registry.npmjs.org/align-text/-/align-text-0.1.4.tgz",
          "integrity": "sha1-DNkKVhCT810KmSVsIrcGlDP60Rc=",
          "dev": true,
          "optional": true,
          "requires": {
            "kind-of": "^3.0.2",
            "longest": "^1.0.1",
            "repeat-string": "^1.5.2"
          }
        },
        "amdefine": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/amdefine/-/amdefine-1.0.1.tgz",
          "integrity": "sha1-SlKCrBZHKek2Gbz9OtFR+BfOkfU=",
          "dev": true
        },
        "ansi-regex": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
          "dev": true
        },
        "ansi-styles": {
          "version": "2.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
          "dev": true
        },
        "append-transform": {
          "version": "0.4.0",
          "resolved": "https://registry.npmjs.org/append-transform/-/append-transform-0.4.0.tgz",
          "integrity": "sha1-126/jKlNJ24keja61EpLdKthGZE=",
          "dev": true,
          "requires": {
            "default-require-extensions": "^1.0.0"
          }
        },
        "archy": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/archy/-/archy-1.0.0.tgz",
          "integrity": "sha1-+cjBN1fMHde8N5rHeyxipcKGjEA=",
          "dev": true
        },
        "arr-diff": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-2.0.0.tgz",
          "integrity": "sha1-jzuCf5Vai9ZpaX5KQlasPOrjVs8=",
          "dev": true,
          "requires": {
            "arr-flatten": "^1.0.1"
          }
        },
        "arr-flatten": {
          "version": "1.0.3",
          "resolved": "https://registry.npmjs.org/arr-flatten/-/arr-flatten-1.0.3.tgz",
          "integrity": "sha1-onTthawIhJtr14R8RYB0XcUa37E=",
          "dev": true
        },
        "array-unique": {
          "version": "0.2.1",
          "resolved": "https://registry.npmjs.org/array-unique/-/array-unique-0.2.1.tgz",
          "integrity": "sha1-odl8yvy8JiXMcPrc6zalDFiwGlM=",
          "dev": true
        },
        "arrify": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz",
          "integrity": "sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0=",
          "dev": true
        },
        "async": {
          "version": "1.5.2",
          "resolved": "https://registry.npmjs.org/async/-/async-1.5.2.tgz",
          "integrity": "sha1-7GphrlZIDAw8skHJVhjiCJL5Zyo=",
          "dev": true
        },
        "babel-code-frame": {
          "version": "6.22.0",
          "resolved": "https://registry.npmjs.org/babel-code-frame/-/babel-code-frame-6.22.0.tgz",
          "integrity": "sha1-AnYgvuVnqIwyVhV05/0IAdMxGOQ=",
          "dev": true,
          "requires": {
            "chalk": "^1.1.0",
            "esutils": "^2.0.2",
            "js-tokens": "^3.0.0"
          }
        },
        "babel-generator": {
          "version": "6.24.1",
          "resolved": "https://registry.npmjs.org/babel-generator/-/babel-generator-6.24.1.tgz",
          "integrity": "sha1-5xX0hsWN7SVknYiJRNUqoHxdlJc=",
          "dev": true,
          "requires": {
            "babel-messages": "^6.23.0",
            "babel-runtime": "^6.22.0",
            "babel-types": "^6.24.1",
            "detect-indent": "^4.0.0",
            "jsesc": "^1.3.0",
            "lodash": "^4.2.0",
            "source-map": "^0.5.0",
            "trim-right": "^1.0.1"
          }
        },
        "babel-messages": {
          "version": "6.23.0",
          "resolved": "https://registry.npmjs.org/babel-messages/-/babel-messages-6.23.0.tgz",
          "integrity": "sha1-8830cDhYA1sqKVHG7F7fbGLyYw4=",
          "dev": true,
          "requires": {
            "babel-runtime": "^6.22.0"
          }
        },
        "babel-runtime": {
          "version": "6.23.0",
          "resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.23.0.tgz",
          "integrity": "sha1-CpSJ8UTecO+zzkMArM2zKeL8VDs=",
          "dev": true,
          "requires": {
            "core-js": "^2.4.0",
            "regenerator-runtime": "^0.10.0"
          }
        },
        "babel-template": {
          "version": "6.24.1",
          "resolved": "https://registry.npmjs.org/babel-template/-/babel-template-6.24.1.tgz",
          "integrity": "sha1-BK5RTx+Ts6JTfyoPYKWkX7gwgzM=",
          "dev": true,
          "requires": {
            "babel-runtime": "^6.22.0",
            "babel-traverse": "^6.24.1",
            "babel-types": "^6.24.1",
            "babylon": "^6.11.0",
            "lodash": "^4.2.0"
          }
        },
        "babel-traverse": {
          "version": "6.24.1",
          "resolved": "https://registry.npmjs.org/babel-traverse/-/babel-traverse-6.24.1.tgz",
          "integrity": "sha1-qzZnP9NW+aCUhlnnszjV/q2zFpU=",
          "dev": true,
          "requires": {
            "babel-code-frame": "^6.22.0",
            "babel-messages": "^6.23.0",
            "babel-runtime": "^6.22.0",
            "babel-types": "^6.24.1",
            "babylon": "^6.15.0",
            "debug": "^2.2.0",
            "globals": "^9.0.0",
            "invariant": "^2.2.0",
            "lodash": "^4.2.0"
          }
        },
        "babel-types": {
          "version": "6.24.1",
          "resolved": "https://registry.npmjs.org/babel-types/-/babel-types-6.24.1.tgz",
          "integrity": "sha1-oTaHncFbNga9oNkMH8dDBML/CXU=",
          "dev": true,
          "requires": {
            "babel-runtime": "^6.22.0",
            "esutils": "^2.0.2",
            "lodash": "^4.2.0",
            "to-fast-properties": "^1.0.1"
          }
        },
        "babylon": {
          "version": "6.17.0",
          "resolved": "https://registry.npmjs.org/babylon/-/babylon-6.17.0.tgz",
          "integrity": "sha1-N9qUiHhIi5xOPEA4iT+jMUs/yTI=",
          "dev": true
        },
        "balanced-match": {
          "version": "0.4.2",
          "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-0.4.2.tgz",
          "integrity": "sha1-yz8+PHMtwPAe5wtAPzAuYddwmDg=",
          "dev": true
        },
        "brace-expansion": {
          "version": "1.1.7",
          "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.7.tgz",
          "integrity": "sha1-Pv/DxQ4ABTH7cg6v+A8K6O8jz1k=",
          "dev": true,
          "requires": {
            "balanced-match": "^0.4.1",
            "concat-map": "0.0.1"
          }
        },
        "braces": {
          "version": "1.8.5",
          "resolved": "https://registry.npmjs.org/braces/-/braces-1.8.5.tgz",
          "integrity": "sha1-uneWLhLf+WnWt2cR6RS3N4V79qc=",
          "dev": true,
          "requires": {
            "expand-range": "^1.8.1",
            "preserve": "^0.2.0",
            "repeat-element": "^1.1.2"
          }
        },
        "builtin-modules": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/builtin-modules/-/builtin-modules-1.1.1.tgz",
          "integrity": "sha1-Jw8HbFpywC9bZaR9+Uxf46J4iS8=",
          "dev": true
        },
        "caching-transform": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/caching-transform/-/caching-transform-1.0.1.tgz",
          "integrity": "sha1-bb2y8g+Nj7znnz6U6dF0Lc31wKE=",
          "dev": true,
          "requires": {
            "md5-hex": "^1.2.0",
            "mkdirp": "^0.5.1",
            "write-file-atomic": "^1.1.4"
          }
        },
        "camelcase": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-1.2.1.tgz",
          "integrity": "sha1-m7UwTS4LVmmLLHWLCKPqqdqlijk=",
          "dev": true,
          "optional": true
        },
        "center-align": {
          "version": "0.1.3",
          "resolved": "https://registry.npmjs.org/center-align/-/center-align-0.1.3.tgz",
          "integrity": "sha1-qg0yYptu6XIgBBHL1EYckHvCt60=",
          "dev": true,
          "optional": true,
          "requires": {
            "align-text": "^0.1.3",
            "lazy-cache": "^1.0.3"
          }
        },
        "chalk": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
          "dev": true,
          "requires": {
            "ansi-styles": "^2.2.1",
            "escape-string-regexp": "^1.0.2",
            "has-ansi": "^2.0.0",
            "strip-ansi": "^3.0.0",
            "supports-color": "^2.0.0"
          }
        },
        "cliui": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-2.1.0.tgz",
          "integrity": "sha1-S0dXYP+AJkx2LDoXGQMukcf+oNE=",
          "dev": true,
          "optional": true,
          "requires": {
            "center-align": "^0.1.1",
            "right-align": "^0.1.1",
            "wordwrap": "0.0.2"
          },
          "dependencies": {
            "wordwrap": {
              "version": "0.0.2",
              "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.2.tgz",
              "integrity": "sha1-t5Zpu0LstAn4PVg8rVLKF+qhZD8=",
              "dev": true,
              "optional": true
            }
          }
        },
        "code-point-at": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",
          "integrity": "sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c=",
          "dev": true
        },
        "commondir": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz",
          "integrity": "sha1-3dgA2gxmEnOTzKWVDqloo6rxJTs=",
          "dev": true
        },
        "concat-map": {
          "version": "0.0.1",
          "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
          "integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=",
          "dev": true
        },
        "convert-source-map": {
          "version": "1.5.0",
          "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.5.0.tgz",
          "integrity": "sha1-ms1whRxtXf3ZPZKC5e35SgP/RrU=",
          "dev": true
        },
        "core-js": {
          "version": "2.4.1",
          "resolved": "https://registry.npmjs.org/core-js/-/core-js-2.4.1.tgz",
          "integrity": "sha1-TekR5mew6ukSTjQlS1OupvxhjT4=",
          "dev": true
        },
        "cross-spawn": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-4.0.2.tgz",
          "integrity": "sha1-e5JHYhwjrf3ThWAEqCPL45dCTUE=",
          "dev": true,
          "requires": {
            "lru-cache": "^4.0.1",
            "which": "^1.2.9"
          }
        },
        "debug": {
          "version": "2.6.6",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.6.tgz",
          "integrity": "sha1-qfpvvpykPPHnn3O3XAGJy7fW21o=",
          "dev": true,
          "requires": {
            "ms": "0.7.3"
          }
        },
        "debug-log": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/debug-log/-/debug-log-1.0.1.tgz",
          "integrity": "sha1-IwdjLUwEOCuN+KMvcLiVBG1SdF8=",
          "dev": true
        },
        "decamelize": {
          "version": "1.2.0",
          "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
          "integrity": "sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=",
          "dev": true
        },
        "default-require-extensions": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/default-require-extensions/-/default-require-extensions-1.0.0.tgz",
          "integrity": "sha1-836hXT4T/9m0N9M+GnW1+5eHTLg=",
          "dev": true,
          "requires": {
            "strip-bom": "^2.0.0"
          }
        },
        "detect-indent": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/detect-indent/-/detect-indent-4.0.0.tgz",
          "integrity": "sha1-920GQ1LN9Docts5hnE7jqUdd4gg=",
          "dev": true,
          "requires": {
            "repeating": "^2.0.0"
          }
        },
        "error-ex": {
          "version": "1.3.1",
          "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.1.tgz",
          "integrity": "sha1-+FWobOYa3E6GIcPNoh56dhLDqNw=",
          "dev": true,
          "requires": {
            "is-arrayish": "^0.2.1"
          }
        },
        "escape-string-regexp": {
          "version": "1.0.5",
          "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
          "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
          "dev": true
        },
        "esutils": {
          "version": "2.0.2",
          "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.2.tgz",
          "integrity": "sha1-Cr9PHKpbyx96nYrMbepPqqBLrJs=",
          "dev": true
        },
        "expand-brackets": {
          "version": "0.1.5",
          "resolved": "https://registry.npmjs.org/expand-brackets/-/expand-brackets-0.1.5.tgz",
          "integrity": "sha1-3wcoTjQqgHzXM6xa9yQR5YHRF3s=",
          "dev": true,
          "requires": {
            "is-posix-bracket": "^0.1.0"
          }
        },
        "expand-range": {
          "version": "1.8.2",
          "resolved": "https://registry.npmjs.org/expand-range/-/expand-range-1.8.2.tgz",
          "integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",
          "dev": true,
          "requires": {
            "fill-range": "^2.1.0"
          }
        },
        "extglob": {
          "version": "0.3.2",
          "resolved": "https://registry.npmjs.org/extglob/-/extglob-0.3.2.tgz",
          "integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",
          "dev": true,
          "requires": {
            "is-extglob": "^1.0.0"
          }
        },
        "filename-regex": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/filename-regex/-/filename-regex-2.0.1.tgz",
          "integrity": "sha1-wcS5vuPglyXdsQa3XB4wH+LxiyY=",
          "dev": true
        },
        "fill-range": {
          "version": "2.2.3",
          "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-2.2.3.tgz",
          "integrity": "sha1-ULd9/X5Gm8dJJHCWNpn+eoSFpyM=",
          "dev": true,
          "requires": {
            "is-number": "^2.1.0",
            "isobject": "^2.0.0",
            "randomatic": "^1.1.3",
            "repeat-element": "^1.1.2",
            "repeat-string": "^1.5.2"
          }
        },
        "find-cache-dir": {
          "version": "0.1.1",
          "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-0.1.1.tgz",
          "integrity": "sha1-yN765XyKUqinhPnjHFfHQumToLk=",
          "dev": true,
          "requires": {
            "commondir": "^1.0.1",
            "mkdirp": "^0.5.1",
            "pkg-dir": "^1.0.0"
          }
        },
        "find-up": {
          "version": "1.1.2",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-1.1.2.tgz",
          "integrity": "sha1-ay6YIrGizgpgq2TWEOzK1TyyTQ8=",
          "dev": true,
          "requires": {
            "path-exists": "^2.0.0",
            "pinkie-promise": "^2.0.0"
          }
        },
        "for-in": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/for-in/-/for-in-1.0.2.tgz",
          "integrity": "sha1-gQaNKVqBQuwKxybG4iAMMPttXoA=",
          "dev": true
        },
        "for-own": {
          "version": "0.1.5",
          "resolved": "https://registry.npmjs.org/for-own/-/for-own-0.1.5.tgz",
          "integrity": "sha1-UmXGgaTylNq78XyVCbZ2OqhFEM4=",
          "dev": true,
          "requires": {
            "for-in": "^1.0.1"
          }
        },
        "foreground-child": {
          "version": "1.5.6",
          "resolved": "https://registry.npmjs.org/foreground-child/-/foreground-child-1.5.6.tgz",
          "integrity": "sha1-T9ca0t/elnibmApcCilZN8svXOk=",
          "dev": true,
          "requires": {
            "cross-spawn": "^4",
            "signal-exit": "^3.0.0"
          }
        },
        "fs.realpath": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
          "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8=",
          "dev": true
        },
        "get-caller-file": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-1.0.2.tgz",
          "integrity": "sha1-9wLmMSfn4jHBYKgMFVSstw1QR+U=",
          "dev": true
        },
        "glob": {
          "version": "7.1.1",
          "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.1.tgz",
          "integrity": "sha1-gFIR3wT6rxxjo2ADBs31reULLsg=",
          "dev": true,
          "requires": {
            "fs.realpath": "^1.0.0",
            "inflight": "^1.0.4",
            "inherits": "2",
            "minimatch": "^3.0.2",
            "once": "^1.3.0",
            "path-is-absolute": "^1.0.0"
          }
        },
        "glob-base": {
          "version": "0.3.0",
          "resolved": "https://registry.npmjs.org/glob-base/-/glob-base-0.3.0.tgz",
          "integrity": "sha1-27Fk9iIbHAscz4Kuoyi0l98Oo8Q=",
          "dev": true,
          "requires": {
            "glob-parent": "^2.0.0",
            "is-glob": "^2.0.0"
          }
        },
        "glob-parent": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-2.0.0.tgz",
          "integrity": "sha1-gTg9ctsFT8zPUzbaqQLxgvbtuyg=",
          "dev": true,
          "requires": {
            "is-glob": "^2.0.0"
          }
        },
        "globals": {
          "version": "9.17.0",
          "resolved": "https://registry.npmjs.org/globals/-/globals-9.17.0.tgz",
          "integrity": "sha1-DAymltm5u2lNLlRwvTd3fKrVAoY=",
          "dev": true
        },
        "graceful-fs": {
          "version": "4.1.11",
          "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.11.tgz",
          "integrity": "sha1-Dovf5NHduIVNZOBOp8AOKgJuVlg=",
          "dev": true
        },
        "handlebars": {
          "version": "4.0.8",
          "resolved": "https://registry.npmjs.org/handlebars/-/handlebars-4.0.8.tgz",
          "integrity": "sha1-Irh1zT8ObL6jAxTxROgrx6cv9CA=",
          "dev": true,
          "requires": {
            "async": "^1.4.0",
            "optimist": "^0.6.1",
            "source-map": "^0.4.4",
            "uglify-js": "^2.6"
          },
          "dependencies": {
            "source-map": {
              "version": "0.4.4",
              "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.4.4.tgz",
              "integrity": "sha1-66T12pwNyZneaAMti092FzZSA2s=",
              "dev": true,
              "requires": {
                "amdefine": ">=0.0.4"
              }
            }
          }
        },
        "has-ansi": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz",
          "integrity": "sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=",
          "dev": true,
          "requires": {
            "ansi-regex": "^2.0.0"
          }
        },
        "has-flag": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-1.0.0.tgz",
          "integrity": "sha1-nZ55MWXOAXoA8AQYxD+UKnsdEfo=",
          "dev": true
        },
        "hosted-git-info": {
          "version": "2.4.2",
          "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.4.2.tgz",
          "integrity": "sha1-AHa59GonBQbduq6lZJaJdGBhKmc=",
          "dev": true
        },
        "imurmurhash": {
          "version": "0.1.4",
          "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
          "integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o=",
          "dev": true
        },
        "inflight": {
          "version": "1.0.6",
          "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
          "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
          "dev": true,
          "requires": {
            "once": "^1.3.0",
            "wrappy": "1"
          }
        },
        "inherits": {
          "version": "2.0.3",
          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
          "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
          "dev": true
        },
        "invariant": {
          "version": "2.2.2",
          "resolved": "https://registry.npmjs.org/invariant/-/invariant-2.2.2.tgz",
          "integrity": "sha1-nh9WrArNtr8wMwbzOL47IErmA2A=",
          "dev": true,
          "requires": {
            "loose-envify": "^1.0.0"
          }
        },
        "invert-kv": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/invert-kv/-/invert-kv-1.0.0.tgz",
          "integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY=",
          "dev": true
        },
        "is-arrayish": {
          "version": "0.2.1",
          "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
          "integrity": "sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0=",
          "dev": true
        },
        "is-buffer": {
          "version": "1.1.5",
          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.5.tgz",
          "integrity": "sha1-Hzsm72E7IUuIy8ojzGwB2Hlh7sw=",
          "dev": true
        },
        "is-builtin-module": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-builtin-module/-/is-builtin-module-1.0.0.tgz",
          "integrity": "sha1-VAVy0096wxGfj3bDDLwbHgN6/74=",
          "dev": true,
          "requires": {
            "builtin-modules": "^1.0.0"
          }
        },
        "is-dotfile": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/is-dotfile/-/is-dotfile-1.0.2.tgz",
          "integrity": "sha1-LBMjg/ORmfjtwmjKAbmwB9IFzE0=",
          "dev": true
        },
        "is-equal-shallow": {
          "version": "0.1.3",
          "resolved": "https://registry.npmjs.org/is-equal-shallow/-/is-equal-shallow-0.1.3.tgz",
          "integrity": "sha1-IjgJj8Ih3gvPpdnqxMRdY4qhxTQ=",
          "dev": true,
          "requires": {
            "is-primitive": "^2.0.0"
          }
        },
        "is-extendable": {
          "version": "0.1.1",
          "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-0.1.1.tgz",
          "integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik=",
          "dev": true
        },
        "is-extglob": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz",
          "integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA=",
          "dev": true
        },
        "is-finite": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/is-finite/-/is-finite-1.0.2.tgz",
          "integrity": "sha1-zGZ3aVYCvlUO8R6LSqYwU0K20Ko=",
          "dev": true,
          "requires": {
            "number-is-nan": "^1.0.0"
          }
        },
        "is-fullwidth-code-point": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
          "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
          "dev": true,
          "requires": {
            "number-is-nan": "^1.0.0"
          }
        },
        "is-glob": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz",
          "integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",
          "dev": true,
          "requires": {
            "is-extglob": "^1.0.0"
          }
        },
        "is-number": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/is-number/-/is-number-2.1.0.tgz",
          "integrity": "sha1-Afy7s5NGOlSPL0ZszhbezknbkI8=",
          "dev": true,
          "requires": {
            "kind-of": "^3.0.2"
          }
        },
        "is-posix-bracket": {
          "version": "0.1.1",
          "resolved": "https://registry.npmjs.org/is-posix-bracket/-/is-posix-bracket-0.1.1.tgz",
          "integrity": "sha1-MzTceXdDaOkvAW5vvAqI9c1ua8Q=",
          "dev": true
        },
        "is-primitive": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/is-primitive/-/is-primitive-2.0.0.tgz",
          "integrity": "sha1-IHurkWOEmcB7Kt8kCkGochADRXU=",
          "dev": true
        },
        "is-utf8": {
          "version": "0.2.1",
          "resolved": "https://registry.npmjs.org/is-utf8/-/is-utf8-0.2.1.tgz",
          "integrity": "sha1-Sw2hRCEE0bM2NA6AeX6GXPOffXI=",
          "dev": true
        },
        "isarray": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
          "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
          "dev": true
        },
        "isexe": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
          "integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=",
          "dev": true
        },
        "isobject": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz",
          "integrity": "sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=",
          "dev": true,
          "requires": {
            "isarray": "1.0.0"
          }
        },
        "istanbul-lib-coverage": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-1.1.0.tgz",
          "integrity": "sha1-ysoZ3srvNSW11jMdcB8/O3rUhSg=",
          "dev": true
        },
        "istanbul-lib-hook": {
          "version": "1.0.6",
          "resolved": "https://registry.npmjs.org/istanbul-lib-hook/-/istanbul-lib-hook-1.0.6.tgz",
          "integrity": "sha1-wIZtHoHPLVMZJJUQEx/Bbe5JIx8=",
          "dev": true,
          "requires": {
            "append-transform": "^0.4.0"
          }
        },
        "istanbul-lib-instrument": {
          "version": "1.7.1",
          "resolved": "https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-1.7.1.tgz",
          "integrity": "sha1-Fp4xvGLHeIUamUOd2Zw8wSGE02A=",
          "dev": true,
          "requires": {
            "babel-generator": "^6.18.0",
            "babel-template": "^6.16.0",
            "babel-traverse": "^6.18.0",
            "babel-types": "^6.18.0",
            "babylon": "^6.13.0",
            "istanbul-lib-coverage": "^1.1.0",
            "semver": "^5.3.0"
          }
        },
        "istanbul-lib-report": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-1.1.0.tgz",
          "integrity": "sha1-RExOzKmvqTz1hPVrEPGVv3aMB3A=",
          "dev": true,
          "requires": {
            "istanbul-lib-coverage": "^1.1.0",
            "mkdirp": "^0.5.1",
            "path-parse": "^1.0.5",
            "supports-color": "^3.1.2"
          },
          "dependencies": {
            "supports-color": {
              "version": "3.2.3",
              "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-3.2.3.tgz",
              "integrity": "sha1-ZawFBLOVQXHYpklGsq48u4pfVPY=",
              "dev": true,
              "requires": {
                "has-flag": "^1.0.0"
              }
            }
          }
        },
        "istanbul-lib-source-maps": {
          "version": "1.2.0",
          "resolved": "https://registry.npmjs.org/istanbul-lib-source-maps/-/istanbul-lib-source-maps-1.2.0.tgz",
          "integrity": "sha1-jHcG1Jfib+62rz4MKP1bBmlZjQ4=",
          "dev": true,
          "requires": {
            "debug": "^2.6.3",
            "istanbul-lib-coverage": "^1.1.0",
            "mkdirp": "^0.5.1",
            "rimraf": "^2.6.1",
            "source-map": "^0.5.3"
          }
        },
        "istanbul-reports": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-1.1.0.tgz",
          "integrity": "sha1-HvO3lYiSGc+1+tFjZfbOEI1fjGY=",
          "dev": true,
          "requires": {
            "handlebars": "^4.0.3"
          }
        },
        "js-tokens": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-3.0.1.tgz",
          "integrity": "sha1-COnxMkhKLEWjCQfp3E1VZ7fxFNc=",
          "dev": true
        },
        "jsesc": {
          "version": "1.3.0",
          "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-1.3.0.tgz",
          "integrity": "sha1-RsP+yMGJKxKwgz25vHYiF226s0s=",
          "dev": true
        },
        "kind-of": {
          "version": "3.2.0",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.0.tgz",
          "integrity": "sha1-tYq+TVwEStM3JqjBUltIz4kb/wc=",
          "dev": true,
          "requires": {
            "is-buffer": "^1.1.5"
          }
        },
        "lazy-cache": {
          "version": "1.0.4",
          "resolved": "https://registry.npmjs.org/lazy-cache/-/lazy-cache-1.0.4.tgz",
          "integrity": "sha1-odePw6UEdMuAhF07O24dpJpEbo4=",
          "dev": true,
          "optional": true
        },
        "lcid": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/lcid/-/lcid-1.0.0.tgz",
          "integrity": "sha1-MIrMr6C8SDo4Z7S28rlQYlHRuDU=",
          "dev": true,
          "requires": {
            "invert-kv": "^1.0.0"
          }
        },
        "load-json-file": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-1.1.0.tgz",
          "integrity": "sha1-lWkFcI1YtLq0wiYbBPWfMcmTdMA=",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.2",
            "parse-json": "^2.2.0",
            "pify": "^2.0.0",
            "pinkie-promise": "^2.0.0",
            "strip-bom": "^2.0.0"
          }
        },
        "lodash": {
          "version": "4.17.4",
          "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.4.tgz",
          "integrity": "sha1-eCA6TRwyiuHYbcpkYONptX9AVa4=",
          "dev": true
        },
        "longest": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/longest/-/longest-1.0.1.tgz",
          "integrity": "sha1-MKCy2jj3N3DoKUoNIuZiXtd9AJc=",
          "dev": true,
          "optional": true
        },
        "loose-envify": {
          "version": "1.3.1",
          "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.3.1.tgz",
          "integrity": "sha1-0aitM/qc4OcT1l/dCsi3SNR4yEg=",
          "dev": true,
          "requires": {
            "js-tokens": "^3.0.0"
          }
        },
        "lru-cache": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.0.2.tgz",
          "integrity": "sha1-HRdnnAac2l0ECZGgnbwsDbN35V4=",
          "dev": true,
          "requires": {
            "pseudomap": "^1.0.1",
            "yallist": "^2.0.0"
          }
        },
        "md5-hex": {
          "version": "1.3.0",
          "resolved": "https://registry.npmjs.org/md5-hex/-/md5-hex-1.3.0.tgz",
          "integrity": "sha1-0sSv6YPENwZiF5uMrRRSGRNQRsQ=",
          "dev": true,
          "requires": {
            "md5-o-matic": "^0.1.1"
          }
        },
        "md5-o-matic": {
          "version": "0.1.1",
          "resolved": "https://registry.npmjs.org/md5-o-matic/-/md5-o-matic-0.1.1.tgz",
          "integrity": "sha1-givM1l4RfFFPqxdrJZRdVBAKA8M=",
          "dev": true
        },
        "merge-source-map": {
          "version": "1.0.3",
          "resolved": "https://registry.npmjs.org/merge-source-map/-/merge-source-map-1.0.3.tgz",
          "integrity": "sha1-2hQV8nIqURnbB7FMT5c0EIY6Kr8=",
          "dev": true,
          "requires": {
            "source-map": "^0.5.3"
          }
        },
        "micromatch": {
          "version": "2.3.11",
          "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-2.3.11.tgz",
          "integrity": "sha1-hmd8l9FyCzY0MdBNDRUpO9OMFWU=",
          "dev": true,
          "requires": {
            "arr-diff": "^2.0.0",
            "array-unique": "^0.2.1",
            "braces": "^1.8.2",
            "expand-brackets": "^0.1.4",
            "extglob": "^0.3.1",
            "filename-regex": "^2.0.0",
            "is-extglob": "^1.0.0",
            "is-glob": "^2.0.1",
            "kind-of": "^3.0.2",
            "normalize-path": "^2.0.1",
            "object.omit": "^2.0.0",
            "parse-glob": "^3.0.4",
            "regex-cache": "^0.4.2"
          }
        },
        "minimatch": {
          "version": "3.0.3",
          "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.3.tgz",
          "integrity": "sha1-Kk5AkLlrLbBqnX3wEFWmKnfJt3Q=",
          "dev": true,
          "requires": {
            "brace-expansion": "^1.0.0"
          }
        },
        "minimist": {
          "version": "0.0.8",
          "resolved": "https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz",
          "integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=",
          "dev": true
        },
        "mkdirp": {
          "version": "0.5.1",
          "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz",
          "integrity": "sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=",
          "dev": true,
          "requires": {
            "minimist": "0.0.8"
          }
        },
        "ms": {
          "version": "0.7.3",
          "resolved": "https://registry.npmjs.org/ms/-/ms-0.7.3.tgz",
          "integrity": "sha1-cIFVpeROM/X9D8U+gdDUCpG+H/8=",
          "dev": true
        },
        "normalize-package-data": {
          "version": "2.3.8",
          "resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.3.8.tgz",
          "integrity": "sha1-2Bntoqne29H/pWPqQHHZNngilbs=",
          "dev": true,
          "requires": {
            "hosted-git-info": "^2.1.4",
            "is-builtin-module": "^1.0.0",
            "semver": "2 || 3 || 4 || 5",
            "validate-npm-package-license": "^3.0.1"
          }
        },
        "normalize-path": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-2.1.1.tgz",
          "integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
          "dev": true,
          "requires": {
            "remove-trailing-separator": "^1.0.1"
          }
        },
        "number-is-nan": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",
          "integrity": "sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0=",
          "dev": true
        },
        "object-assign": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
          "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=",
          "dev": true
        },
        "object.omit": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/object.omit/-/object.omit-2.0.1.tgz",
          "integrity": "sha1-Gpx0SCnznbuFjHbKNXmuKlTr0fo=",
          "dev": true,
          "requires": {
            "for-own": "^0.1.4",
            "is-extendable": "^0.1.1"
          }
        },
        "once": {
          "version": "1.4.0",
          "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
          "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
          "dev": true,
          "requires": {
            "wrappy": "1"
          }
        },
        "optimist": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/optimist/-/optimist-0.6.1.tgz",
          "integrity": "sha1-2j6nRob6IaGaERwybpDrFaAZZoY=",
          "dev": true,
          "requires": {
            "minimist": "~0.0.1",
            "wordwrap": "~0.0.2"
          }
        },
        "os-homedir": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz",
          "integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M=",
          "dev": true
        },
        "os-locale": {
          "version": "1.4.0",
          "resolved": "https://registry.npmjs.org/os-locale/-/os-locale-1.4.0.tgz",
          "integrity": "sha1-IPnxeuKe00XoveWDsT0gCYA8FNk=",
          "dev": true,
          "requires": {
            "lcid": "^1.0.0"
          }
        },
        "parse-glob": {
          "version": "3.0.4",
          "resolved": "https://registry.npmjs.org/parse-glob/-/parse-glob-3.0.4.tgz",
          "integrity": "sha1-ssN2z7EfNVE7rdFz7wu246OIORw=",
          "dev": true,
          "requires": {
            "glob-base": "^0.3.0",
            "is-dotfile": "^1.0.0",
            "is-extglob": "^1.0.0",
            "is-glob": "^2.0.0"
          }
        },
        "parse-json": {
          "version": "2.2.0",
          "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz",
          "integrity": "sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=",
          "dev": true,
          "requires": {
            "error-ex": "^1.2.0"
          }
        },
        "path-exists": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-2.1.0.tgz",
          "integrity": "sha1-D+tsZPD8UY2adU3V77YscCJ2H0s=",
          "dev": true,
          "requires": {
            "pinkie-promise": "^2.0.0"
          }
        },
        "path-is-absolute": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
          "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18=",
          "dev": true
        },
        "path-parse": {
          "version": "1.0.5",
          "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.5.tgz",
          "integrity": "sha1-PBrfhx6pzWyUMbbqK9dKD/BVxME=",
          "dev": true
        },
        "path-type": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/path-type/-/path-type-1.1.0.tgz",
          "integrity": "sha1-WcRPfuSR2nBNpBXaWkBwuk+P5EE=",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.2",
            "pify": "^2.0.0",
            "pinkie-promise": "^2.0.0"
          }
        },
        "pify": {
          "version": "2.3.0",
          "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
          "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
          "dev": true
        },
        "pinkie": {
          "version": "2.0.4",
          "resolved": "https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz",
          "integrity": "sha1-clVrgM+g1IqXToDnckjoDtT3+HA=",
          "dev": true
        },
        "pinkie-promise": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz",
          "integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
          "dev": true,
          "requires": {
            "pinkie": "^2.0.0"
          }
        },
        "pkg-dir": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-1.0.0.tgz",
          "integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",
          "dev": true,
          "requires": {
            "find-up": "^1.0.0"
          }
        },
        "preserve": {
          "version": "0.2.0",
          "resolved": "https://registry.npmjs.org/preserve/-/preserve-0.2.0.tgz",
          "integrity": "sha1-gV7R9uvGWSb4ZbMQwHE7yzMVzks=",
          "dev": true
        },
        "pseudomap": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz",
          "integrity": "sha1-8FKijacOYYkX7wqKw0wa5aaChrM=",
          "dev": true
        },
        "randomatic": {
          "version": "1.1.6",
          "resolved": "https://registry.npmjs.org/randomatic/-/randomatic-1.1.6.tgz",
          "integrity": "sha1-EQ3Kv/OX6dz/fAeJzMCkmt8exbs=",
          "dev": true,
          "requires": {
            "is-number": "^2.0.2",
            "kind-of": "^3.0.2"
          }
        },
        "read-pkg": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-1.1.0.tgz",
          "integrity": "sha1-9f+qXs0pyzHAR0vKfXVra7KePyg=",
          "dev": true,
          "requires": {
            "load-json-file": "^1.0.0",
            "normalize-package-data": "^2.3.2",
            "path-type": "^1.0.0"
          }
        },
        "read-pkg-up": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-1.0.1.tgz",
          "integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
          "dev": true,
          "requires": {
            "find-up": "^1.0.0",
            "read-pkg": "^1.0.0"
          }
        },
        "regenerator-runtime": {
          "version": "0.10.5",
          "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.10.5.tgz",
          "integrity": "sha1-M2w+/BIgrc7dosn6tntaeVWjNlg=",
          "dev": true
        },
        "regex-cache": {
          "version": "0.4.3",
          "resolved": "https://registry.npmjs.org/regex-cache/-/regex-cache-0.4.3.tgz",
          "integrity": "sha1-mxpsNdTQ3871cRrmUejp09cRQUU=",
          "dev": true,
          "requires": {
            "is-equal-shallow": "^0.1.3",
            "is-primitive": "^2.0.0"
          }
        },
        "remove-trailing-separator": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/remove-trailing-separator/-/remove-trailing-separator-1.0.1.tgz",
          "integrity": "sha1-YV67lq9VlVLUv0BXyENtSGq2PMQ=",
          "dev": true
        },
        "repeat-element": {
          "version": "1.1.2",
          "resolved": "https://registry.npmjs.org/repeat-element/-/repeat-element-1.1.2.tgz",
          "integrity": "sha1-7wiaF40Ug7quTZPrmLT55OEdmQo=",
          "dev": true
        },
        "repeat-string": {
          "version": "1.6.1",
          "resolved": "https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz",
          "integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc=",
          "dev": true
        },
        "repeating": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/repeating/-/repeating-2.0.1.tgz",
          "integrity": "sha1-UhTFOpJtNVJwdSf7q0FdvAjQbdo=",
          "dev": true,
          "requires": {
            "is-finite": "^1.0.0"
          }
        },
        "require-directory": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
          "integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I=",
          "dev": true
        },
        "require-main-filename": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-1.0.1.tgz",
          "integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE=",
          "dev": true
        },
        "resolve-from": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-2.0.0.tgz",
          "integrity": "sha1-lICrIOlP+h2egKgEx+oUdhGWa1c=",
          "dev": true
        },
        "right-align": {
          "version": "0.1.3",
          "resolved": "https://registry.npmjs.org/right-align/-/right-align-0.1.3.tgz",
          "integrity": "sha1-YTObci/mo1FWiSENJOFMlhSGE+8=",
          "dev": true,
          "optional": true,
          "requires": {
            "align-text": "^0.1.1"
          }
        },
        "rimraf": {
          "version": "2.6.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.6.1.tgz",
          "integrity": "sha1-wjOOxkPfeht/5cVPqG9XQopV8z0=",
          "dev": true,
          "requires": {
            "glob": "^7.0.5"
          }
        },
        "semver": {
          "version": "5.3.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.3.0.tgz",
          "integrity": "sha1-myzl094C0XxgEq0yaqa00M9U+U8=",
          "dev": true
        },
        "set-blocking": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
          "integrity": "sha1-BF+XgtARrppoA93TgrJDkrPYkPc=",
          "dev": true
        },
        "signal-exit": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz",
          "integrity": "sha1-tf3AjxKH6hF4Yo5BXiUTK3NkbG0=",
          "dev": true
        },
        "slide": {
          "version": "1.1.6",
          "resolved": "https://registry.npmjs.org/slide/-/slide-1.1.6.tgz",
          "integrity": "sha1-VusCfWW00tzmyy4tMsTUr8nh1wc=",
          "dev": true
        },
        "source-map": {
          "version": "0.5.6",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.6.tgz",
          "integrity": "sha1-dc449SvwczxafwwRjYEzSiu19BI=",
          "dev": true
        },
        "spawn-wrap": {
          "version": "1.2.4",
          "resolved": "https://registry.npmjs.org/spawn-wrap/-/spawn-wrap-1.2.4.tgz",
          "integrity": "sha1-kg6yEadpwJPuv71bDnpdLmirLkA=",
          "dev": true,
          "requires": {
            "foreground-child": "^1.3.3",
            "mkdirp": "^0.5.0",
            "os-homedir": "^1.0.1",
            "rimraf": "^2.3.3",
            "signal-exit": "^2.0.0",
            "which": "^1.2.4"
          },
          "dependencies": {
            "signal-exit": {
              "version": "2.1.2",
              "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-2.1.2.tgz",
              "integrity": "sha1-N1h5sfkuvDszRIDQONxUam1VhWQ=",
              "dev": true
            }
          }
        },
        "spdx-correct": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/spdx-correct/-/spdx-correct-1.0.2.tgz",
          "integrity": "sha1-SzBz2TP/UfORLwOsVRlJikFQ20A=",
          "dev": true,
          "requires": {
            "spdx-license-ids": "^1.0.2"
          }
        },
        "spdx-expression-parse": {
          "version": "1.0.4",
          "resolved": "https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-1.0.4.tgz",
          "integrity": "sha1-m98vIOH0DtRH++JzJmGR/O1RYmw=",
          "dev": true
        },
        "spdx-license-ids": {
          "version": "1.2.2",
          "resolved": "https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-1.2.2.tgz",
          "integrity": "sha1-yd96NCRZSt5r0RkA1ZZpbcBrrFc=",
          "dev": true
        },
        "string-width": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
          "integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",
          "dev": true,
          "requires": {
            "code-point-at": "^1.0.0",
            "is-fullwidth-code-point": "^1.0.0",
            "strip-ansi": "^3.0.0"
          }
        },
        "strip-ansi": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
          "dev": true,
          "requires": {
            "ansi-regex": "^2.0.0"
          }
        },
        "strip-bom": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
          "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",
          "dev": true,
          "requires": {
            "is-utf8": "^0.2.0"
          }
        },
        "supports-color": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
          "dev": true
        },
        "test-exclude": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/test-exclude/-/test-exclude-4.1.0.tgz",
          "integrity": "sha1-BMpwtzkN04yY1KADoXOAbKeZHJE=",
          "dev": true,
          "requires": {
            "arrify": "^1.0.1",
            "micromatch": "^2.3.11",
            "object-assign": "^4.1.0",
            "read-pkg-up": "^1.0.1",
            "require-main-filename": "^1.0.1"
          }
        },
        "to-fast-properties": {
          "version": "1.0.3",
          "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-1.0.3.tgz",
          "integrity": "sha1-uDVx+k2MJbguIxsG46MFXeTKGkc=",
          "dev": true
        },
        "trim-right": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/trim-right/-/trim-right-1.0.1.tgz",
          "integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM=",
          "dev": true
        },
        "uglify-js": {
          "version": "2.8.22",
          "resolved": "https://registry.npmjs.org/uglify-js/-/uglify-js-2.8.22.tgz",
          "integrity": "sha1-1Uk0d4qNoUkD+imjJvskwKtRoaA=",
          "dev": true,
          "optional": true,
          "requires": {
            "source-map": "~0.5.1",
            "uglify-to-browserify": "~1.0.0",
            "yargs": "~3.10.0"
          },
          "dependencies": {
            "yargs": {
              "version": "3.10.0",
              "resolved": "https://registry.npmjs.org/yargs/-/yargs-3.10.0.tgz",
              "integrity": "sha1-9+572FfdfB0tOMDnTvvWgdFDH9E=",
              "dev": true,
              "optional": true,
              "requires": {
                "camelcase": "^1.0.2",
                "cliui": "^2.1.0",
                "decamelize": "^1.0.0",
                "window-size": "0.1.0"
              }
            }
          }
        },
        "uglify-to-browserify": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.2.tgz",
          "integrity": "sha1-bgkk1r2mta/jSeOabWMoUKD4grc=",
          "dev": true,
          "optional": true
        },
        "validate-npm-package-license": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.1.tgz",
          "integrity": "sha1-KAS6vnEq0zeUWaz74kdGqywwP7w=",
          "dev": true,
          "requires": {
            "spdx-correct": "~1.0.0",
            "spdx-expression-parse": "~1.0.0"
          }
        },
        "which": {
          "version": "1.2.14",
          "resolved": "https://registry.npmjs.org/which/-/which-1.2.14.tgz",
          "integrity": "sha1-mofEN48D6CfOyvGs31bHNsAcFOU=",
          "dev": true,
          "requires": {
            "isexe": "^2.0.0"
          }
        },
        "which-module": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/which-module/-/which-module-1.0.0.tgz",
          "integrity": "sha1-u6Y8qGGUiZT/MHc2CJ47lgJsKk8=",
          "dev": true
        },
        "window-size": {
          "version": "0.1.0",
          "resolved": "https://registry.npmjs.org/window-size/-/window-size-0.1.0.tgz",
          "integrity": "sha1-VDjNLqk7IC76Ohn+iIeu58lPnJ0=",
          "dev": true,
          "optional": true
        },
        "wordwrap": {
          "version": "0.0.3",
          "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.3.tgz",
          "integrity": "sha1-o9XabNXAvAAI03I0u68b7WMFkQc=",
          "dev": true
        },
        "wrap-ansi": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-2.1.0.tgz",
          "integrity": "sha1-2Pw9KE3QV5T+hJc8rs3Rz4JP3YU=",
          "dev": true,
          "requires": {
            "string-width": "^1.0.1",
            "strip-ansi": "^3.0.1"
          }
        },
        "wrappy": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
          "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=",
          "dev": true
        },
        "write-file-atomic": {
          "version": "1.3.4",
          "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-1.3.4.tgz",
          "integrity": "sha1-+Aek8LHZ6ROuekgRLmzDrxmRtF8=",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.11",
            "imurmurhash": "^0.1.4",
            "slide": "^1.1.5"
          }
        },
        "y18n": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/y18n/-/y18n-3.2.1.tgz",
          "integrity": "sha1-bRX7qITAhnnA136I53WegR4H+kE=",
          "dev": true
        },
        "yallist": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz",
          "integrity": "sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI=",
          "dev": true
        },
        "yargs": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-7.1.0.tgz",
          "integrity": "sha1-a6MY6xaWFyf10oT46gA+jWFU0Mg=",
          "dev": true,
          "requires": {
            "camelcase": "^3.0.0",
            "cliui": "^3.2.0",
            "decamelize": "^1.1.1",
            "get-caller-file": "^1.0.1",
            "os-locale": "^1.4.0",
            "read-pkg-up": "^1.0.1",
            "require-directory": "^2.1.1",
            "require-main-filename": "^1.0.1",
            "set-blocking": "^2.0.0",
            "string-width": "^1.0.2",
            "which-module": "^1.0.0",
            "y18n": "^3.2.1",
            "yargs-parser": "^5.0.0"
          },
          "dependencies": {
            "camelcase": {
              "version": "3.0.0",
              "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-3.0.0.tgz",
              "integrity": "sha1-MvxLn82vhF/N9+c7uXysImHwqwo=",
              "dev": true
            },
            "cliui": {
              "version": "3.2.0",
              "resolved": "https://registry.npmjs.org/cliui/-/cliui-3.2.0.tgz",
              "integrity": "sha1-EgYBU3qRbSmUD5NNo7SNWFo5IT0=",
              "dev": true,
              "requires": {
                "string-width": "^1.0.1",
                "strip-ansi": "^3.0.1",
                "wrap-ansi": "^2.0.0"
              }
            }
          }
        },
        "yargs-parser": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-5.0.0.tgz",
          "integrity": "sha1-J17PDX/+Bcd+ZOfIbkzZS/DhIoo=",
          "dev": true,
          "requires": {
            "camelcase": "^3.0.0"
          },
          "dependencies": {
            "camelcase": {
              "version": "3.0.0",
              "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-3.0.0.tgz",
              "integrity": "sha1-MvxLn82vhF/N9+c7uXysImHwqwo=",
              "dev": true
            }
          }
        }
      }
    },
    "oauth-sign": {
      "version": "0.8.2",
      "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.8.2.tgz",
      "integrity": "sha1-Rqarfwrq2N6unsBWV4C31O/rnUM=",
      "dev": true
    },
    "object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
    },
    "on-finished": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz",
      "integrity": "sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=",
      "requires": {
        "ee-first": "1.1.1"
      }
    },
    "once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
      "requires": {
        "wrappy": "1"
      }
    },
    "os-homedir": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz",
      "integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M="
    },
    "os-tmpdir": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz",
      "integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ="
    },
    "osenv": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/osenv/-/osenv-0.1.5.tgz",
      "integrity": "sha512-0CWcCECdMVc2Rw3U5w9ZjqX6ga6ubk1xDVKxtBQPK7wis/0F2r9T6k4ydGYhecl7YUBxBVxhL5oisPsNxAPe2g==",
      "requires": {
        "os-homedir": "^1.0.0",
        "os-tmpdir": "^1.0.0"
      }
    },
    "parse-passwd": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/parse-passwd/-/parse-passwd-1.0.0.tgz",
      "integrity": "sha1-bVuTSkVpk7I9N/QKOC1vFmao5cY=",
      "dev": true
    },
    "parseurl": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ=="
    },
    "path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18="
    },
    "path-parse": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.6.tgz",
      "integrity": "sha512-GSmOT2EbHrINBf9SR7CDELwlJ8AENk3Qn7OikK4nFYAu3Ote2+JYNVvkpAEQm3/TLNEJFD/xZJjzyxg3KBWOzw==",
      "dev": true
    },
    "path-to-regexp": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz",
      "integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w="
    },
    "performance-now": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
      "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns="
    },
    "pinkie": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz",
      "integrity": "sha1-clVrgM+g1IqXToDnckjoDtT3+HA=",
      "dev": true
    },
    "pinkie-promise": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz",
      "integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
      "dev": true,
      "requires": {
        "pinkie": "^2.0.0"
      }
    },
    "prettier": {
      "version": "1.19.1",
      "resolved": "https://registry.npmjs.org/prettier/-/prettier-1.19.1.tgz",
      "integrity": "sha512-s7PoyDv/II1ObgQunCbB9PdLmUcBZcnWOcxDh7O0N/UwDEsHyqkW+Qh28jW+mVuCdx7gLB0BotYI1Y6uI9iyew==",
      "dev": true
    },
    "process-nextick-args": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag=="
    },
    "proxy-addr": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.6.tgz",
      "integrity": "sha512-dh/frvCBVmSsDYzw6n926jv974gddhkFPfiN8hPOi30Wax25QZyZEGveluCgliBnqmuM+UJmBErbAUFIoDbjOw==",
      "requires": {
        "forwarded": "~0.1.2",
        "ipaddr.js": "1.9.1"
      }
    },
    "psl": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/psl/-/psl-1.7.0.tgz",
      "integrity": "sha512-5NsSEDv8zY70ScRnOTn7bK7eanl2MvFrOrS/R6x+dBt5g1ghnj9Zv90kO8GwT8gxcu2ANyFprnFYB85IogIJOQ=="
    },
    "punycode": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz",
      "integrity": "sha1-wNWmOycYgArY4esPpSachN1BhF4=",
      "dev": true
    },
    "qs": {
      "version": "6.3.2",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.3.2.tgz",
      "integrity": "sha1-51vV9uJoEioqDgvaYwslUMFmUCw=",
      "dev": true
    },
    "range-parser": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
      "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg=="
    },
    "raw-body": {
      "version": "2.4.0",
      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.4.0.tgz",
      "integrity": "sha512-4Oz8DUIwdvoa5qMJelxipzi/iJIi40O5cGV1wNYp5hvZP8ZN0T+jiNkL0QepXs+EsQ9XJ8ipEDoiH70ySUJP3Q==",
      "requires": {
        "bytes": "3.1.0",
        "http-errors": "1.7.2",
        "iconv-lite": "0.4.24",
        "unpipe": "1.0.0"
      }
    },
    "rc": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/rc/-/rc-1.2.8.tgz",
      "integrity": "sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexCgccckhcZvywyQYPOw==",
      "requires": {
        "deep-extend": "^0.6.0",
        "ini": "~1.3.0",
        "minimist": "^1.2.0",
        "strip-json-comments": "~2.0.1"
      }
    },
    "readable-stream": {
      "version": "2.3.7",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
      "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
      "requires": {
        "core-util-is": "~1.0.0",
        "inherits": "~2.0.3",
        "isarray": "~1.0.0",
        "process-nextick-args": "~2.0.0",
        "safe-buffer": "~5.1.1",
        "string_decoder": "~1.1.1",
        "util-deprecate": "~1.0.1"
      }
    },
    "request": {
      "version": "2.79.0",
      "resolved": "https://registry.npmjs.org/request/-/request-2.79.0.tgz",
      "integrity": "sha1-Tf5b9r6LjNw3/Pk+BLZVd3InEN4=",
      "dev": true,
      "requires": {
        "aws-sign2": "~0.6.0",
        "aws4": "^1.2.1",
        "caseless": "~0.11.0",
        "combined-stream": "~1.0.5",
        "extend": "~3.0.0",
        "forever-agent": "~0.6.1",
        "form-data": "~2.1.1",
        "har-validator": "~2.0.6",
        "hawk": "~3.1.3",
        "http-signature": "~1.1.0",
        "is-typedarray": "~1.0.0",
        "isstream": "~0.1.2",
        "json-stringify-safe": "~5.0.1",
        "mime-types": "~2.1.7",
        "oauth-sign": "~0.8.1",
        "qs": "~6.3.0",
        "stringstream": "~0.0.4",
        "tough-cookie": "~2.3.0",
        "tunnel-agent": "~0.4.1",
        "uuid": "^3.0.0"
      }
    },
    "resolve": {
      "version": "1.15.1",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.15.1.tgz",
      "integrity": "sha512-84oo6ZTtoTUpjgNEr5SJyzQhzL72gaRodsSfyxC/AXRvwu0Yse9H8eF9IpGo7b8YetZhlI6v7ZQ6bKBFV/6S7w==",
      "dev": true,
      "requires": {
        "path-parse": "^1.0.6"
      }
    },
    "rimraf": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
      "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
      "requires": {
        "glob": "^7.1.3"
      }
    },
    "safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
    },
    "safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="
    },
    "sax": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/sax/-/sax-1.2.4.tgz",
      "integrity": "sha512-NqVDv9TpANUjFm0N8uM5GxL36UgKi9/atZw+x7YFnQ8ckwFGKrl4xX4yWtrey3UJm5nP1kUbnYgLopqWNSRhWw=="
    },
    "semver": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
      "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ=="
    },
    "send": {
      "version": "0.17.1",
      "resolved": "https://registry.npmjs.org/send/-/send-0.17.1.tgz",
      "integrity": "sha512-BsVKsiGcQMFwT8UxypobUKyv7irCNRHk1T0G680vk88yf6LBByGcZJOTJCrTP2xVN6yI+XjPJcNuE3V4fT9sAg==",
      "requires": {
        "debug": "2.6.9",
        "depd": "~1.1.2",
        "destroy": "~1.0.4",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "fresh": "0.5.2",
        "http-errors": "~1.7.2",
        "mime": "1.6.0",
        "ms": "2.1.1",
        "on-finished": "~2.3.0",
        "range-parser": "~1.2.1",
        "statuses": "~1.5.0"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "requires": {
            "ms": "2.0.0"
          },
          "dependencies": {
            "ms": {
              "version": "2.0.0",
              "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
              "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
            }
          }
        },
        "ms": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.1.tgz",
          "integrity": "sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z/EfhWI4gl1Hwq8B/GmY/0oXZ6nF8hDVesS/FpnYaD/kOWhYQvyg=="
        }
      }
    },
    "serve-static": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.14.1.tgz",
      "integrity": "sha512-JMrvUwE54emCYWlTI+hGrGv5I8dEwmco/00EvkzIIsR7MqrHonbD9pO2MOfFnpFntl7ecpZs+3mW+XbQZu9QCg==",
      "requires": {
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "parseurl": "~1.3.3",
        "send": "0.17.1"
      }
    },
    "set-blocking": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
      "integrity": "sha1-BF+XgtARrppoA93TgrJDkrPYkPc="
    },
    "setprototypeof": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.1.tgz",
      "integrity": "sha512-JvdAWfbXeIGaZ9cILp38HntZSFSo3mWg6xGcJJsd+d4aRMOqauag1C63dJfDw7OaMYwEbHMOxEZ1lqVRYP2OAw=="
    },
    "signal-exit": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz",
      "integrity": "sha1-tf3AjxKH6hF4Yo5BXiUTK3NkbG0="
    },
    "sntp": {
      "version": "1.0.9",
      "resolved": "https://registry.npmjs.org/sntp/-/sntp-1.0.9.tgz",
      "integrity": "sha1-ZUEYTMkK7qbG57NeJlkIJEPGYZg=",
      "dev": true,
      "requires": {
        "hoek": "2.x.x"
      }
    },
    "source-map": {
      "version": "0.5.7",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
      "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",
      "dev": true
    },
    "source-map-support": {
      "version": "0.4.18",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.4.18.tgz",
      "integrity": "sha512-try0/JqxPLF9nOjvSta7tVondkP5dwgyLDjVoyMDlmjugT2lRZ1OfsrYTkCd2hkDnJTKRbO/Rl3orm8vlsUzbA==",
      "dev": true,
      "requires": {
        "source-map": "^0.5.6"
      }
    },
    "sprintf-js": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
      "integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=",
      "dev": true
    },
    "sqlite3": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/sqlite3/-/sqlite3-4.1.1.tgz",
      "integrity": "sha512-CvT5XY+MWnn0HkbwVKJAyWEMfzpAPwnTiB3TobA5Mri44SrTovmmh499NPQP+gatkeOipqPlBLel7rn4E/PCQg==",
      "requires": {
        "nan": "^2.12.1",
        "node-pre-gyp": "^0.11.0",
        "request": "^2.87.0"
      },
      "dependencies": {
        "assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU="
        },
        "aws-sign2": {
          "version": "0.7.0",
          "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
          "integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg="
        },
        "caseless": {
          "version": "0.12.0",
          "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
          "integrity": "sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw="
        },
        "form-data": {
          "version": "2.3.3",
          "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
          "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
          "requires": {
            "asynckit": "^0.4.0",
            "combined-stream": "^1.0.6",
            "mime-types": "^2.1.12"
          }
        },
        "har-validator": {
          "version": "5.1.3",
          "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.3.tgz",
          "integrity": "sha512-sNvOCzEQNr/qrvJgc3UG/kD4QtlHycrzwS+6mfTrrSq97BvaYcPZZI1ZSqGSPR73Cxn4LKTD4PttRwfU7jWq5g==",
          "requires": {
            "ajv": "^6.5.5",
            "har-schema": "^2.0.0"
          }
        },
        "http-signature": {
          "version": "1.2.0",
          "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
          "integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
          "requires": {
            "assert-plus": "^1.0.0",
            "jsprim": "^1.2.2",
            "sshpk": "^1.7.0"
          }
        },
        "oauth-sign": {
          "version": "0.9.0",
          "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
          "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ=="
        },
        "punycode": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
          "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A=="
        },
        "qs": {
          "version": "6.5.2",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
          "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA=="
        },
        "request": {
          "version": "2.88.2",
          "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
          "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
          "requires": {
            "aws-sign2": "~0.7.0",
            "aws4": "^1.8.0",
            "caseless": "~0.12.0",
            "combined-stream": "~1.0.6",
            "extend": "~3.0.2",
            "forever-agent": "~0.6.1",
            "form-data": "~2.3.2",
            "har-validator": "~5.1.3",
            "http-signature": "~1.2.0",
            "is-typedarray": "~1.0.0",
            "isstream": "~0.1.2",
            "json-stringify-safe": "~5.0.1",
            "mime-types": "~2.1.19",
            "oauth-sign": "~0.9.0",
            "performance-now": "^2.1.0",
            "qs": "~6.5.2",
            "safe-buffer": "^5.1.2",
            "tough-cookie": "~2.5.0",
            "tunnel-agent": "^0.6.0",
            "uuid": "^3.3.2"
          }
        },
        "tough-cookie": {
          "version": "2.5.0",
          "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
          "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
          "requires": {
            "psl": "^1.1.28",
            "punycode": "^2.1.1"
          }
        },
        "tunnel-agent": {
          "version": "0.6.0",
          "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
          "integrity": "sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=",
          "requires": {
            "safe-buffer": "^5.0.1"
          }
        }
      }
    },
    "sshpk": {
      "version": "1.16.1",
      "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.16.1.tgz",
      "integrity": "sha512-HXXqVUq7+pcKeLqqZj6mHFUMvXtOJt1uoUx09pFW6011inTMxqI8BA8PM95myrIyyKwdnzjdFjLiE6KBPVtJIg==",
      "requires": {
        "asn1": "~0.2.3",
        "assert-plus": "^1.0.0",
        "bcrypt-pbkdf": "^1.0.0",
        "dashdash": "^1.12.0",
        "ecc-jsbn": "~0.1.1",
        "getpass": "^0.1.1",
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.0.2",
        "tweetnacl": "~0.14.0"
      },
      "dependencies": {
        "assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU="
        }
      }
    },
    "statuses": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
      "integrity": "sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow="
    },
    "string-width": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
      "integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",
      "requires": {
        "code-point-at": "^1.0.0",
        "is-fullwidth-code-point": "^1.0.0",
        "strip-ansi": "^3.0.0"
      }
    },
    "string_decoder": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
      "requires": {
        "safe-buffer": "~5.1.0"
      }
    },
    "stringstream": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/stringstream/-/stringstream-0.0.6.tgz",
      "integrity": "sha512-87GEBAkegbBcweToUrdzf3eLhWNg06FJTebl4BVJz/JgWy8CvEr9dRtX5qWphiynMSQlxxi+QqN0z5T32SLlhA==",
      "dev": true
    },
    "strip-ansi": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
      "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
      "requires": {
        "ansi-regex": "^2.0.0"
      }
    },
    "strip-json-comments": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",
      "integrity": "sha1-PFMZQukIwml8DsNEhYwobHygpgo="
    },
    "supports-color": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-3.1.2.tgz",
      "integrity": "sha1-cqJiiU2dQIuVbKBf83su2KbiotU=",
      "dev": true,
      "requires": {
        "has-flag": "^1.0.0"
      }
    },
    "tar": {
      "version": "4.4.13",
      "resolved": "https://registry.npmjs.org/tar/-/tar-4.4.13.tgz",
      "integrity": "sha512-w2VwSrBoHa5BsSyH+KxEqeQBAllHhccyMFVHtGtdMpF4W7IRWfZjFiQceJPChOeTsSDVUpER2T8FA93pr0L+QA==",
      "requires": {
        "chownr": "^1.1.1",
        "fs-minipass": "^1.2.5",
        "minipass": "^2.8.6",
        "minizlib": "^1.2.1",
        "mkdirp": "^0.5.0",
        "safe-buffer": "^5.1.2",
        "yallist": "^3.0.3"
      }
    },
    "toidentifier": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.0.tgz",
      "integrity": "sha512-yaOH/Pk/VEhBWWTlhI+qXxDFXlejDGcQipMlyxda9nthulaxLZUNcUqFxokp0vcYnvteJln5FNQDRrxj3YcbVw=="
    },
    "tough-cookie": {
      "version": "2.3.4",
      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.3.4.tgz",
      "integrity": "sha512-TZ6TTfI5NtZnuyy/Kecv+CnoROnyXn2DN97LontgQpCwsX2XyLYCC0ENhYkehSOwAp8rTQKc/NUIF7BkQ5rKLA==",
      "dev": true,
      "requires": {
        "punycode": "^1.4.1"
      }
    },
    "ts-node": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/ts-node/-/ts-node-3.3.0.tgz",
      "integrity": "sha1-wTxqMCTjC+EYDdUwOPwgkonUv2k=",
      "dev": true,
      "requires": {
        "arrify": "^1.0.0",
        "chalk": "^2.0.0",
        "diff": "^3.1.0",
        "make-error": "^1.1.1",
        "minimist": "^1.2.0",
        "mkdirp": "^0.5.1",
        "source-map-support": "^0.4.0",
        "tsconfig": "^6.0.0",
        "v8flags": "^3.0.0",
        "yn": "^2.0.0"
      },
      "dependencies": {
        "diff": {
          "version": "3.5.0",
          "resolved": "https://registry.npmjs.org/diff/-/diff-3.5.0.tgz",
          "integrity": "sha512-A46qtFgd+g7pDZinpnwiRJtxbC1hpgf0uzP3iG89scHk0AUC7A1TGxf5OiiOUv/JMZR8GOt8hL900hV0bOy5xA==",
          "dev": true
        }
      }
    },
    "tsconfig": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/tsconfig/-/tsconfig-6.0.0.tgz",
      "integrity": "sha1-aw6DdgA9evGGT434+J3QBZ/80DI=",
      "dev": true,
      "requires": {
        "strip-bom": "^3.0.0",
        "strip-json-comments": "^2.0.0"
      },
      "dependencies": {
        "strip-bom": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
          "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=",
          "dev": true
        }
      }
    },
    "tslib": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.11.1.tgz",
      "integrity": "sha512-aZW88SY8kQbU7gpV19lN24LtXh/yD4ZZg6qieAJDDg+YBsJcSmLGK9QpnUjAKVG/xefmvJGd1WUmfpT/g6AJGA==",
      "dev": true
    },
    "tslint": {
      "version": "5.20.1",
      "resolved": "https://registry.npmjs.org/tslint/-/tslint-5.20.1.tgz",
      "integrity": "sha512-EcMxhzCFt8k+/UP5r8waCf/lzmeSyVlqxqMEDQE7rWYiQky8KpIBz1JAoYXfROHrPZ1XXd43q8yQnULOLiBRQg==",
      "dev": true,
      "requires": {
        "@babel/code-frame": "^7.0.0",
        "builtin-modules": "^1.1.1",
        "chalk": "^2.3.0",
        "commander": "^2.12.1",
        "diff": "^4.0.1",
        "glob": "^7.1.1",
        "js-yaml": "^3.13.1",
        "minimatch": "^3.0.4",
        "mkdirp": "^0.5.1",
        "resolve": "^1.3.2",
        "semver": "^5.3.0",
        "tslib": "^1.8.0",
        "tsutils": "^2.29.0"
      },
      "dependencies": {
        "diff": {
          "version": "4.0.2",
          "resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",
          "integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==",
          "dev": true
        },
        "esprima": {
          "version": "4.0.1",
          "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
          "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
          "dev": true
        },
        "js-yaml": {
          "version": "3.13.1",
          "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.13.1.tgz",
          "integrity": "sha512-YfbcO7jXDdyj0DGxYVSlSeQNHbD7XPWvrVWeVUujrQEoZzWJIRrCPoyk6kL6IAjAG2IolMK4T0hNUe0HOUs5Jw==",
          "dev": true,
          "requires": {
            "argparse": "^1.0.7",
            "esprima": "^4.0.0"
          }
        }
      }
    },
    "tslint-config-prettier": {
      "version": "1.18.0",
      "resolved": "https://registry.npmjs.org/tslint-config-prettier/-/tslint-config-prettier-1.18.0.tgz",
      "integrity": "sha512-xPw9PgNPLG3iKRxmK7DWr+Ea/SzrvfHtjFt5LBl61gk2UBG/DB9kCXRjv+xyIU1rUtnayLeMUVJBcMX8Z17nDg==",
      "dev": true
    },
    "tsutils": {
      "version": "2.29.0",
      "resolved": "https://registry.npmjs.org/tsutils/-/tsutils-2.29.0.tgz",
      "integrity": "sha512-g5JVHCIJwzfISaXpXE1qvNalca5Jwob6FjI4AoPlqMusJ6ftFE7IkkFoMhVLRgK+4Kx3gkzb8UZK5t5yTTvEmA==",
      "dev": true,
      "requires": {
        "tslib": "^1.8.1"
      }
    },
    "tunnel-agent": {
      "version": "0.4.3",
      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.4.3.tgz",
      "integrity": "sha1-Y3PbdpCf5XDgjXNYM2Xtgop07us=",
      "dev": true
    },
    "tweetnacl": {
      "version": "0.14.5",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
      "integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q="
    },
    "type-detect": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/type-detect/-/type-detect-1.0.0.tgz",
      "integrity": "sha1-diIXzAbbJY7EiQihKY6LlRIejqI=",
      "dev": true
    },
    "type-is": {
      "version": "1.6.18",
      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
      "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
      "requires": {
        "media-typer": "0.3.0",
        "mime-types": "~2.1.24"
      }
    },
    "typescript": {
      "version": "2.9.2",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-2.9.2.tgz",
      "integrity": "sha512-Gr4p6nFNaoufRIY4NMdpQRNmgxVIGMs4Fcu/ujdYk3nAZqk7supzBE9idmvfZIlH/Cuj//dvi+019qEue9lV0w==",
      "dev": true
    },
    "unpipe": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
      "integrity": "sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw="
    },
    "uri-js": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.2.2.tgz",
      "integrity": "sha512-KY9Frmirql91X2Qgjry0Wd4Y+YTdrdZheS8TFwvkbLWf/G5KNJDCh6pKL5OZctEW4+0Baa5idK2ZQuELRwPznQ==",
      "requires": {
        "punycode": "^2.1.0"
      },
      "dependencies": {
        "punycode": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
          "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A=="
        }
      }
    },
    "util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8="
    },
    "utils-merge": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
      "integrity": "sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM="
    },
    "uuid": {
      "version": "3.4.0",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
      "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A=="
    },
    "v8flags": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/v8flags/-/v8flags-3.1.3.tgz",
      "integrity": "sha512-amh9CCg3ZxkzQ48Mhcb8iX7xpAfYJgePHxWMQCBWECpOSqJUXgY26ncA61UTV0BkPqfhcy6mzwCIoP4ygxpW8w==",
      "dev": true,
      "requires": {
        "homedir-polyfill": "^1.0.1"
      }
    },
    "vary": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
      "integrity": "sha1-IpnwLG3tMNSllhsLn3RSShj2NPw="
    },
    "verror": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
      "integrity": "sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=",
      "requires": {
        "assert-plus": "^1.0.0",
        "core-util-is": "1.0.2",
        "extsprintf": "^1.2.0"
      },
      "dependencies": {
        "assert-plus": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
          "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU="
        }
      }
    },
    "wide-align": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/wide-align/-/wide-align-1.1.3.tgz",
      "integrity": "sha512-QGkOQc8XL6Bt5PwnsExKBPuMKBxnGxWWW3fU55Xt4feHozMUhdUMaBCk290qpm/wG5u/RSKzwdAC4i51YigihA==",
      "requires": {
        "string-width": "^1.0.2 || 2"
      }
    },
    "wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8="
    },
    "xtend": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
      "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
      "dev": true
    },
    "yallist": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g=="
    },
    "yn": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/yn/-/yn-2.0.0.tgz",
      "integrity": "sha1-5a2ryKz0CPY4X8dklWhMiOavaJo=",
      "dev": true
    }
  }
}

'''
'''--- fakeArweave/package.json ---
{
  "name": "fake-arweave",
  "version": "0.0.0",
  "description": "fake-arweave",
  "license": "MIT",
  "repository": "",
  "author": "",
  "keywords": [
    ""
  ],
  "files": [
    "lib"
  ],
  "main": "lib/index.js",
  "typings": "lib/index.d.ts",
  "scripts": {
    "clean": "rimraf lib",
    "format": "prettier --write \"{src,test}/**/*.ts\"",
    "lint": "tslint --force --format verbose \"src/**/*.ts\"",
    "prepublishOnly": "npm run build",
    "build": "npm run format && npm run clean && npm run lint && echo Using TypeScript && tsc --version && tsc --pretty",
    "test": "npm run build && mocha --compilers ts:ts-node/register --recursive \"test/**/*-spec.ts\"",
    "coverage": "nyc --include=\"src/**/*.ts\" --reporter=text --reporter=html --reporter=lcov mocha --compilers ts:ts-node/register --recursive \"test/**/*-spec.ts\"",
    "watch": "npm run build -- --watch",
    "watch:test": "npm run test -- --watch"
  },
  "dependencies": {
    "body-parser": "^1.19.0",
    "cors": "^2.8.5",
    "express": "^4.17.1",
    "sqlite3": "^4.1.1"
  },
  "devDependencies": {
    "@types/body-parser": "^1.19.0",
    "@types/chai": "^3.0.0",
    "@types/cors": "^2.8.6",
    "@types/express": "^4.17.3",
    "@types/mocha": "^2.0.0",
    "@types/node": "^8.0.0",
    "@types/sqlite3": "^3.1.6",
    "chai": "^3.0.0",
    "coveralls": "^2.0.0",
    "mocha": "^3.0.0",
    "nyc": "^10.0.0",
    "prettier": "^1.5.2",
    "rimraf": "^2.0.0",
    "ts-node": "^3.0.0",
    "tslint": "^5.0.0",
    "tslint-config-prettier": "^1.1.0",
    "typescript": "^2.3.0"
  },
  "engines": {
    "node": ">=6.0.0"
  },
  "nyc": {
    "include": [
      "src/**/*.ts"
    ],
    "exclude": [
      "lib"
    ],
    "extension": [
      ".ts"
    ],
    "require": [
      "ts-node/register"
    ],
    "reporter": [],
    "all": true
  }
}

'''
'''--- fakeArweave/src/greeter.ts ---
export class Greeter {
  private greeting: string;

  constructor(message: string) {
    this.greeting = message;
  }

  public greet(): string {
    return `Bonjour, ${this.greeting}!`;
  }
}

'''
'''--- fakeArweave/src/index.ts ---
// Import all of our dependencies
import express = require("express");
import cors = require("cors");
import bodyParser = require("body-parser");

const app = express();
const port = 3000 || process.env.PORT;

// function updateValues(callback: () => void) {
//   callback();
// }

app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());
app.use(cors());

// Handles whenever the root directory of the website is accessed.
app.get("/", function(req: express.Request, res: express.Response) {
  // Respond with Express
  res.send("Hello world!");
});

// // Set app to listen
// app.listen(port, function() {
//   updateValues(function() {
//     console.log(`server is running on port ${port}`);
//   });
// });

app.listen(port, () => {
  // tslint:disable-next-line:no-console
  console.log(`server started at http://localhost:${port}`);
});

'''
'''--- fakeArweave/test/greeter-spec.ts ---
/// <reference path='../node_modules/@types/mocha/index.d.ts' />

import { Greeter } from "../src/greeter";
import * as chai from "chai";

const expect = chai.expect;

describe("Greeter", () => {
  it("should greet with message", () => {
    const greeter = new Greeter("friend");
    expect(greeter.greet()).to.equal("Bonjour, friend!");
  });
});

'''
'''--- fakeArweave/test/index-spec.ts ---
/// <reference path='../node_modules/@types/mocha/index.d.ts' />

import index = require("../src/index");
import * as chai from "chai";

const expect = chai.expect;
describe("index - Greeter", () => {
  it("should provide Greeter", () => {
    expect(index.Greeter).to.not.be.undefined;
  });
});

'''
'''--- fakeArweave/tsconfig.json ---
{
  "compilerOptions": {
    "declaration": true,
    "module": "commonjs",
    "moduleResolution": "node",
    "lib": [
      "esnext"
    ],
    "target": "es2015",
    "strict": true,
    "outDir": "./lib",
    "preserveConstEnums": true,
    "removeComments": true,
    "inlineSourceMap": true,
    "typeRoots": [
      "./node_modules/@types"
    ]
  },
  "include": [
    "src/**/*"
  ],
  "exclude": [
    "node_modules",
    "**/*-spec.ts"
  ]
}

'''
'''--- fakeArweave/tslint.json ---
{
  "extends": [
    "tslint:latest",
    "tslint-config-prettier"
  ]
}

'''
'''--- firebase.json ---
{
  "hosting": {
    "public": "dist/decentradocs-ng",
    "ignore": [
      "firebase.json",
      "**/.*",
      "**/node_modules/**"
    ],
    "rewrites": [
      {
        "source": "**",
        "destination": "/index.html"
      }
    ]
  }
}

'''
'''--- karma.conf.js ---
// Karma configuration file, see link for more information
// https://karma-runner.github.io/1.0/config/configuration-file.html

module.exports = function (config) {
  config.set({
    basePath: '',
    frameworks: ['jasmine', '@angular-devkit/build-angular'],
    plugins: [
      require('karma-jasmine'),
      require('karma-chrome-launcher'),
      require('karma-jasmine-html-reporter'),
      require('karma-coverage-istanbul-reporter'),
      require('@angular-devkit/build-angular/plugins/karma')
    ],
    client: {
      clearContext: false // leave Jasmine Spec Runner output visible in browser
    },
    coverageIstanbulReporter: {
      dir: require('path').join(__dirname, './coverage/arweave-ng'),
      reports: ['html', 'lcovonly', 'text-summary'],
      fixWebpackSourcePaths: true
    },
    reporters: ['progress', 'kjhtml'],
    port: 9876,
    colors: true,
    logLevel: config.LOG_INFO,
    autoWatch: true,
    browsers: ['Chrome'],
    singleRun: false,
    restartOnFileChange: true
  });
};

'''
'''--- migrations/1_initial_migration.js ---
const Migrations = artifacts.require("Migrations");

module.exports = function(deployer) {
  deployer.deploy(Migrations);
};

'''
'''--- migrations/2_DVSRegistry_migration.js ---
const DVSRegistry = artifacts.require("DVSRegistry.sol");

module.exports = async function(deployer) {
    await deployer.deploy(DVSRegistry)
    const dvsRegistry = await DVSRegistry.deployed()
};
'''
'''--- package-lock.json ---
{
  "name": "arweave-ng",
  "version": "0.0.0",
  "lockfileVersion": 1,
  "requires": true,
  "dependencies": {
    "@angular-builders/custom-webpack": {
      "version": "9.0.0",
      "resolved": "https://registry.npmjs.org/@angular-builders/custom-webpack/-/custom-webpack-9.0.0.tgz",
      "integrity": "sha512-L69pCiYGG3NGX0yLi5P88Nw8Nm9jg8RiurwrAzcf9WBKIloHJtFDZJdznrncL+baB++mAcpahIZGz9WGOH9ByQ==",
      "dev": true,
      "requires": {
        "@angular-devkit/architect": "^0.900.0",
        "@angular-devkit/build-angular": "^0.900.0",
        "@angular-devkit/core": "^9.0.0",
        "lodash": "^4.17.10",
        "ts-node": "^8.5.2",
        "webpack-merge": "^4.2.1"
      },
      "dependencies": {
        "ts-node": {
          "version": "8.8.1",
          "resolved": "https://registry.npmjs.org/ts-node/-/ts-node-8.8.1.tgz",
          "integrity": "sha512-10DE9ONho06QORKAaCBpPiFCdW+tZJuY/84tyypGtl6r+/C7Asq0dhqbRZURuUlLQtZxxDvT8eoj8cGW0ha6Bg==",
          "dev": true,
          "requires": {
            "arg": "^4.1.0",
            "diff": "^4.0.1",
            "make-error": "^1.1.1",
            "source-map-support": "^0.5.6",
            "yn": "3.1.1"
          }
        }
      }
    },
    "@angular-devkit/architect": {
      "version": "0.900.6",
      "resolved": "https://registry.npmjs.org/@angular-devkit/architect/-/architect-0.900.6.tgz",
      "integrity": "sha512-WK8e09DgNP1NHP1gqVQ9w+9rlRMVDJxAh4qZGJRjZBXd3LY7y84WWRmTpfuhOSu+82fR3/n76+urxraU3ZVphw==",
      "dev": true,
      "requires": {
        "@angular-devkit/core": "9.0.6",
        "rxjs": "6.5.3"
      },
      "dependencies": {
        "rxjs": {
          "version": "6.5.3",
          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.5.3.tgz",
          "integrity": "sha512-wuYsAYYFdWTAnAaPoKGNhfpWwKZbJW+HgAJ+mImp+Epl7BG8oNWBCTyRM8gba9k4lk8BgWdoYm21Mo/RYhhbgA==",
          "dev": true,
          "requires": {
            "tslib": "^1.9.0"
          }
        }
      }
    },
    "@angular-devkit/build-angular": {
      "version": "0.900.7",
      "resolved": "https://registry.npmjs.org/@angular-devkit/build-angular/-/build-angular-0.900.7.tgz",
      "integrity": "sha512-Yv2y3OEaYEd0fE0pKvtqBpmkQYs9xJws7thHnJYCwIfYO55RfolYsXkJgAXke/4NPLrD3EsIDqoPxF7l+uw2/Q==",
      "dev": true,
      "requires": {
        "@angular-devkit/architect": "0.900.7",
        "@angular-devkit/build-optimizer": "0.900.7",
        "@angular-devkit/build-webpack": "0.900.7",
        "@angular-devkit/core": "9.0.7",
        "@babel/core": "7.7.7",
        "@babel/generator": "7.7.7",
        "@babel/preset-env": "7.7.7",
        "@ngtools/webpack": "9.0.7",
        "ajv": "6.10.2",
        "autoprefixer": "9.7.1",
        "babel-loader": "8.0.6",
        "browserslist": "^4.9.1",
        "cacache": "13.0.1",
        "caniuse-lite": "^1.0.30001032",
        "circular-dependency-plugin": "5.2.0",
        "copy-webpack-plugin": "5.1.1",
        "core-js": "3.6.4",
        "coverage-istanbul-loader": "2.0.3",
        "cssnano": "4.1.10",
        "file-loader": "4.2.0",
        "find-cache-dir": "3.0.0",
        "glob": "7.1.5",
        "jest-worker": "24.9.0",
        "karma-source-map-support": "1.4.0",
        "less": "3.10.3",
        "less-loader": "5.0.0",
        "license-webpack-plugin": "2.1.3",
        "loader-utils": "1.2.3",
        "magic-string": "0.25.4",
        "mini-css-extract-plugin": "0.8.0",
        "minimatch": "3.0.4",
        "open": "7.0.0",
        "parse5": "4.0.0",
        "postcss": "7.0.21",
        "postcss-import": "12.0.1",
        "postcss-loader": "3.0.0",
        "raw-loader": "3.1.0",
        "regenerator-runtime": "0.13.3",
        "rimraf": "3.0.0",
        "rollup": "1.25.2",
        "rxjs": "6.5.3",
        "sass": "1.23.3",
        "sass-loader": "8.0.0",
        "semver": "6.3.0",
        "source-map": "0.7.3",
        "source-map-loader": "0.2.4",
        "source-map-support": "0.5.16",
        "speed-measure-webpack-plugin": "1.3.1",
        "style-loader": "1.0.0",
        "stylus": "0.54.7",
        "stylus-loader": "3.0.2",
        "terser": "4.5.1",
        "terser-webpack-plugin": "2.3.3",
        "tree-kill": "1.2.2",
        "webpack": "4.41.2",
        "webpack-dev-middleware": "3.7.2",
        "webpack-dev-server": "3.9.0",
        "webpack-merge": "4.2.2",
        "webpack-sources": "1.4.3",
        "webpack-subresource-integrity": "1.3.4",
        "worker-plugin": "3.2.0"
      },
      "dependencies": {
        "@angular-devkit/architect": {
          "version": "0.900.7",
          "resolved": "https://registry.npmjs.org/@angular-devkit/architect/-/architect-0.900.7.tgz",
          "integrity": "sha512-hfiTVYc72kzbXrzK4tea6jnTDnSKpE1D+vEptBXN2tdXEVNEAQI5Qm5L1zVDtt16UdqoUTUypIgUc9jcNH1mUQ==",
          "dev": true,
          "requires": {
            "@angular-devkit/core": "9.0.7",
            "rxjs": "6.5.3"
          }
        },
        "@angular-devkit/core": {
          "version": "9.0.7",
          "resolved": "https://registry.npmjs.org/@angular-devkit/core/-/core-9.0.7.tgz",
          "integrity": "sha512-tMrz36sM1xrwvFf9Qm59GwALscVlMP7rQBjtd0fIR/QbsiOAIX4AQbV+vN6Vtwnzo5NIRZY1IXJUhesWms+h5w==",
          "dev": true,
          "requires": {
            "ajv": "6.10.2",
            "fast-json-stable-stringify": "2.0.0",
            "magic-string": "0.25.4",
            "rxjs": "6.5.3",
            "source-map": "0.7.3"
          }
        },
        "rxjs": {
          "version": "6.5.3",
          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.5.3.tgz",
          "integrity": "sha512-wuYsAYYFdWTAnAaPoKGNhfpWwKZbJW+HgAJ+mImp+Epl7BG8oNWBCTyRM8gba9k4lk8BgWdoYm21Mo/RYhhbgA==",
          "dev": true,
          "requires": {
            "tslib": "^1.9.0"
          }
        }
      }
    },
    "@angular-devkit/build-optimizer": {
      "version": "0.900.7",
      "resolved": "https://registry.npmjs.org/@angular-devkit/build-optimizer/-/build-optimizer-0.900.7.tgz",
      "integrity": "sha512-gxin2oPNMN+PYo82At2JP1Q+uxnvwyDFWA1Wl+Ufuc5zHGhjKqxdQjkdMF7OT0ihtmkllN+t/NTB7rcx/Sx9Wg==",
      "dev": true,
      "requires": {
        "loader-utils": "1.2.3",
        "source-map": "0.7.3",
        "tslib": "1.10.0",
        "typescript": "3.6.4",
        "webpack-sources": "1.4.3"
      },
      "dependencies": {
        "tslib": {
          "version": "1.10.0",
          "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.10.0.tgz",
          "integrity": "sha512-qOebF53frne81cf0S9B41ByenJ3/IuH8yJKngAX35CmiZySA0khhkovshKK+jGCaMnVomla7gVlIcc3EvKPbTQ==",
          "dev": true
        },
        "typescript": {
          "version": "3.6.4",
          "resolved": "https://registry.npmjs.org/typescript/-/typescript-3.6.4.tgz",
          "integrity": "sha512-unoCll1+l+YK4i4F8f22TaNVPRHcD9PA3yCuZ8g5e0qGqlVlJ/8FSateOLLSagn+Yg5+ZwuPkL8LFUc0Jcvksg==",
          "dev": true
        }
      }
    },
    "@angular-devkit/build-webpack": {
      "version": "0.900.7",
      "resolved": "https://registry.npmjs.org/@angular-devkit/build-webpack/-/build-webpack-0.900.7.tgz",
      "integrity": "sha512-Nwwqjo1ZpHFLavN+nXOmuBgGjhoMBZGelDCvHtiQlQ9N6i7k9cKnP7eU5pY7jbalBguS+gWg5wJIGnbqk1K9Rg==",
      "dev": true,
      "requires": {
        "@angular-devkit/architect": "0.900.7",
        "@angular-devkit/core": "9.0.7",
        "rxjs": "6.5.3"
      },
      "dependencies": {
        "@angular-devkit/architect": {
          "version": "0.900.7",
          "resolved": "https://registry.npmjs.org/@angular-devkit/architect/-/architect-0.900.7.tgz",
          "integrity": "sha512-hfiTVYc72kzbXrzK4tea6jnTDnSKpE1D+vEptBXN2tdXEVNEAQI5Qm5L1zVDtt16UdqoUTUypIgUc9jcNH1mUQ==",
          "dev": true,
          "requires": {
            "@angular-devkit/core": "9.0.7",
            "rxjs": "6.5.3"
          }
        },
        "@angular-devkit/core": {
          "version": "9.0.7",
          "resolved": "https://registry.npmjs.org/@angular-devkit/core/-/core-9.0.7.tgz",
          "integrity": "sha512-tMrz36sM1xrwvFf9Qm59GwALscVlMP7rQBjtd0fIR/QbsiOAIX4AQbV+vN6Vtwnzo5NIRZY1IXJUhesWms+h5w==",
          "dev": true,
          "requires": {
            "ajv": "6.10.2",
            "fast-json-stable-stringify": "2.0.0",
            "magic-string": "0.25.4",
            "rxjs": "6.5.3",
            "source-map": "0.7.3"
          }
        },
        "rxjs": {
          "version": "6.5.3",
          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.5.3.tgz",
          "integrity": "sha512-wuYsAYYFdWTAnAaPoKGNhfpWwKZbJW+HgAJ+mImp+Epl7BG8oNWBCTyRM8gba9k4lk8BgWdoYm21Mo/RYhhbgA==",
          "dev": true,
          "requires": {
            "tslib": "^1.9.0"
          }
        }
      }
    },
    "@angular-devkit/core": {
      "version": "9.0.6",
      "resolved": "https://registry.npmjs.org/@angular-devkit/core/-/core-9.0.6.tgz",
      "integrity": "sha512-hCZJbnqLEm1F5Bx+ILcdd3LPgQTn4WFWpfUqMEGGj7UirRInWcz+6UpYotKGTJw85/mV01LrIbtWIkAUXbkkhg==",
      "dev": true,
      "requires": {
        "ajv": "6.10.2",
        "fast-json-stable-stringify": "2.0.0",
        "magic-string": "0.25.4",
        "rxjs": "6.5.3",
        "source-map": "0.7.3"
      },
      "dependencies": {
        "rxjs": {
          "version": "6.5.3",
          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.5.3.tgz",
          "integrity": "sha512-wuYsAYYFdWTAnAaPoKGNhfpWwKZbJW+HgAJ+mImp+Epl7BG8oNWBCTyRM8gba9k4lk8BgWdoYm21Mo/RYhhbgA==",
          "dev": true,
          "requires": {
            "tslib": "^1.9.0"
          }
        }
      }
    },
    "@angular-devkit/schematics": {
      "version": "9.0.6",
      "resolved": "https://registry.npmjs.org/@angular-devkit/schematics/-/schematics-9.0.6.tgz",
      "integrity": "sha512-X7qZDJVrFcPUn+jNUeOH7Bx1D7YTpTFr0d3DBIsQzseReSGu7ugWziQPS4gc5Xm5K0nb8vx6DYtyW0FaIvX0ZA==",
      "dev": true,
      "requires": {
        "@angular-devkit/core": "9.0.6",
        "ora": "4.0.2",
        "rxjs": "6.5.3"
      },
      "dependencies": {
        "rxjs": {
          "version": "6.5.3",
          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.5.3.tgz",
          "integrity": "sha512-wuYsAYYFdWTAnAaPoKGNhfpWwKZbJW+HgAJ+mImp+Epl7BG8oNWBCTyRM8gba9k4lk8BgWdoYm21Mo/RYhhbgA==",
          "dev": true,
          "requires": {
            "tslib": "^1.9.0"
          }
        }
      }
    },
    "@angular/animations": {
      "version": "9.0.6",
      "resolved": "https://registry.npmjs.org/@angular/animations/-/animations-9.0.6.tgz",
      "integrity": "sha512-LNtzUrrjqLTlZyhuAEV0sdEV0yi52Ih/p+ozCr/ivhTSSemcPbniTBbJlFZO4NJ2BuS2iEXkXwZs3mm8Fvx5Sg=="
    },
    "@angular/cdk": {
      "version": "9.1.3",
      "resolved": "https://registry.npmjs.org/@angular/cdk/-/cdk-9.1.3.tgz",
      "integrity": "sha512-K6XJzfqP+PE0ahyBUYrnoW+3ocwDpPN3dE9a+XRtZ0vM4P/FElweWj5zjNwWktb+uF9yal6oMPWXJNOAfonpPw==",
      "requires": {
        "parse5": "^5.0.0"
      },
      "dependencies": {
        "parse5": {
          "version": "5.1.1",
          "resolved": "https://registry.npmjs.org/parse5/-/parse5-5.1.1.tgz",
          "integrity": "sha512-ugq4DFI0Ptb+WWjAdOK16+u/nHfiIrcE+sh8kZMaM0WllQKLI9rOUq6c2b7cwPkXdzfQESqvoqK6ug7U/Yyzug==",
          "optional": true
        }
      }
    },
    "@angular/cli": {
      "version": "9.0.6",
      "resolved": "https://registry.npmjs.org/@angular/cli/-/cli-9.0.6.tgz",
      "integrity": "sha512-uDXhkPcHhE4G4FlY7+LJWhXErHnkn63V8lqkKD7juivs+Epmx8oXCOVObEQTbbtw7sF6s0dM8uTzHKgoefTlaA==",
      "dev": true,
      "requires": {
        "@angular-devkit/architect": "0.900.6",
        "@angular-devkit/core": "9.0.6",
        "@angular-devkit/schematics": "9.0.6",
        "@schematics/angular": "9.0.6",
        "@schematics/update": "0.900.6",
        "@yarnpkg/lockfile": "1.1.0",
        "ansi-colors": "4.1.1",
        "debug": "^4.1.1",
        "ini": "1.3.5",
        "inquirer": "7.0.0",
        "npm-package-arg": "6.1.1",
        "npm-pick-manifest": "3.0.2",
        "open": "7.0.0",
        "pacote": "9.5.8",
        "read-package-tree": "5.3.1",
        "rimraf": "3.0.0",
        "semver": "6.3.0",
        "symbol-observable": "1.2.0",
        "universal-analytics": "^0.4.20",
        "uuid": "^3.3.2"
      },
      "dependencies": {
        "ansi-colors": {
          "version": "4.1.1",
          "resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-4.1.1.tgz",
          "integrity": "sha512-JoX0apGbHaUJBNl6yF+p6JAFYZ666/hhCGKN5t9QFjbJQKUU/g8MNbFDbvfrgKXvI1QpZplPOnwIo99lX/AAmA==",
          "dev": true
        },
        "uuid": {
          "version": "3.4.0",
          "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
          "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
          "dev": true
        }
      }
    },
    "@angular/common": {
      "version": "9.0.6",
      "resolved": "https://registry.npmjs.org/@angular/common/-/common-9.0.6.tgz",
      "integrity": "sha512-z+c+zmoZTOQ2fT2sFQpHhpUbIYtjerxYmdOVpukprZCuv9WT2SGJfu4QVGSkeqejYnMp6VtXMdQ1CeAQojj0sw=="
    },
    "@angular/compiler": {
      "version": "9.0.6",
      "resolved": "https://registry.npmjs.org/@angular/compiler/-/compiler-9.0.6.tgz",
      "integrity": "sha512-jGTGNs8l3zwTnVEQH2v3HwWVvpz0bQY7B6rPkfHNP2bVwrhz7L6fYyJY1HtWM0S95b09NuSwianhabnEzQeTfQ=="
    },
    "@angular/compiler-cli": {
      "version": "9.0.6",
      "resolved": "https://registry.npmjs.org/@angular/compiler-cli/-/compiler-cli-9.0.6.tgz",
      "integrity": "sha512-chzlImvinNigQ9JzehC7BRxct62OGkkru6jIMg3J2gr1r+sQlOn2ybvADloYkKnEP5hu2Izr2aSmEfMm4xobvg==",
      "dev": true,
      "requires": {
        "canonical-path": "1.0.0",
        "chokidar": "^3.0.0",
        "convert-source-map": "^1.5.1",
        "dependency-graph": "^0.7.2",
        "fs-extra": "4.0.2",
        "magic-string": "^0.25.0",
        "minimist": "^1.2.0",
        "reflect-metadata": "^0.1.2",
        "semver": "^6.3.0",
        "source-map": "^0.6.1",
        "sourcemap-codec": "^1.4.8",
        "yargs": "13.1.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "emoji-regex": {
          "version": "7.0.3",
          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
          "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA==",
          "dev": true
        },
        "get-caller-file": {
          "version": "2.0.5",
          "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
          "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
          "dev": true
        },
        "require-main-filename": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz",
          "integrity": "sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "string-width": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",
          "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",
          "dev": true,
          "requires": {
            "emoji-regex": "^7.0.1",
            "is-fullwidth-code-point": "^2.0.0",
            "strip-ansi": "^5.1.0"
          }
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          }
        },
        "yargs": {
          "version": "13.1.0",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-13.1.0.tgz",
          "integrity": "sha512-1UhJbXfzHiPqkfXNHYhiz79qM/kZqjTE8yGlEjZa85Q+3+OwcV6NRkV7XOV1W2Eom2bzILeUn55pQYffjVOLAg==",
          "dev": true,
          "requires": {
            "cliui": "^4.0.0",
            "find-up": "^3.0.0",
            "get-caller-file": "^2.0.1",
            "os-locale": "^3.1.0",
            "require-directory": "^2.1.1",
            "require-main-filename": "^2.0.0",
            "set-blocking": "^2.0.0",
            "string-width": "^3.0.0",
            "which-module": "^2.0.0",
            "y18n": "^4.0.0",
            "yargs-parser": "^13.0.0"
          }
        },
        "yargs-parser": {
          "version": "13.1.2",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-13.1.2.tgz",
          "integrity": "sha512-3lbsNRf/j+A4QuSZfDRA7HRSfWrzO0YjqTJd5kjAq37Zep1CEgaYmrH9Q3GwPiB9cHyd1Y1UwggGhJGoxipbzg==",
          "dev": true,
          "requires": {
            "camelcase": "^5.0.0",
            "decamelize": "^1.2.0"
          }
        }
      }
    },
    "@angular/core": {
      "version": "9.0.6",
      "resolved": "https://registry.npmjs.org/@angular/core/-/core-9.0.6.tgz",
      "integrity": "sha512-egpVGqqI+L1QQFn9ziHIElXb0bCzY1l8vzyQGfm2KnxHpmx2TJp2uaaHh5LRcqYR7TLeGMpqmzhRxir6Up7AAQ=="
    },
    "@angular/fire": {
      "version": "5.4.2",
      "resolved": "https://registry.npmjs.org/@angular/fire/-/fire-5.4.2.tgz",
      "integrity": "sha512-QzB5d1wtqr9jxfsVNv2+569MlfK4/QrrpNy0IngOHdxS4FBbXqMOcx37iv1m2mzJv9zlGUddUX44IZP5Xfb3cw=="
    },
    "@angular/flex-layout": {
      "version": "9.0.0-beta.29",
      "resolved": "https://registry.npmjs.org/@angular/flex-layout/-/flex-layout-9.0.0-beta.29.tgz",
      "integrity": "sha512-93sxR+kYfYMOdnlWL0Q77FZ428gg8XnBu0YZm6GsCdkw/vLggIT/G1ZAqHlCPIODt6pxmCJ5KXh4ShvniIYDsA=="
    },
    "@angular/forms": {
      "version": "9.0.6",
      "resolved": "https://registry.npmjs.org/@angular/forms/-/forms-9.0.6.tgz",
      "integrity": "sha512-mxUEqQny3scxQM/21QLKgtq5EcOm1Tn5cU3rStY1L8J6Mg+Rd2Rz4SY0WXQpaRKPj+WNd+PDgdGiRs3cAjfLFQ=="
    },
    "@angular/language-service": {
      "version": "9.0.6",
      "resolved": "https://registry.npmjs.org/@angular/language-service/-/language-service-9.0.6.tgz",
      "integrity": "sha512-lyEYYsBXFhXKu3aT6XkKBmmf4c59lb/C6C15q4Dl8BW/wIuA/mNLosDKLnd/jCS0VpcY4v0HJRKg9SCopa8BhQ==",
      "dev": true
    },
    "@angular/material": {
      "version": "9.1.3",
      "resolved": "https://registry.npmjs.org/@angular/material/-/material-9.1.3.tgz",
      "integrity": "sha512-tRdd5+z9XwsbN+4WCuH3goyEjqw1Q6vKeURCdas8bh5AVOrCt8pcFlj3yA3P/u4fdhfTeFc67PJRz8Zm0n3moQ=="
    },
    "@angular/platform-browser": {
      "version": "9.0.6",
      "resolved": "https://registry.npmjs.org/@angular/platform-browser/-/platform-browser-9.0.6.tgz",
      "integrity": "sha512-CA7dW+j1mVh3OUo3C2vIn05NxNgrDPK4vpfRIwBIn1gErpnIXCa2vgnRzn3H9zKizKt0iuwSIukEnWG280Q0xg=="
    },
    "@angular/platform-browser-dynamic": {
      "version": "9.0.6",
      "resolved": "https://registry.npmjs.org/@angular/platform-browser-dynamic/-/platform-browser-dynamic-9.0.6.tgz",
      "integrity": "sha512-Z0/qHciqbR+c2fwGxrkr77tQkEKhZpAPljGva/VNoS3Ms1OikqZB9Ev7xmZOM9656khPBU38m3aLsTXAAnQ4YA=="
    },
    "@angular/router": {
      "version": "9.0.6",
      "resolved": "https://registry.npmjs.org/@angular/router/-/router-9.0.6.tgz",
      "integrity": "sha512-Ki1uk3jWPsoFh27SnyXatPSFK3ghF25pjiwWw9/inPvlS/HshSWgS2FbYf49LD5xVFF3Ni2Z5GRKxSEqxL8vQw=="
    },
    "@babel/code-frame": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.8.3.tgz",
      "integrity": "sha512-a9gxpmdXtZEInkCSHUJDLHZVBgb1QS0jhss4cPP93EW7s+uC5bikET2twEF3KV+7rDblJcmNvTR7VJejqd2C2g==",
      "dev": true,
      "requires": {
        "@babel/highlight": "^7.8.3"
      }
    },
    "@babel/core": {
      "version": "7.7.7",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.7.7.tgz",
      "integrity": "sha512-jlSjuj/7z138NLZALxVgrx13AOtqip42ATZP7+kYl53GvDV6+4dCek1mVUo8z8c8Xnw/mx2q3d9HWh3griuesQ==",
      "dev": true,
      "requires": {
        "@babel/code-frame": "^7.5.5",
        "@babel/generator": "^7.7.7",
        "@babel/helpers": "^7.7.4",
        "@babel/parser": "^7.7.7",
        "@babel/template": "^7.7.4",
        "@babel/traverse": "^7.7.4",
        "@babel/types": "^7.7.4",
        "convert-source-map": "^1.7.0",
        "debug": "^4.1.0",
        "json5": "^2.1.0",
        "lodash": "^4.17.13",
        "resolve": "^1.3.2",
        "semver": "^5.4.1",
        "source-map": "^0.5.0"
      },
      "dependencies": {
        "json5": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/json5/-/json5-2.1.2.tgz",
          "integrity": "sha512-MoUOQ4WdiN3yxhm7NEVJSJrieAo5hNSLQ5sj05OTRHPL9HOBy8u4Bu88jsC1jvqAdN+E1bJmsUcZH+1HQxliqQ==",
          "dev": true,
          "requires": {
            "minimist": "^1.2.5"
          }
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        },
        "source-map": {
          "version": "0.5.7",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
          "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",
          "dev": true
        }
      }
    },
    "@babel/generator": {
      "version": "7.7.7",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.7.7.tgz",
      "integrity": "sha512-/AOIBpHh/JU1l0ZFS4kiRCBnLi6OTHzh0RPk3h9isBxkkqELtQNFi1Vr/tiG9p1yfoUdKVwISuXWQR+hwwM4VQ==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.7.4",
        "jsesc": "^2.5.1",
        "lodash": "^4.17.13",
        "source-map": "^0.5.0"
      },
      "dependencies": {
        "source-map": {
          "version": "0.5.7",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
          "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",
          "dev": true
        }
      }
    },
    "@babel/helper-annotate-as-pure": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.8.3.tgz",
      "integrity": "sha512-6o+mJrZBxOoEX77Ezv9zwW7WV8DdluouRKNY/IR5u/YTMuKHgugHOzYWlYvYLpLA9nPsQCAAASpCIbjI9Mv+Uw==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-builder-binary-assignment-operator-visitor": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-builder-binary-assignment-operator-visitor/-/helper-builder-binary-assignment-operator-visitor-7.8.3.tgz",
      "integrity": "sha512-5eFOm2SyFPK4Rh3XMMRDjN7lBH0orh3ss0g3rTYZnBQ+r6YPj7lgDyCvPphynHvUrobJmeMignBr6Acw9mAPlw==",
      "dev": true,
      "requires": {
        "@babel/helper-explode-assignable-expression": "^7.8.3",
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-create-regexp-features-plugin": {
      "version": "7.8.8",
      "resolved": "https://registry.npmjs.org/@babel/helper-create-regexp-features-plugin/-/helper-create-regexp-features-plugin-7.8.8.tgz",
      "integrity": "sha512-LYVPdwkrQEiX9+1R29Ld/wTrmQu1SSKYnuOk3g0CkcZMA1p0gsNxJFj/3gBdaJ7Cg0Fnek5z0DsMULePP7Lrqg==",
      "dev": true,
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.8.3",
        "@babel/helper-regex": "^7.8.3",
        "regexpu-core": "^4.7.0"
      }
    },
    "@babel/helper-define-map": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-define-map/-/helper-define-map-7.8.3.tgz",
      "integrity": "sha512-PoeBYtxoZGtct3md6xZOCWPcKuMuk3IHhgxsRRNtnNShebf4C8YonTSblsK4tvDbm+eJAw2HAPOfCr+Q/YRG/g==",
      "dev": true,
      "requires": {
        "@babel/helper-function-name": "^7.8.3",
        "@babel/types": "^7.8.3",
        "lodash": "^4.17.13"
      }
    },
    "@babel/helper-explode-assignable-expression": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-explode-assignable-expression/-/helper-explode-assignable-expression-7.8.3.tgz",
      "integrity": "sha512-N+8eW86/Kj147bO9G2uclsg5pwfs/fqqY5rwgIL7eTBklgXjcOJ3btzS5iM6AitJcftnY7pm2lGsrJVYLGjzIw==",
      "dev": true,
      "requires": {
        "@babel/traverse": "^7.8.3",
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-function-name": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.8.3.tgz",
      "integrity": "sha512-BCxgX1BC2hD/oBlIFUgOCQDOPV8nSINxCwM3o93xP4P9Fq6aV5sgv2cOOITDMtCfQ+3PvHp3l689XZvAM9QyOA==",
      "dev": true,
      "requires": {
        "@babel/helper-get-function-arity": "^7.8.3",
        "@babel/template": "^7.8.3",
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-get-function-arity": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-get-function-arity/-/helper-get-function-arity-7.8.3.tgz",
      "integrity": "sha512-FVDR+Gd9iLjUMY1fzE2SR0IuaJToR4RkCDARVfsBBPSP53GEqSFjD8gNyxg246VUyc/ALRxFaAK8rVG7UT7xRA==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-hoist-variables": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.8.3.tgz",
      "integrity": "sha512-ky1JLOjcDUtSc+xkt0xhYff7Z6ILTAHKmZLHPxAhOP0Nd77O+3nCsd6uSVYur6nJnCI029CrNbYlc0LoPfAPQg==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-member-expression-to-functions": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.8.3.tgz",
      "integrity": "sha512-fO4Egq88utkQFjbPrSHGmGLFqmrshs11d46WI+WZDESt7Wu7wN2G2Iu+NMMZJFDOVRHAMIkB5SNh30NtwCA7RA==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-module-imports": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.8.3.tgz",
      "integrity": "sha512-R0Bx3jippsbAEtzkpZ/6FIiuzOURPcMjHp+Z6xPe6DtApDJx+w7UYyOLanZqO8+wKR9G10s/FmHXvxaMd9s6Kg==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-module-transforms": {
      "version": "7.9.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.9.0.tgz",
      "integrity": "sha512-0FvKyu0gpPfIQ8EkxlrAydOWROdHpBmiCiRwLkUiBGhCUPRRbVD2/tm3sFr/c/GWFrQ/ffutGUAnx7V0FzT2wA==",
      "dev": true,
      "requires": {
        "@babel/helper-module-imports": "^7.8.3",
        "@babel/helper-replace-supers": "^7.8.6",
        "@babel/helper-simple-access": "^7.8.3",
        "@babel/helper-split-export-declaration": "^7.8.3",
        "@babel/template": "^7.8.6",
        "@babel/types": "^7.9.0",
        "lodash": "^4.17.13"
      },
      "dependencies": {
        "@babel/types": {
          "version": "7.9.0",
          "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.9.0.tgz",
          "integrity": "sha512-BS9JKfXkzzJl8RluW4JGknzpiUV7ZrvTayM6yfqLTVBEnFtyowVIOu6rqxRd5cVO6yGoWf4T8u8dgK9oB+GCng==",
          "dev": true,
          "requires": {
            "@babel/helper-validator-identifier": "^7.9.0",
            "lodash": "^4.17.13",
            "to-fast-properties": "^2.0.0"
          }
        }
      }
    },
    "@babel/helper-optimise-call-expression": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.8.3.tgz",
      "integrity": "sha512-Kag20n86cbO2AvHca6EJsvqAd82gc6VMGule4HwebwMlwkpXuVqrNRj6CkCV2sKxgi9MyAUnZVnZ6lJ1/vKhHQ==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-plugin-utils": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.8.3.tgz",
      "integrity": "sha512-j+fq49Xds2smCUNYmEHF9kGNkhbet6yVIBp4e6oeQpH1RUs/Ir06xUKzDjDkGcaaokPiTNs2JBWHjaE4csUkZQ==",
      "dev": true
    },
    "@babel/helper-regex": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-regex/-/helper-regex-7.8.3.tgz",
      "integrity": "sha512-BWt0QtYv/cg/NecOAZMdcn/waj/5P26DR4mVLXfFtDokSR6fyuG0Pj+e2FqtSME+MqED1khnSMulkmGl8qWiUQ==",
      "dev": true,
      "requires": {
        "lodash": "^4.17.13"
      }
    },
    "@babel/helper-remap-async-to-generator": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.8.3.tgz",
      "integrity": "sha512-kgwDmw4fCg7AVgS4DukQR/roGp+jP+XluJE5hsRZwxCYGg+Rv9wSGErDWhlI90FODdYfd4xG4AQRiMDjjN0GzA==",
      "dev": true,
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.8.3",
        "@babel/helper-wrap-function": "^7.8.3",
        "@babel/template": "^7.8.3",
        "@babel/traverse": "^7.8.3",
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-replace-supers": {
      "version": "7.8.6",
      "resolved": "https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.8.6.tgz",
      "integrity": "sha512-PeMArdA4Sv/Wf4zXwBKPqVj7n9UF/xg6slNRtZW84FM7JpE1CbG8B612FyM4cxrf4fMAMGO0kR7voy1ForHHFA==",
      "dev": true,
      "requires": {
        "@babel/helper-member-expression-to-functions": "^7.8.3",
        "@babel/helper-optimise-call-expression": "^7.8.3",
        "@babel/traverse": "^7.8.6",
        "@babel/types": "^7.8.6"
      }
    },
    "@babel/helper-simple-access": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.8.3.tgz",
      "integrity": "sha512-VNGUDjx5cCWg4vvCTR8qQ7YJYZ+HBjxOgXEl7ounz+4Sn7+LMD3CFrCTEU6/qXKbA2nKg21CwhhBzO0RpRbdCw==",
      "dev": true,
      "requires": {
        "@babel/template": "^7.8.3",
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-split-export-declaration": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.8.3.tgz",
      "integrity": "sha512-3x3yOeyBhW851hroze7ElzdkeRXQYQbFIb7gLK1WQYsw2GWDay5gAJNw1sWJ0VFP6z5J1whqeXH/WCdCjZv6dA==",
      "dev": true,
      "requires": {
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helper-validator-identifier": {
      "version": "7.9.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.9.0.tgz",
      "integrity": "sha512-6G8bQKjOh+of4PV/ThDm/rRqlU7+IGoJuofpagU5GlEl29Vv0RGqqt86ZGRV8ZuSOY3o+8yXl5y782SMcG7SHw==",
      "dev": true
    },
    "@babel/helper-wrap-function": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-wrap-function/-/helper-wrap-function-7.8.3.tgz",
      "integrity": "sha512-LACJrbUET9cQDzb6kG7EeD7+7doC3JNvUgTEQOx2qaO1fKlzE/Bf05qs9w1oXQMmXlPO65lC3Tq9S6gZpTErEQ==",
      "dev": true,
      "requires": {
        "@babel/helper-function-name": "^7.8.3",
        "@babel/template": "^7.8.3",
        "@babel/traverse": "^7.8.3",
        "@babel/types": "^7.8.3"
      }
    },
    "@babel/helpers": {
      "version": "7.9.2",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.9.2.tgz",
      "integrity": "sha512-JwLvzlXVPjO8eU9c/wF9/zOIN7X6h8DYf7mG4CiFRZRvZNKEF5dQ3H3V+ASkHoIB3mWhatgl5ONhyqHRI6MppA==",
      "dev": true,
      "requires": {
        "@babel/template": "^7.8.3",
        "@babel/traverse": "^7.9.0",
        "@babel/types": "^7.9.0"
      },
      "dependencies": {
        "@babel/generator": {
          "version": "7.9.4",
          "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.9.4.tgz",
          "integrity": "sha512-rjP8ahaDy/ouhrvCoU1E5mqaitWrxwuNGU+dy1EpaoK48jZay4MdkskKGIMHLZNewg8sAsqpGSREJwP0zH3YQA==",
          "dev": true,
          "requires": {
            "@babel/types": "^7.9.0",
            "jsesc": "^2.5.1",
            "lodash": "^4.17.13",
            "source-map": "^0.5.0"
          }
        },
        "@babel/parser": {
          "version": "7.9.4",
          "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.9.4.tgz",
          "integrity": "sha512-bC49otXX6N0/VYhgOMh4gnP26E9xnDZK3TmbNpxYzzz9BQLBosQwfyOe9/cXUU3txYhTzLCbcqd5c8y/OmCjHA==",
          "dev": true
        },
        "@babel/traverse": {
          "version": "7.9.0",
          "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.9.0.tgz",
          "integrity": "sha512-jAZQj0+kn4WTHO5dUZkZKhbFrqZE7K5LAQ5JysMnmvGij+wOdr+8lWqPeW0BcF4wFwrEXXtdGO7wcV6YPJcf3w==",
          "dev": true,
          "requires": {
            "@babel/code-frame": "^7.8.3",
            "@babel/generator": "^7.9.0",
            "@babel/helper-function-name": "^7.8.3",
            "@babel/helper-split-export-declaration": "^7.8.3",
            "@babel/parser": "^7.9.0",
            "@babel/types": "^7.9.0",
            "debug": "^4.1.0",
            "globals": "^11.1.0",
            "lodash": "^4.17.13"
          }
        },
        "@babel/types": {
          "version": "7.9.0",
          "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.9.0.tgz",
          "integrity": "sha512-BS9JKfXkzzJl8RluW4JGknzpiUV7ZrvTayM6yfqLTVBEnFtyowVIOu6rqxRd5cVO6yGoWf4T8u8dgK9oB+GCng==",
          "dev": true,
          "requires": {
            "@babel/helper-validator-identifier": "^7.9.0",
            "lodash": "^4.17.13",
            "to-fast-properties": "^2.0.0"
          }
        },
        "source-map": {
          "version": "0.5.7",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
          "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",
          "dev": true
        }
      }
    },
    "@babel/highlight": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.8.3.tgz",
      "integrity": "sha512-PX4y5xQUvy0fnEVHrYOarRPXVWafSjTW9T0Hab8gVIawpl2Sj0ORyrygANq+KjcNlSSTw0YCLSNA8OyZ1I4yEg==",
      "dev": true,
      "requires": {
        "chalk": "^2.0.0",
        "esutils": "^2.0.2",
        "js-tokens": "^4.0.0"
      }
    },
    "@babel/parser": {
      "version": "7.8.8",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.8.8.tgz",
      "integrity": "sha512-mO5GWzBPsPf6865iIbzNE0AvkKF3NE+2S3eRUpE+FE07BOAkXh6G+GW/Pj01hhXjve1WScbaIO4UlY1JKeqCcA==",
      "dev": true
    },
    "@babel/plugin-proposal-async-generator-functions": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-async-generator-functions/-/plugin-proposal-async-generator-functions-7.8.3.tgz",
      "integrity": "sha512-NZ9zLv848JsV3hs8ryEh7Uaz/0KsmPLqv0+PdkDJL1cJy0K4kOCFa8zc1E3mp+RHPQcpdfb/6GovEsW4VDrOMw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/helper-remap-async-to-generator": "^7.8.3",
        "@babel/plugin-syntax-async-generators": "^7.8.0"
      }
    },
    "@babel/plugin-proposal-dynamic-import": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-dynamic-import/-/plugin-proposal-dynamic-import-7.8.3.tgz",
      "integrity": "sha512-NyaBbyLFXFLT9FP+zk0kYlUlA8XtCUbehs67F0nnEg7KICgMc2mNkIeu9TYhKzyXMkrapZFwAhXLdnt4IYHy1w==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/plugin-syntax-dynamic-import": "^7.8.0"
      }
    },
    "@babel/plugin-proposal-json-strings": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-json-strings/-/plugin-proposal-json-strings-7.8.3.tgz",
      "integrity": "sha512-KGhQNZ3TVCQG/MjRbAUwuH+14y9q0tpxs1nWWs3pbSleRdDro9SAMMDyye8HhY1gqZ7/NqIc8SKhya0wRDgP1Q==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/plugin-syntax-json-strings": "^7.8.0"
      }
    },
    "@babel/plugin-proposal-object-rest-spread": {
      "version": "7.9.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.9.0.tgz",
      "integrity": "sha512-UgqBv6bjq4fDb8uku9f+wcm1J7YxJ5nT7WO/jBr0cl0PLKb7t1O6RNR1kZbjgx2LQtsDI9hwoQVmn0yhXeQyow==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/plugin-syntax-object-rest-spread": "^7.8.0"
      }
    },
    "@babel/plugin-proposal-optional-catch-binding": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-optional-catch-binding/-/plugin-proposal-optional-catch-binding-7.8.3.tgz",
      "integrity": "sha512-0gkX7J7E+AtAw9fcwlVQj8peP61qhdg/89D5swOkjYbkboA2CVckn3kiyum1DE0wskGb7KJJxBdyEBApDLLVdw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/plugin-syntax-optional-catch-binding": "^7.8.0"
      }
    },
    "@babel/plugin-proposal-unicode-property-regex": {
      "version": "7.8.8",
      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-unicode-property-regex/-/plugin-proposal-unicode-property-regex-7.8.8.tgz",
      "integrity": "sha512-EVhjVsMpbhLw9ZfHWSx2iy13Q8Z/eg8e8ccVWt23sWQK5l1UdkoLJPN5w69UA4uITGBnEZD2JOe4QOHycYKv8A==",
      "dev": true,
      "requires": {
        "@babel/helper-create-regexp-features-plugin": "^7.8.8",
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-syntax-async-generators": {
      "version": "7.8.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.8.4.tgz",
      "integrity": "sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-dynamic-import": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-dynamic-import/-/plugin-syntax-dynamic-import-7.8.3.tgz",
      "integrity": "sha512-5gdGbFon+PszYzqs83S3E5mpi7/y/8M9eC90MRTZfduQOYW76ig6SOSPNe41IG5LoP3FGBn2N0RjVDSQiS94kQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-json-strings": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.8.3.tgz",
      "integrity": "sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-object-rest-spread": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.8.3.tgz",
      "integrity": "sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-optional-catch-binding": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.8.3.tgz",
      "integrity": "sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.0"
      }
    },
    "@babel/plugin-syntax-top-level-await": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.8.3.tgz",
      "integrity": "sha512-kwj1j9lL/6Wd0hROD3b/OZZ7MSrZLqqn9RAZ5+cYYsflQ9HZBIKCUkr3+uL1MEJ1NePiUbf98jjiMQSv0NMR9g==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-arrow-functions": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.8.3.tgz",
      "integrity": "sha512-0MRF+KC8EqH4dbuITCWwPSzsyO3HIWWlm30v8BbbpOrS1B++isGxPnnuq/IZvOX5J2D/p7DQalQm+/2PnlKGxg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-async-to-generator": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.8.3.tgz",
      "integrity": "sha512-imt9tFLD9ogt56Dd5CI/6XgpukMwd/fLGSrix2httihVe7LOGVPhyhMh1BU5kDM7iHD08i8uUtmV2sWaBFlHVQ==",
      "dev": true,
      "requires": {
        "@babel/helper-module-imports": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/helper-remap-async-to-generator": "^7.8.3"
      }
    },
    "@babel/plugin-transform-block-scoped-functions": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.8.3.tgz",
      "integrity": "sha512-vo4F2OewqjbB1+yaJ7k2EJFHlTP3jR634Z9Cj9itpqNjuLXvhlVxgnjsHsdRgASR8xYDrx6onw4vW5H6We0Jmg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-block-scoping": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.8.3.tgz",
      "integrity": "sha512-pGnYfm7RNRgYRi7bids5bHluENHqJhrV4bCZRwc5GamaWIIs07N4rZECcmJL6ZClwjDz1GbdMZFtPs27hTB06w==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3",
        "lodash": "^4.17.13"
      }
    },
    "@babel/plugin-transform-classes": {
      "version": "7.9.2",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.9.2.tgz",
      "integrity": "sha512-TC2p3bPzsfvSsqBZo0kJnuelnoK9O3welkUpqSqBQuBF6R5MN2rysopri8kNvtlGIb2jmUO7i15IooAZJjZuMQ==",
      "dev": true,
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.8.3",
        "@babel/helper-define-map": "^7.8.3",
        "@babel/helper-function-name": "^7.8.3",
        "@babel/helper-optimise-call-expression": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/helper-replace-supers": "^7.8.6",
        "@babel/helper-split-export-declaration": "^7.8.3",
        "globals": "^11.1.0"
      }
    },
    "@babel/plugin-transform-computed-properties": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.8.3.tgz",
      "integrity": "sha512-O5hiIpSyOGdrQZRQ2ccwtTVkgUDBBiCuK//4RJ6UfePllUTCENOzKxfh6ulckXKc0DixTFLCfb2HVkNA7aDpzA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-destructuring": {
      "version": "7.8.8",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.8.8.tgz",
      "integrity": "sha512-eRJu4Vs2rmttFCdhPUM3bV0Yo/xPSdPw6ML9KHs/bjB4bLA5HXlbvYXPOD5yASodGod+krjYx21xm1QmL8dCJQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-dotall-regex": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.8.3.tgz",
      "integrity": "sha512-kLs1j9Nn4MQoBYdRXH6AeaXMbEJFaFu/v1nQkvib6QzTj8MZI5OQzqmD83/2jEM1z0DLilra5aWO5YpyC0ALIw==",
      "dev": true,
      "requires": {
        "@babel/helper-create-regexp-features-plugin": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-duplicate-keys": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.8.3.tgz",
      "integrity": "sha512-s8dHiBUbcbSgipS4SMFuWGqCvyge5V2ZeAWzR6INTVC3Ltjig/Vw1G2Gztv0vU/hRG9X8IvKvYdoksnUfgXOEQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-exponentiation-operator": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.8.3.tgz",
      "integrity": "sha512-zwIpuIymb3ACcInbksHaNcR12S++0MDLKkiqXHl3AzpgdKlFNhog+z/K0+TGW+b0w5pgTq4H6IwV/WhxbGYSjQ==",
      "dev": true,
      "requires": {
        "@babel/helper-builder-binary-assignment-operator-visitor": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-for-of": {
      "version": "7.9.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.9.0.tgz",
      "integrity": "sha512-lTAnWOpMwOXpyDx06N+ywmF3jNbafZEqZ96CGYabxHrxNX8l5ny7dt4bK/rGwAh9utyP2b2Hv7PlZh1AAS54FQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-function-name": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.8.3.tgz",
      "integrity": "sha512-rO/OnDS78Eifbjn5Py9v8y0aR+aSYhDhqAwVfsTl0ERuMZyr05L1aFSCJnbv2mmsLkit/4ReeQ9N2BgLnOcPCQ==",
      "dev": true,
      "requires": {
        "@babel/helper-function-name": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-literals": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-literals/-/plugin-transform-literals-7.8.3.tgz",
      "integrity": "sha512-3Tqf8JJ/qB7TeldGl+TT55+uQei9JfYaregDcEAyBZ7akutriFrt6C/wLYIer6OYhleVQvH/ntEhjE/xMmy10A==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-member-expression-literals": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.8.3.tgz",
      "integrity": "sha512-3Wk2EXhnw+rP+IDkK6BdtPKsUE5IeZ6QOGrPYvw52NwBStw9V1ZVzxgK6fSKSxqUvH9eQPR3tm3cOq79HlsKYA==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-modules-amd": {
      "version": "7.9.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.9.0.tgz",
      "integrity": "sha512-vZgDDF003B14O8zJy0XXLnPH4sg+9X5hFBBGN1V+B2rgrB+J2xIypSN6Rk9imB2hSTHQi5OHLrFWsZab1GMk+Q==",
      "dev": true,
      "requires": {
        "@babel/helper-module-transforms": "^7.9.0",
        "@babel/helper-plugin-utils": "^7.8.3",
        "babel-plugin-dynamic-import-node": "^2.3.0"
      }
    },
    "@babel/plugin-transform-modules-commonjs": {
      "version": "7.9.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.9.0.tgz",
      "integrity": "sha512-qzlCrLnKqio4SlgJ6FMMLBe4bySNis8DFn1VkGmOcxG9gqEyPIOzeQrA//u0HAKrWpJlpZbZMPB1n/OPa4+n8g==",
      "dev": true,
      "requires": {
        "@babel/helper-module-transforms": "^7.9.0",
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/helper-simple-access": "^7.8.3",
        "babel-plugin-dynamic-import-node": "^2.3.0"
      }
    },
    "@babel/plugin-transform-modules-systemjs": {
      "version": "7.9.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.9.0.tgz",
      "integrity": "sha512-FsiAv/nao/ud2ZWy4wFacoLOm5uxl0ExSQ7ErvP7jpoihLR6Cq90ilOFyX9UXct3rbtKsAiZ9kFt5XGfPe/5SQ==",
      "dev": true,
      "requires": {
        "@babel/helper-hoist-variables": "^7.8.3",
        "@babel/helper-module-transforms": "^7.9.0",
        "@babel/helper-plugin-utils": "^7.8.3",
        "babel-plugin-dynamic-import-node": "^2.3.0"
      }
    },
    "@babel/plugin-transform-modules-umd": {
      "version": "7.9.0",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.9.0.tgz",
      "integrity": "sha512-uTWkXkIVtg/JGRSIABdBoMsoIeoHQHPTL0Y2E7xf5Oj7sLqwVsNXOkNk0VJc7vF0IMBsPeikHxFjGe+qmwPtTQ==",
      "dev": true,
      "requires": {
        "@babel/helper-module-transforms": "^7.9.0",
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-named-capturing-groups-regex": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.8.3.tgz",
      "integrity": "sha512-f+tF/8UVPU86TrCb06JoPWIdDpTNSGGcAtaD9mLP0aYGA0OS0j7j7DHJR0GTFrUZPUU6loZhbsVZgTh0N+Qdnw==",
      "dev": true,
      "requires": {
        "@babel/helper-create-regexp-features-plugin": "^7.8.3"
      }
    },
    "@babel/plugin-transform-new-target": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.8.3.tgz",
      "integrity": "sha512-QuSGysibQpyxexRyui2vca+Cmbljo8bcRckgzYV4kRIsHpVeyeC3JDO63pY+xFZ6bWOBn7pfKZTqV4o/ix9sFw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-object-super": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.8.3.tgz",
      "integrity": "sha512-57FXk+gItG/GejofIyLIgBKTas4+pEU47IXKDBWFTxdPd7F80H8zybyAY7UoblVfBhBGs2EKM+bJUu2+iUYPDQ==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/helper-replace-supers": "^7.8.3"
      }
    },
    "@babel/plugin-transform-parameters": {
      "version": "7.9.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.9.3.tgz",
      "integrity": "sha512-fzrQFQhp7mIhOzmOtPiKffvCYQSK10NR8t6BBz2yPbeUHb9OLW8RZGtgDRBn8z2hGcwvKDL3vC7ojPTLNxmqEg==",
      "dev": true,
      "requires": {
        "@babel/helper-get-function-arity": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-property-literals": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.8.3.tgz",
      "integrity": "sha512-uGiiXAZMqEoQhRWMK17VospMZh5sXWg+dlh2soffpkAl96KAm+WZuJfa6lcELotSRmooLqg0MWdH6UUq85nmmg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-regenerator": {
      "version": "7.8.7",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.8.7.tgz",
      "integrity": "sha512-TIg+gAl4Z0a3WmD3mbYSk+J9ZUH6n/Yc57rtKRnlA/7rcCvpekHXe0CMZHP1gYp7/KLe9GHTuIba0vXmls6drA==",
      "dev": true,
      "requires": {
        "regenerator-transform": "^0.14.2"
      }
    },
    "@babel/plugin-transform-reserved-words": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.8.3.tgz",
      "integrity": "sha512-mwMxcycN3omKFDjDQUl+8zyMsBfjRFr0Zn/64I41pmjv4NJuqcYlEtezwYtw9TFd9WR1vN5kiM+O0gMZzO6L0A==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-shorthand-properties": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.8.3.tgz",
      "integrity": "sha512-I9DI6Odg0JJwxCHzbzW08ggMdCezoWcuQRz3ptdudgwaHxTjxw5HgdFJmZIkIMlRymL6YiZcped4TTCB0JcC8w==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-spread": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-spread/-/plugin-transform-spread-7.8.3.tgz",
      "integrity": "sha512-CkuTU9mbmAoFOI1tklFWYYbzX5qCIZVXPVy0jpXgGwkplCndQAa58s2jr66fTeQnA64bDox0HL4U56CFYoyC7g==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-sticky-regex": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.8.3.tgz",
      "integrity": "sha512-9Spq0vGCD5Bb4Z/ZXXSK5wbbLFMG085qd2vhL1JYu1WcQ5bXqZBAYRzU1d+p79GcHs2szYv5pVQCX13QgldaWw==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3",
        "@babel/helper-regex": "^7.8.3"
      }
    },
    "@babel/plugin-transform-template-literals": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.8.3.tgz",
      "integrity": "sha512-820QBtykIQOLFT8NZOcTRJ1UNuztIELe4p9DCgvj4NK+PwluSJ49we7s9FB1HIGNIYT7wFUJ0ar2QpCDj0escQ==",
      "dev": true,
      "requires": {
        "@babel/helper-annotate-as-pure": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-typeof-symbol": {
      "version": "7.8.4",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.8.4.tgz",
      "integrity": "sha512-2QKyfjGdvuNfHsb7qnBBlKclbD4CfshH2KvDabiijLMGXPHJXGxtDzwIF7bQP+T0ysw8fYTtxPafgfs/c1Lrqg==",
      "dev": true,
      "requires": {
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/plugin-transform-unicode-regex": {
      "version": "7.8.3",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.8.3.tgz",
      "integrity": "sha512-+ufgJjYdmWfSQ+6NS9VGUR2ns8cjJjYbrbi11mZBTaWm+Fui/ncTLFF28Ei1okavY+xkojGr1eJxNsWYeA5aZw==",
      "dev": true,
      "requires": {
        "@babel/helper-create-regexp-features-plugin": "^7.8.3",
        "@babel/helper-plugin-utils": "^7.8.3"
      }
    },
    "@babel/preset-env": {
      "version": "7.7.7",
      "resolved": "https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.7.7.tgz",
      "integrity": "sha512-pCu0hrSSDVI7kCVUOdcMNQEbOPJ52E+LrQ14sN8uL2ALfSqePZQlKrOy+tM4uhEdYlCHi4imr8Zz2cZe9oSdIg==",
      "dev": true,
      "requires": {
        "@babel/helper-module-imports": "^7.7.4",
        "@babel/helper-plugin-utils": "^7.0.0",
        "@babel/plugin-proposal-async-generator-functions": "^7.7.4",
        "@babel/plugin-proposal-dynamic-import": "^7.7.4",
        "@babel/plugin-proposal-json-strings": "^7.7.4",
        "@babel/plugin-proposal-object-rest-spread": "^7.7.7",
        "@babel/plugin-proposal-optional-catch-binding": "^7.7.4",
        "@babel/plugin-proposal-unicode-property-regex": "^7.7.7",
        "@babel/plugin-syntax-async-generators": "^7.7.4",
        "@babel/plugin-syntax-dynamic-import": "^7.7.4",
        "@babel/plugin-syntax-json-strings": "^7.7.4",
        "@babel/plugin-syntax-object-rest-spread": "^7.7.4",
        "@babel/plugin-syntax-optional-catch-binding": "^7.7.4",
        "@babel/plugin-syntax-top-level-await": "^7.7.4",
        "@babel/plugin-transform-arrow-functions": "^7.7.4",
        "@babel/plugin-transform-async-to-generator": "^7.7.4",
        "@babel/plugin-transform-block-scoped-functions": "^7.7.4",
        "@babel/plugin-transform-block-scoping": "^7.7.4",
        "@babel/plugin-transform-classes": "^7.7.4",
        "@babel/plugin-transform-computed-properties": "^7.7.4",
        "@babel/plugin-transform-destructuring": "^7.7.4",
        "@babel/plugin-transform-dotall-regex": "^7.7.7",
        "@babel/plugin-transform-duplicate-keys": "^7.7.4",
        "@babel/plugin-transform-exponentiation-operator": "^7.7.4",
        "@babel/plugin-transform-for-of": "^7.7.4",
        "@babel/plugin-transform-function-name": "^7.7.4",
        "@babel/plugin-transform-literals": "^7.7.4",
        "@babel/plugin-transform-member-expression-literals": "^7.7.4",
        "@babel/plugin-transform-modules-amd": "^7.7.5",
        "@babel/plugin-transform-modules-commonjs": "^7.7.5",
        "@babel/plugin-transform-modules-systemjs": "^7.7.4",
        "@babel/plugin-transform-modules-umd": "^7.7.4",
        "@babel/plugin-transform-named-capturing-groups-regex": "^7.7.4",
        "@babel/plugin-transform-new-target": "^7.7.4",
        "@babel/plugin-transform-object-super": "^7.7.4",
        "@babel/plugin-transform-parameters": "^7.7.7",
        "@babel/plugin-transform-property-literals": "^7.7.4",
        "@babel/plugin-transform-regenerator": "^7.7.5",
        "@babel/plugin-transform-reserved-words": "^7.7.4",
        "@babel/plugin-transform-shorthand-properties": "^7.7.4",
        "@babel/plugin-transform-spread": "^7.7.4",
        "@babel/plugin-transform-sticky-regex": "^7.7.4",
        "@babel/plugin-transform-template-literals": "^7.7.4",
        "@babel/plugin-transform-typeof-symbol": "^7.7.4",
        "@babel/plugin-transform-unicode-regex": "^7.7.4",
        "@babel/types": "^7.7.4",
        "browserslist": "^4.6.0",
        "core-js-compat": "^3.6.0",
        "invariant": "^2.2.2",
        "js-levenshtein": "^1.1.3",
        "semver": "^5.5.0"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "@babel/runtime": {
      "version": "7.9.2",
      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.9.2.tgz",
      "integrity": "sha512-NE2DtOdufG7R5vnfQUTehdTfNycfUANEtCa9PssN9O/xmTzP4E08UI797ixaei6hBEVL9BI/PsdJS5x7mWoB9Q==",
      "dev": true,
      "requires": {
        "regenerator-runtime": "^0.13.4"
      },
      "dependencies": {
        "regenerator-runtime": {
          "version": "0.13.5",
          "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.5.tgz",
          "integrity": "sha512-ZS5w8CpKFinUzOwW3c83oPeVXoNsrLsaCoLtJvAClH135j/R77RuymhiSErhm2lKcwSCIpmvIWSbDkIfAqKQlA==",
          "dev": true
        }
      }
    },
    "@babel/template": {
      "version": "7.8.6",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.8.6.tgz",
      "integrity": "sha512-zbMsPMy/v0PWFZEhQJ66bqjhH+z0JgMoBWuikXybgG3Gkd/3t5oQ1Rw2WQhnSrsOmsKXnZOx15tkC4qON/+JPg==",
      "dev": true,
      "requires": {
        "@babel/code-frame": "^7.8.3",
        "@babel/parser": "^7.8.6",
        "@babel/types": "^7.8.6"
      }
    },
    "@babel/traverse": {
      "version": "7.8.6",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.8.6.tgz",
      "integrity": "sha512-2B8l0db/DPi8iinITKuo7cbPznLCEk0kCxDoB9/N6gGNg/gxOXiR/IcymAFPiBwk5w6TtQ27w4wpElgp9btR9A==",
      "dev": true,
      "requires": {
        "@babel/code-frame": "^7.8.3",
        "@babel/generator": "^7.8.6",
        "@babel/helper-function-name": "^7.8.3",
        "@babel/helper-split-export-declaration": "^7.8.3",
        "@babel/parser": "^7.8.6",
        "@babel/types": "^7.8.6",
        "debug": "^4.1.0",
        "globals": "^11.1.0",
        "lodash": "^4.17.13"
      },
      "dependencies": {
        "@babel/generator": {
          "version": "7.8.8",
          "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.8.8.tgz",
          "integrity": "sha512-HKyUVu69cZoclptr8t8U5b6sx6zoWjh8jiUhnuj3MpZuKT2dJ8zPTuiy31luq32swhI0SpwItCIlU8XW7BZeJg==",
          "dev": true,
          "requires": {
            "@babel/types": "^7.8.7",
            "jsesc": "^2.5.1",
            "lodash": "^4.17.13",
            "source-map": "^0.5.0"
          }
        },
        "source-map": {
          "version": "0.5.7",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
          "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",
          "dev": true
        }
      }
    },
    "@babel/types": {
      "version": "7.8.7",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.8.7.tgz",
      "integrity": "sha512-k2TreEHxFA4CjGkL+GYjRyx35W0Mr7DP5+9q6WMkyKXB+904bYmG40syjMFV0oLlhhFCwWl0vA0DyzTDkwAiJw==",
      "dev": true,
      "requires": {
        "esutils": "^2.0.2",
        "lodash": "^4.17.13",
        "to-fast-properties": "^2.0.0"
      }
    },
    "@firebase/analytics": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/@firebase/analytics/-/analytics-0.3.0.tgz",
      "integrity": "sha512-EEHuK+OcWH6UxufRLVU3lAJ4rmm7aVHmcgkhE9ZQJQy5c+w7QTLvVpGqtrpqD+cYyIBJkFBKJB8NziVyqKwQHw==",
      "requires": {
        "@firebase/analytics-types": "0.3.0",
        "@firebase/component": "0.1.8",
        "@firebase/installations": "0.4.6",
        "@firebase/logger": "0.2.0",
        "@firebase/util": "0.2.43",
        "tslib": "1.11.1"
      }
    },
    "@firebase/analytics-types": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/@firebase/analytics-types/-/analytics-types-0.3.0.tgz",
      "integrity": "sha512-0AJ6xn53Qn0D/YOVHHvlWFfnzzRSdd98Lr8Oqe1PJ2HPIN+o7qf03YmOG7fLpR1uplcWd+7vGKmxUrN3jKUBwg=="
    },
    "@firebase/app": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/@firebase/app/-/app-0.6.0.tgz",
      "integrity": "sha512-utFL07aO64ZVs9g79cv1KHomtLdKkkAeKN5e8G9NlXXuO6dZXhcHLbOmKY1AfwrkAvUzPEKkFFY3dytOIt+nlg==",
      "requires": {
        "@firebase/app-types": "0.6.0",
        "@firebase/component": "0.1.8",
        "@firebase/logger": "0.2.0",
        "@firebase/util": "0.2.43",
        "dom-storage": "2.1.0",
        "tslib": "1.11.1",
        "xmlhttprequest": "1.8.0"
      }
    },
    "@firebase/app-types": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/@firebase/app-types/-/app-types-0.6.0.tgz",
      "integrity": "sha512-ld6rzjXk/SUauHiQZJkeuSJpxIZ5wdnWuF5fWBFQNPaxsaJ9kyYg9GqEvwZ1z2e6JP5cU9gwRBlfW1WkGtGDYA=="
    },
    "@firebase/auth": {
      "version": "0.14.1",
      "resolved": "https://registry.npmjs.org/@firebase/auth/-/auth-0.14.1.tgz",
      "integrity": "sha512-LE+QED10cjp28jJ7wwIY58HQBXoJioEWiQy7iQS8Fo2UxHGY5BvGjwnxX4yyszQPbcZZRLDSlBIUaYfog+rdEA==",
      "requires": {
        "@firebase/auth-types": "0.10.0"
      }
    },
    "@firebase/auth-interop-types": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/@firebase/auth-interop-types/-/auth-interop-types-0.1.4.tgz",
      "integrity": "sha512-CLKNS84KGAv5lRnHTQZFWoR11Ti7gIPFirDDXWek/fSU+TdYdnxJFR5XSD4OuGyzUYQ3Dq7aVj5teiRdyBl9hA=="
    },
    "@firebase/auth-types": {
      "version": "0.10.0",
      "resolved": "https://registry.npmjs.org/@firebase/auth-types/-/auth-types-0.10.0.tgz",
      "integrity": "sha512-VuW7c+RAk3AYPU0Hxmun3RzXn7fbJDdjQbxvvpRMnQ9zrhk8mH42cY466M0n4e/UGQ+0smlx5BqZII8aYQ5XPg=="
    },
    "@firebase/component": {
      "version": "0.1.8",
      "resolved": "https://registry.npmjs.org/@firebase/component/-/component-0.1.8.tgz",
      "integrity": "sha512-kzuCF+NVympQk3gcsHldOmDRVPVndECi6O9Wvd47HTEQYO9HsZWfOM1fHUvvHAijSzNi16p4NSM7UziuBQBL4w==",
      "requires": {
        "@firebase/util": "0.2.43",
        "tslib": "1.11.1"
      }
    },
    "@firebase/database": {
      "version": "0.5.24",
      "resolved": "https://registry.npmjs.org/@firebase/database/-/database-0.5.24.tgz",
      "integrity": "sha512-9whAQzU8cxDUKGBWCT/aHVmqfyzCP2RkGhbZi2oHpMrmvht7cuBtXtUbDD5R8WomniCOUP8rtQfmCFI7V9ehYw==",
      "requires": {
        "@firebase/auth-interop-types": "0.1.4",
        "@firebase/component": "0.1.8",
        "@firebase/database-types": "0.4.14",
        "@firebase/logger": "0.2.0",
        "@firebase/util": "0.2.43",
        "faye-websocket": "0.11.3",
        "tslib": "1.11.1"
      },
      "dependencies": {
        "faye-websocket": {
          "version": "0.11.3",
          "resolved": "https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.11.3.tgz",
          "integrity": "sha512-D2y4bovYpzziGgbHYtGCMjlJM36vAl/y+xUyn1C+FVx8szd1E+86KwVw6XvYSzOP8iMpm1X0I4xJD+QtUb36OA==",
          "requires": {
            "websocket-driver": ">=0.5.1"
          }
        }
      }
    },
    "@firebase/database-types": {
      "version": "0.4.14",
      "resolved": "https://registry.npmjs.org/@firebase/database-types/-/database-types-0.4.14.tgz",
      "integrity": "sha512-+D41HWac0HcvwMi+0dezEdSOZHpVjPKPNmpQiW2GDuS5kk27/v1jxc9v7F4ALLtpxbVcn16UZl5PqEkcS9H2Xg==",
      "requires": {
        "@firebase/app-types": "0.6.0"
      }
    },
    "@firebase/firestore": {
      "version": "1.13.0",
      "resolved": "https://registry.npmjs.org/@firebase/firestore/-/firestore-1.13.0.tgz",
      "integrity": "sha512-GctO+sxLqOnY8SkBN5Z5p1nUYRX+yWSc9Kcx9nIPbUZ0WqBM5BaSlBHZHTFtjmJxS+0j/Y8Mu7c6qm6q5rVnjA==",
      "requires": {
        "@firebase/component": "0.1.8",
        "@firebase/firestore-types": "1.10.1",
        "@firebase/logger": "0.2.0",
        "@firebase/util": "0.2.43",
        "@firebase/webchannel-wrapper": "0.2.38",
        "@grpc/proto-loader": "^0.5.0",
        "grpc": "1.24.2",
        "tslib": "1.11.1"
      }
    },
    "@firebase/firestore-types": {
      "version": "1.10.1",
      "resolved": "https://registry.npmjs.org/@firebase/firestore-types/-/firestore-types-1.10.1.tgz",
      "integrity": "sha512-vyKdm+AYUFT8XeUX62IOqaqPFCs/mAMoSEsqIz9HnSVsqCw/IocNjtjSa+3M80kRw4V8fI7JI+Xz6Wg5VJXLqA=="
    },
    "@firebase/functions": {
      "version": "0.4.38",
      "resolved": "https://registry.npmjs.org/@firebase/functions/-/functions-0.4.38.tgz",
      "integrity": "sha512-t5QkJg251FmIEEi2mh3Xrf7Q3yonSLRaUW/vhgze7A3Xy3uTIUT3BVNWuKaRmg1n0PgKQaBHCjlDoLJAdSpujg==",
      "requires": {
        "@firebase/component": "0.1.8",
        "@firebase/functions-types": "0.3.16",
        "@firebase/messaging-types": "0.4.4",
        "isomorphic-fetch": "2.2.1",
        "tslib": "1.11.1"
      }
    },
    "@firebase/functions-types": {
      "version": "0.3.16",
      "resolved": "https://registry.npmjs.org/@firebase/functions-types/-/functions-types-0.3.16.tgz",
      "integrity": "sha512-kHhBvSYiY2prY4vNQCALYs1+OruTdylvGemHG6G6Bs/rj3qw7ui3WysBsDU/rInJitHIcsZ35qrtanoJeQUIXQ=="
    },
    "@firebase/installations": {
      "version": "0.4.6",
      "resolved": "https://registry.npmjs.org/@firebase/installations/-/installations-0.4.6.tgz",
      "integrity": "sha512-ey8cE2ldRO4pYqg0lCWQ+XFLETHZWha3Hw1CnYJjLivk4FMM8u/es3Oa257wwtYXAUfr0UsPDfHFgYME9E9EhA==",
      "requires": {
        "@firebase/component": "0.1.8",
        "@firebase/installations-types": "0.3.3",
        "@firebase/util": "0.2.43",
        "idb": "3.0.2",
        "tslib": "1.11.1"
      }
    },
    "@firebase/installations-types": {
      "version": "0.3.3",
      "resolved": "https://registry.npmjs.org/@firebase/installations-types/-/installations-types-0.3.3.tgz",
      "integrity": "sha512-XvWhPPAGeZlc+CfCA8jTt2pv19Jovi/nUV73u30QbjBbk5xci9bp5I29aBZukHsR6YNBjFCLSkLPbno4m/bLUg=="
    },
    "@firebase/logger": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/@firebase/logger/-/logger-0.2.0.tgz",
      "integrity": "sha512-qOMnAh1JY9NkYUEy3iFviiFq0dCvk6qN2DsRy2Y7eAhHR6RqwA47l1kI+0MIXmSzlJ9akXjWAXxV5ijzr68Big=="
    },
    "@firebase/messaging": {
      "version": "0.6.10",
      "resolved": "https://registry.npmjs.org/@firebase/messaging/-/messaging-0.6.10.tgz",
      "integrity": "sha512-WYnKEffG6m0EMHzib8KCWVUGno1cuBC13RrOfGWOCv/whdy9QCIZgMxH/NsY3BrYst8FnjuXEU16fi5AEf4qbg==",
      "requires": {
        "@firebase/component": "0.1.8",
        "@firebase/installations": "0.4.6",
        "@firebase/messaging-types": "0.4.4",
        "@firebase/util": "0.2.43",
        "idb": "3.0.2",
        "tslib": "1.11.1"
      }
    },
    "@firebase/messaging-types": {
      "version": "0.4.4",
      "resolved": "https://registry.npmjs.org/@firebase/messaging-types/-/messaging-types-0.4.4.tgz",
      "integrity": "sha512-JGtkr+1A1Dw7+yCqQigqBfGKtq0gTCruFScBD4MVjqZHiqGIYpnQisWnpGbkzPR6aOt6iQxgwxUhHG1ulUQGeg=="
    },
    "@firebase/performance": {
      "version": "0.2.36",
      "resolved": "https://registry.npmjs.org/@firebase/performance/-/performance-0.2.36.tgz",
      "integrity": "sha512-nMx3gT+ZD86MV5n460XFA1o75YYMGcs2MXrJa462rfUQtqOrtOOvdUvVtmE6cLrHsL4Y83B+VBWKHzACIPghPw==",
      "requires": {
        "@firebase/component": "0.1.8",
        "@firebase/installations": "0.4.6",
        "@firebase/logger": "0.2.0",
        "@firebase/performance-types": "0.0.12",
        "@firebase/util": "0.2.43",
        "tslib": "1.11.1"
      }
    },
    "@firebase/performance-types": {
      "version": "0.0.12",
      "resolved": "https://registry.npmjs.org/@firebase/performance-types/-/performance-types-0.0.12.tgz",
      "integrity": "sha512-eIDF7CHetOE5sc+hCaUebEn/2Aiaju7UkgZDTl7lNQHz5fK9wJ/11HaE8WdnDr//ngS3lQAGC2RB4lAZeEWraA=="
    },
    "@firebase/polyfill": {
      "version": "0.3.33",
      "resolved": "https://registry.npmjs.org/@firebase/polyfill/-/polyfill-0.3.33.tgz",
      "integrity": "sha512-Arp9JViyD2i0K01NCCY0WZK5p16kQB/wddf44+Qboh+u3eIrFbVk0OO2IknjrkzIW392u73Ts7TkVxLPGPJF9g==",
      "requires": {
        "core-js": "3.6.4",
        "promise-polyfill": "8.1.3",
        "whatwg-fetch": "2.0.4"
      },
      "dependencies": {
        "whatwg-fetch": {
          "version": "2.0.4",
          "resolved": "https://registry.npmjs.org/whatwg-fetch/-/whatwg-fetch-2.0.4.tgz",
          "integrity": "sha512-dcQ1GWpOD/eEQ97k66aiEVpNnapVj90/+R+SXTPYGHpYBBypfKJEQjLrvMZ7YXbKm21gXd4NcuxUTjiv1YtLng=="
        }
      }
    },
    "@firebase/remote-config": {
      "version": "0.1.17",
      "resolved": "https://registry.npmjs.org/@firebase/remote-config/-/remote-config-0.1.17.tgz",
      "integrity": "sha512-jIRHXih0krVTNGYMewFVIaX8WPE1iS06fV4oMMHCCSSforGodv535uVZZ41Il29Q+22zOcyJvahoc990V0cFoA==",
      "requires": {
        "@firebase/component": "0.1.8",
        "@firebase/installations": "0.4.6",
        "@firebase/logger": "0.2.0",
        "@firebase/remote-config-types": "0.1.8",
        "@firebase/util": "0.2.43",
        "tslib": "1.11.1"
      }
    },
    "@firebase/remote-config-types": {
      "version": "0.1.8",
      "resolved": "https://registry.npmjs.org/@firebase/remote-config-types/-/remote-config-types-0.1.8.tgz",
      "integrity": "sha512-K12IBHO7OD4gCW0FEqZL9zMqVAfS4+joC4YIn3bHezZfu3RL+Bw1wCb0cAD7RfDPcQxWJjxOHpce4YhuqSxPFA=="
    },
    "@firebase/storage": {
      "version": "0.3.30",
      "resolved": "https://registry.npmjs.org/@firebase/storage/-/storage-0.3.30.tgz",
      "integrity": "sha512-wapt4+NiEqTiLKPpsy+XbdLTN99pkqjf46Z7zqeS+vh+61cJsUT8M7YBfBb0ZN+dY6gnI5QNzviiKpykhJQbVA==",
      "requires": {
        "@firebase/component": "0.1.8",
        "@firebase/storage-types": "0.3.11",
        "@firebase/util": "0.2.43",
        "tslib": "1.11.1"
      }
    },
    "@firebase/storage-types": {
      "version": "0.3.11",
      "resolved": "https://registry.npmjs.org/@firebase/storage-types/-/storage-types-0.3.11.tgz",
      "integrity": "sha512-EMOo5aeiJIa8eQ/VqjIa/DYlDcEJX1V84FOxmLfNWZIlmCSvcqx9E9mcNlOnoUB4iePqQjTMQRtKlIBvvEVhVg=="
    },
    "@firebase/util": {
      "version": "0.2.43",
      "resolved": "https://registry.npmjs.org/@firebase/util/-/util-0.2.43.tgz",
      "integrity": "sha512-4gGlvcoOJ48xO6PH59UOHLjvImdYXANF/1d0ao60fbiJDIKxJqMksXw3UF2zsUrRkyCOqIDLeiVuF18vffXP+g==",
      "requires": {
        "tslib": "1.11.1"
      }
    },
    "@firebase/webchannel-wrapper": {
      "version": "0.2.38",
      "resolved": "https://registry.npmjs.org/@firebase/webchannel-wrapper/-/webchannel-wrapper-0.2.38.tgz",
      "integrity": "sha512-mp1XmAJsuqaSWm5WQYo7R0zfZWe9EmwMCxsxkKr+ubLOumyNy4NG5aV45hEpFTosQv4myXpiCiS4GFE9mNqLZQ=="
    },
    "@grpc/proto-loader": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/@grpc/proto-loader/-/proto-loader-0.5.3.tgz",
      "integrity": "sha512-8qvUtGg77G2ZT2HqdqYoM/OY97gQd/0crSG34xNmZ4ZOsv3aQT/FQV9QfZPazTGna6MIoyUd+u6AxsoZjJ/VMQ==",
      "requires": {
        "lodash.camelcase": "^4.3.0",
        "protobufjs": "^6.8.6"
      }
    },
    "@istanbuljs/schema": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/@istanbuljs/schema/-/schema-0.1.2.tgz",
      "integrity": "sha512-tsAQNx32a8CoFhjhijUIhI4kccIAgmGhy8LZMZgGfmXcpMbPRUqn5LWmgRttILi6yeGmBJd2xsPkFMs0PzgPCw==",
      "dev": true
    },
    "@ng-select/ng-select": {
      "version": "3.7.3",
      "resolved": "https://registry.npmjs.org/@ng-select/ng-select/-/ng-select-3.7.3.tgz",
      "integrity": "sha512-Duw5t0b9Jup/tVEoDHLm+UhGv5RnwQ7pQorCAQc4LZR35oOZFjec8FrEGGtgVAGtwaQAYyd7PSMk3nEsWPg6AQ==",
      "requires": {
        "tslib": "^1.9.0"
      }
    },
    "@ngtools/webpack": {
      "version": "9.0.7",
      "resolved": "https://registry.npmjs.org/@ngtools/webpack/-/webpack-9.0.7.tgz",
      "integrity": "sha512-MvoMaErkjESefoIrbt8F2RpKDr9KavwvH4v3hwSAKooVNFdFKNsjJ7m3gCQehumEfsYFq2mrEK2sTW4/CpFlMQ==",
      "dev": true,
      "requires": {
        "@angular-devkit/core": "9.0.7",
        "enhanced-resolve": "4.1.1",
        "rxjs": "6.5.3",
        "webpack-sources": "1.4.3"
      },
      "dependencies": {
        "@angular-devkit/core": {
          "version": "9.0.7",
          "resolved": "https://registry.npmjs.org/@angular-devkit/core/-/core-9.0.7.tgz",
          "integrity": "sha512-tMrz36sM1xrwvFf9Qm59GwALscVlMP7rQBjtd0fIR/QbsiOAIX4AQbV+vN6Vtwnzo5NIRZY1IXJUhesWms+h5w==",
          "dev": true,
          "requires": {
            "ajv": "6.10.2",
            "fast-json-stable-stringify": "2.0.0",
            "magic-string": "0.25.4",
            "rxjs": "6.5.3",
            "source-map": "0.7.3"
          }
        },
        "rxjs": {
          "version": "6.5.3",
          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.5.3.tgz",
          "integrity": "sha512-wuYsAYYFdWTAnAaPoKGNhfpWwKZbJW+HgAJ+mImp+Epl7BG8oNWBCTyRM8gba9k4lk8BgWdoYm21Mo/RYhhbgA==",
          "dev": true,
          "requires": {
            "tslib": "^1.9.0"
          }
        }
      }
    },
    "@protobufjs/aspromise": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/aspromise/-/aspromise-1.1.2.tgz",
      "integrity": "sha1-m4sMxmPWaafY9vXQiToU00jzD78="
    },
    "@protobufjs/base64": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/base64/-/base64-1.1.2.tgz",
      "integrity": "sha512-AZkcAA5vnN/v4PDqKyMR5lx7hZttPDgClv83E//FMNhR2TMcLUhfRUBHCmSl0oi9zMgDDqRUJkSxO3wm85+XLg=="
    },
    "@protobufjs/codegen": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/@protobufjs/codegen/-/codegen-2.0.4.tgz",
      "integrity": "sha512-YyFaikqM5sH0ziFZCN3xDC7zeGaB/d0IUb9CATugHWbd1FRFwWwt4ld4OYMPWu5a3Xe01mGAULCdqhMlPl29Jg=="
    },
    "@protobufjs/eventemitter": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/eventemitter/-/eventemitter-1.1.0.tgz",
      "integrity": "sha1-NVy8mLr61ZePntCV85diHx0Ga3A="
    },
    "@protobufjs/fetch": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/fetch/-/fetch-1.1.0.tgz",
      "integrity": "sha1-upn7WYYUr2VwDBYZ/wbUVLDYTEU=",
      "requires": {
        "@protobufjs/aspromise": "^1.1.1",
        "@protobufjs/inquire": "^1.1.0"
      }
    },
    "@protobufjs/float": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/float/-/float-1.0.2.tgz",
      "integrity": "sha1-Xp4avctz/Ap8uLKR33jIy9l7h9E="
    },
    "@protobufjs/inquire": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/inquire/-/inquire-1.1.0.tgz",
      "integrity": "sha1-/yAOPnzyQp4tyvwRQIKOjMY48Ik="
    },
    "@protobufjs/path": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@protobufjs/path/-/path-1.1.2.tgz",
      "integrity": "sha1-bMKyDFya1q0NzP0hynZz2Nf79o0="
    },
    "@protobufjs/pool": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/pool/-/pool-1.1.0.tgz",
      "integrity": "sha1-Cf0V8tbTq/qbZbw2ZQbWrXhG/1Q="
    },
    "@protobufjs/utf8": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@protobufjs/utf8/-/utf8-1.1.0.tgz",
      "integrity": "sha1-p3c2C1s5oaLlEG+OhY8v0tBgxXA="
    },
    "@schematics/angular": {
      "version": "9.0.6",
      "resolved": "https://registry.npmjs.org/@schematics/angular/-/angular-9.0.6.tgz",
      "integrity": "sha512-oYIfSJF9ISAJWJjIiUnj8Rp1m4t9T3oqKl1FzkMWXvUmR1BfkO2S2/Moi2RQ0aHG6D9Oz4CJjrsQRmjaqBpEZw==",
      "dev": true,
      "requires": {
        "@angular-devkit/core": "9.0.6",
        "@angular-devkit/schematics": "9.0.6"
      }
    },
    "@schematics/update": {
      "version": "0.900.6",
      "resolved": "https://registry.npmjs.org/@schematics/update/-/update-0.900.6.tgz",
      "integrity": "sha512-54Xi3FIJQWFBM91vxD9ciKkTlNWaIV7wsjKSImg53h2m2/l2VPPHyIZWI4j79dWXlfJVTNeaqPNYGzJlRvaEmA==",
      "dev": true,
      "requires": {
        "@angular-devkit/core": "9.0.6",
        "@angular-devkit/schematics": "9.0.6",
        "@yarnpkg/lockfile": "1.1.0",
        "ini": "1.3.5",
        "npm-package-arg": "^7.0.0",
        "pacote": "9.5.8",
        "rxjs": "6.5.3",
        "semver": "6.3.0",
        "semver-intersect": "1.4.0"
      },
      "dependencies": {
        "npm-package-arg": {
          "version": "7.0.0",
          "resolved": "https://registry.npmjs.org/npm-package-arg/-/npm-package-arg-7.0.0.tgz",
          "integrity": "sha512-xXxr8y5U0kl8dVkz2oK7yZjPBvqM2fwaO5l3Yg13p03v8+E3qQcD0JNhHzjL1vyGgxcKkD0cco+NLR72iuPk3g==",
          "dev": true,
          "requires": {
            "hosted-git-info": "^3.0.2",
            "osenv": "^0.1.5",
            "semver": "^5.6.0",
            "validate-npm-package-name": "^3.0.0"
          },
          "dependencies": {
            "semver": {
              "version": "5.7.1",
              "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
              "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
              "dev": true
            }
          }
        },
        "rxjs": {
          "version": "6.5.3",
          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.5.3.tgz",
          "integrity": "sha512-wuYsAYYFdWTAnAaPoKGNhfpWwKZbJW+HgAJ+mImp+Epl7BG8oNWBCTyRM8gba9k4lk8BgWdoYm21Mo/RYhhbgA==",
          "dev": true,
          "requires": {
            "tslib": "^1.9.0"
          }
        }
      }
    },
    "@sindresorhus/is": {
      "version": "0.14.0",
      "resolved": "https://registry.npmjs.org/@sindresorhus/is/-/is-0.14.0.tgz",
      "integrity": "sha512-9NET910DNaIPngYnLLPeg+Ogzqsi9uM4mSboU5y6p8S5DzMTVEsJZrawi+BoDNUVBa2DhJqQYUFvMDfgU062LQ=="
    },
    "@szmarczak/http-timer": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-1.1.2.tgz",
      "integrity": "sha512-XIB2XbzHTN6ieIjfIMV9hlVcfPU26s2vafYWQcZHWXHOxiaRZYEDKEwdl129Zyg50+foYV2jCgtrqSA6qNuNSA==",
      "requires": {
        "defer-to-connect": "^1.0.1"
      }
    },
    "@types/bn.js": {
      "version": "4.11.6",
      "resolved": "https://registry.npmjs.org/@types/bn.js/-/bn.js-4.11.6.tgz",
      "integrity": "sha512-pqr857jrp2kPuO9uRjZ3PwnJTjoQy+fcdxvBTvHm6dkmEL9q+hDD/2j/0ELOBPtPnS8LjCX0gI9nbl8lVkadpg==",
      "requires": {
        "@types/node": "*"
      }
    },
    "@types/bytebuffer": {
      "version": "5.0.40",
      "resolved": "https://registry.npmjs.org/@types/bytebuffer/-/bytebuffer-5.0.40.tgz",
      "integrity": "sha512-h48dyzZrPMz25K6Q4+NCwWaxwXany2FhQg/ErOcdZS1ZpsaDnDMZg8JYLMTGz7uvXKrcKGJUZJlZObyfgdaN9g==",
      "requires": {
        "@types/long": "*",
        "@types/node": "*"
      }
    },
    "@types/crypto-js": {
      "version": "3.1.43",
      "resolved": "https://registry.npmjs.org/@types/crypto-js/-/crypto-js-3.1.43.tgz",
      "integrity": "sha512-EHe/YKctU3IYNBsDmSOPX/7jLHPRlx8WaiDKSY9JCTnJ8XJeM4c0ZJvx+9Gxmr2s2ihI92R+3U/gNL1sq5oRuQ=="
    },
    "@types/estree": {
      "version": "0.0.44",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-0.0.44.tgz",
      "integrity": "sha512-iaIVzr+w2ZJ5HkidlZ3EJM8VTZb2MJLCjw3V+505yVts0gRC4UMvjw0d1HPtGqI/HQC/KdsYtayfzl+AXY2R8g==",
      "dev": true
    },
    "@types/events": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/@types/events/-/events-3.0.0.tgz",
      "integrity": "sha512-EaObqwIvayI5a8dCzhFrjKzVwKLxjoG9T6Ppd5CEo07LRKfQ8Yokw54r5+Wq7FaBQ+yXRvQAYPrHwya1/UFt9g==",
      "dev": true
    },
    "@types/glob": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/@types/glob/-/glob-7.1.1.tgz",
      "integrity": "sha512-1Bh06cbWJUHMC97acuD6UMG29nMt0Aqz1vF3guLfG+kHHJhy3AyohZFFxYk2f7Q1SQIrNwvncxAE0N/9s70F2w==",
      "dev": true,
      "requires": {
        "@types/events": "*",
        "@types/minimatch": "*",
        "@types/node": "*"
      }
    },
    "@types/jasmine": {
      "version": "3.5.9",
      "resolved": "https://registry.npmjs.org/@types/jasmine/-/jasmine-3.5.9.tgz",
      "integrity": "sha512-KNL2Fq6GRmty2j6+ZmueT/Z/dkctLNH+5DFoGHNDtcgt7yME9NZd8x2p81Yuea1Xux/qAryDd3zVLUoKpDz1TA==",
      "dev": true
    },
    "@types/jasminewd2": {
      "version": "2.0.8",
      "resolved": "https://registry.npmjs.org/@types/jasminewd2/-/jasminewd2-2.0.8.tgz",
      "integrity": "sha512-d9p31r7Nxk0ZH0U39PTH0hiDlJ+qNVGjlt1ucOoTUptxb2v+Y5VMnsxfwN+i3hK4yQnqBi3FMmoMFcd1JHDxdg==",
      "dev": true,
      "requires": {
        "@types/jasmine": "*"
      }
    },
    "@types/long": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/@types/long/-/long-4.0.1.tgz",
      "integrity": "sha512-5tXH6Bx/kNGd3MgffdmP4dy2Z+G4eaXw0SE81Tq3BNadtnMR5/ySMzX4SLEzHJzSmPNn4HIdpQsBvXMUykr58w=="
    },
    "@types/minimatch": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/@types/minimatch/-/minimatch-3.0.3.tgz",
      "integrity": "sha512-tHq6qdbT9U1IRSGf14CL0pUlULksvY9OZ+5eEgl1N7t+OA3tGvNpxJCzuKQlsNgCVwbAs670L1vcVQi8j9HjnA==",
      "dev": true
    },
    "@types/node": {
      "version": "12.12.30",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-12.12.30.tgz",
      "integrity": "sha512-sz9MF/zk6qVr3pAnM0BSQvYIBK44tS75QC5N+VbWSE4DjCV/pJ+UzCW/F+vVnl7TkOPcuwQureKNtSSwjBTaMg=="
    },
    "@types/q": {
      "version": "1.5.2",
      "resolved": "https://registry.npmjs.org/@types/q/-/q-1.5.2.tgz",
      "integrity": "sha512-ce5d3q03Ex0sy4R14722Rmt6MT07Ua+k4FwDfdcToYJcMKNtRVQvJ6JCAPdAmAnbRb6CsX6aYb9m96NGod9uTw==",
      "dev": true
    },
    "@types/selenium-webdriver": {
      "version": "3.0.17",
      "resolved": "https://registry.npmjs.org/@types/selenium-webdriver/-/selenium-webdriver-3.0.17.tgz",
      "integrity": "sha512-tGomyEuzSC1H28y2zlW6XPCaDaXFaD6soTdb4GNdmte2qfHtrKqhy0ZFs4r/1hpazCfEZqeTSRLvSasmEx89uw==",
      "dev": true
    },
    "@types/source-list-map": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/@types/source-list-map/-/source-list-map-0.1.2.tgz",
      "integrity": "sha512-K5K+yml8LTo9bWJI/rECfIPrGgxdpeNbj+d53lwN4QjW1MCwlkhUms+gtdzigTeUyBr09+u8BwOIY3MXvHdcsA==",
      "dev": true
    },
    "@types/uuid": {
      "version": "7.0.2",
      "resolved": "https://registry.npmjs.org/@types/uuid/-/uuid-7.0.2.tgz",
      "integrity": "sha512-8Ly3zIPTnT0/8RCU6Kg/G3uTICf9sRwYOpUzSIM3503tLIKcnJPRuinHhXngJUy2MntrEf6dlpOHXJju90Qh5w=="
    },
    "@types/webpack-sources": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/@types/webpack-sources/-/webpack-sources-0.1.7.tgz",
      "integrity": "sha512-XyaHrJILjK1VHVC4aVlKsdNN5KBTwufMb43cQs+flGxtPAf/1Qwl8+Q0tp5BwEGaI8D6XT1L+9bSWXckgkjTLw==",
      "dev": true,
      "requires": {
        "@types/node": "*",
        "@types/source-list-map": "*",
        "source-map": "^0.6.1"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "@web3-js/scrypt-shim": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/@web3-js/scrypt-shim/-/scrypt-shim-0.1.0.tgz",
      "integrity": "sha512-ZtZeWCc/s0nMcdx/+rZwY1EcuRdemOK9ag21ty9UsHkFxsNb/AaoucUz0iPuyGe0Ku+PFuRmWZG7Z7462p9xPw==",
      "requires": {
        "scryptsy": "^2.1.0",
        "semver": "^6.3.0"
      }
    },
    "@web3-js/websocket": {
      "version": "1.0.30",
      "resolved": "https://registry.npmjs.org/@web3-js/websocket/-/websocket-1.0.30.tgz",
      "integrity": "sha512-fDwrD47MiDrzcJdSeTLF75aCcxVVt8B1N74rA+vh2XCAvFy4tEWJjtnUtj2QG7/zlQ6g9cQ88bZFBxwd9/FmtA==",
      "requires": {
        "debug": "^2.2.0",
        "es5-ext": "^0.10.50",
        "nan": "^2.14.0",
        "typedarray-to-buffer": "^3.1.5",
        "yaeti": "^0.0.6"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "requires": {
            "ms": "2.0.0"
          }
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
        }
      }
    },
    "@webassemblyjs/ast": {
      "version": "1.8.5",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/ast/-/ast-1.8.5.tgz",
      "integrity": "sha512-aJMfngIZ65+t71C3y2nBBg5FFG0Okt9m0XEgWZ7Ywgn1oMAT8cNwx00Uv1cQyHtidq0Xn94R4TAywO+LCQ+ZAQ==",
      "dev": true,
      "requires": {
        "@webassemblyjs/helper-module-context": "1.8.5",
        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",
        "@webassemblyjs/wast-parser": "1.8.5"
      }
    },
    "@webassemblyjs/floating-point-hex-parser": {
      "version": "1.8.5",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/floating-point-hex-parser/-/floating-point-hex-parser-1.8.5.tgz",
      "integrity": "sha512-9p+79WHru1oqBh9ewP9zW95E3XAo+90oth7S5Re3eQnECGq59ly1Ri5tsIipKGpiStHsUYmY3zMLqtk3gTcOtQ==",
      "dev": true
    },
    "@webassemblyjs/helper-api-error": {
      "version": "1.8.5",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-api-error/-/helper-api-error-1.8.5.tgz",
      "integrity": "sha512-Za/tnzsvnqdaSPOUXHyKJ2XI7PDX64kWtURyGiJJZKVEdFOsdKUCPTNEVFZq3zJ2R0G5wc2PZ5gvdTRFgm81zA==",
      "dev": true
    },
    "@webassemblyjs/helper-buffer": {
      "version": "1.8.5",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-buffer/-/helper-buffer-1.8.5.tgz",
      "integrity": "sha512-Ri2R8nOS0U6G49Q86goFIPNgjyl6+oE1abW1pS84BuhP1Qcr5JqMwRFT3Ah3ADDDYGEgGs1iyb1DGX+kAi/c/Q==",
      "dev": true
    },
    "@webassemblyjs/helper-code-frame": {
      "version": "1.8.5",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-code-frame/-/helper-code-frame-1.8.5.tgz",
      "integrity": "sha512-VQAadSubZIhNpH46IR3yWO4kZZjMxN1opDrzePLdVKAZ+DFjkGD/rf4v1jap744uPVU6yjL/smZbRIIJTOUnKQ==",
      "dev": true,
      "requires": {
        "@webassemblyjs/wast-printer": "1.8.5"
      }
    },
    "@webassemblyjs/helper-fsm": {
      "version": "1.8.5",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-fsm/-/helper-fsm-1.8.5.tgz",
      "integrity": "sha512-kRuX/saORcg8se/ft6Q2UbRpZwP4y7YrWsLXPbbmtepKr22i8Z4O3V5QE9DbZK908dh5Xya4Un57SDIKwB9eow==",
      "dev": true
    },
    "@webassemblyjs/helper-module-context": {
      "version": "1.8.5",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-module-context/-/helper-module-context-1.8.5.tgz",
      "integrity": "sha512-/O1B236mN7UNEU4t9X7Pj38i4VoU8CcMHyy3l2cV/kIF4U5KoHXDVqcDuOs1ltkac90IM4vZdHc52t1x8Yfs3g==",
      "dev": true,
      "requires": {
        "@webassemblyjs/ast": "1.8.5",
        "mamacro": "^0.0.3"
      }
    },
    "@webassemblyjs/helper-wasm-bytecode": {
      "version": "1.8.5",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-bytecode/-/helper-wasm-bytecode-1.8.5.tgz",
      "integrity": "sha512-Cu4YMYG3Ddl72CbmpjU/wbP6SACcOPVbHN1dI4VJNJVgFwaKf1ppeFJrwydOG3NDHxVGuCfPlLZNyEdIYlQ6QQ==",
      "dev": true
    },
    "@webassemblyjs/helper-wasm-section": {
      "version": "1.8.5",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-section/-/helper-wasm-section-1.8.5.tgz",
      "integrity": "sha512-VV083zwR+VTrIWWtgIUpqfvVdK4ff38loRmrdDBgBT8ADXYsEZ5mPQ4Nde90N3UYatHdYoDIFb7oHzMncI02tA==",
      "dev": true,
      "requires": {
        "@webassemblyjs/ast": "1.8.5",
        "@webassemblyjs/helper-buffer": "1.8.5",
        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",
        "@webassemblyjs/wasm-gen": "1.8.5"
      }
    },
    "@webassemblyjs/ieee754": {
      "version": "1.8.5",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/ieee754/-/ieee754-1.8.5.tgz",
      "integrity": "sha512-aaCvQYrvKbY/n6wKHb/ylAJr27GglahUO89CcGXMItrOBqRarUMxWLJgxm9PJNuKULwN5n1csT9bYoMeZOGF3g==",
      "dev": true,
      "requires": {
        "@xtuc/ieee754": "^1.2.0"
      }
    },
    "@webassemblyjs/leb128": {
      "version": "1.8.5",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/leb128/-/leb128-1.8.5.tgz",
      "integrity": "sha512-plYUuUwleLIziknvlP8VpTgO4kqNaH57Y3JnNa6DLpu/sGcP6hbVdfdX5aHAV716pQBKrfuU26BJK29qY37J7A==",
      "dev": true,
      "requires": {
        "@xtuc/long": "4.2.2"
      }
    },
    "@webassemblyjs/utf8": {
      "version": "1.8.5",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/utf8/-/utf8-1.8.5.tgz",
      "integrity": "sha512-U7zgftmQriw37tfD934UNInokz6yTmn29inT2cAetAsaU9YeVCveWEwhKL1Mg4yS7q//NGdzy79nlXh3bT8Kjw==",
      "dev": true
    },
    "@webassemblyjs/wasm-edit": {
      "version": "1.8.5",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-edit/-/wasm-edit-1.8.5.tgz",
      "integrity": "sha512-A41EMy8MWw5yvqj7MQzkDjU29K7UJq1VrX2vWLzfpRHt3ISftOXqrtojn7nlPsZ9Ijhp5NwuODuycSvfAO/26Q==",
      "dev": true,
      "requires": {
        "@webassemblyjs/ast": "1.8.5",
        "@webassemblyjs/helper-buffer": "1.8.5",
        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",
        "@webassemblyjs/helper-wasm-section": "1.8.5",
        "@webassemblyjs/wasm-gen": "1.8.5",
        "@webassemblyjs/wasm-opt": "1.8.5",
        "@webassemblyjs/wasm-parser": "1.8.5",
        "@webassemblyjs/wast-printer": "1.8.5"
      }
    },
    "@webassemblyjs/wasm-gen": {
      "version": "1.8.5",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-gen/-/wasm-gen-1.8.5.tgz",
      "integrity": "sha512-BCZBT0LURC0CXDzj5FXSc2FPTsxwp3nWcqXQdOZE4U7h7i8FqtFK5Egia6f9raQLpEKT1VL7zr4r3+QX6zArWg==",
      "dev": true,
      "requires": {
        "@webassemblyjs/ast": "1.8.5",
        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",
        "@webassemblyjs/ieee754": "1.8.5",
        "@webassemblyjs/leb128": "1.8.5",
        "@webassemblyjs/utf8": "1.8.5"
      }
    },
    "@webassemblyjs/wasm-opt": {
      "version": "1.8.5",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-opt/-/wasm-opt-1.8.5.tgz",
      "integrity": "sha512-HKo2mO/Uh9A6ojzu7cjslGaHaUU14LdLbGEKqTR7PBKwT6LdPtLLh9fPY33rmr5wcOMrsWDbbdCHq4hQUdd37Q==",
      "dev": true,
      "requires": {
        "@webassemblyjs/ast": "1.8.5",
        "@webassemblyjs/helper-buffer": "1.8.5",
        "@webassemblyjs/wasm-gen": "1.8.5",
        "@webassemblyjs/wasm-parser": "1.8.5"
      }
    },
    "@webassemblyjs/wasm-parser": {
      "version": "1.8.5",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-parser/-/wasm-parser-1.8.5.tgz",
      "integrity": "sha512-pi0SYE9T6tfcMkthwcgCpL0cM9nRYr6/6fjgDtL6q/ZqKHdMWvxitRi5JcZ7RI4SNJJYnYNaWy5UUrHQy998lw==",
      "dev": true,
      "requires": {
        "@webassemblyjs/ast": "1.8.5",
        "@webassemblyjs/helper-api-error": "1.8.5",
        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",
        "@webassemblyjs/ieee754": "1.8.5",
        "@webassemblyjs/leb128": "1.8.5",
        "@webassemblyjs/utf8": "1.8.5"
      }
    },
    "@webassemblyjs/wast-parser": {
      "version": "1.8.5",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wast-parser/-/wast-parser-1.8.5.tgz",
      "integrity": "sha512-daXC1FyKWHF1i11obK086QRlsMsY4+tIOKgBqI1lxAnkp9xe9YMcgOxm9kLe+ttjs5aWV2KKE1TWJCN57/Btsg==",
      "dev": true,
      "requires": {
        "@webassemblyjs/ast": "1.8.5",
        "@webassemblyjs/floating-point-hex-parser": "1.8.5",
        "@webassemblyjs/helper-api-error": "1.8.5",
        "@webassemblyjs/helper-code-frame": "1.8.5",
        "@webassemblyjs/helper-fsm": "1.8.5",
        "@xtuc/long": "4.2.2"
      }
    },
    "@webassemblyjs/wast-printer": {
      "version": "1.8.5",
      "resolved": "https://registry.npmjs.org/@webassemblyjs/wast-printer/-/wast-printer-1.8.5.tgz",
      "integrity": "sha512-w0U0pD4EhlnvRyeJzBqaVSJAo9w/ce7/WPogeXLzGkO6hzhr4GnQIZ4W4uUt5b9ooAaXPtnXlj0gzsXEOUNYMg==",
      "dev": true,
      "requires": {
        "@webassemblyjs/ast": "1.8.5",
        "@webassemblyjs/wast-parser": "1.8.5",
        "@xtuc/long": "4.2.2"
      }
    },
    "@xtuc/ieee754": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@xtuc/ieee754/-/ieee754-1.2.0.tgz",
      "integrity": "sha512-DX8nKgqcGwsc0eJSqYt5lwP4DH5FlHnmuWWBRy7X0NcaGR0ZtuyeESgMwTYVEtxmsNGY+qit4QYT/MIYTOTPeA==",
      "dev": true
    },
    "@xtuc/long": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/@xtuc/long/-/long-4.2.2.tgz",
      "integrity": "sha512-NuHqBY1PB/D8xU6s/thBgOAiAP7HOYDQ32+BFZILJ8ivkUkAHQnWfn6WhL79Owj1qmUnoN/YPhktdIoucipkAQ==",
      "dev": true
    },
    "@yarnpkg/lockfile": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@yarnpkg/lockfile/-/lockfile-1.1.0.tgz",
      "integrity": "sha512-GpSwvyXOcOOlV70vbnzjj4fW5xW/FdUF6nQEt1ENy7m4ZCczi1+/buVUPAqmGfqznsORNFzUMjctTIp8a9tuCQ==",
      "dev": true
    },
    "JSONStream": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/JSONStream/-/JSONStream-1.3.5.tgz",
      "integrity": "sha512-E+iruNOY8VV9s4JEbe1aNEm6MiszPRr/UfcHMz0TQh1BXSxHK+ASV1R6W4HpjBhSeS+54PIsAMCBmwD06LLsqQ==",
      "dev": true,
      "requires": {
        "jsonparse": "^1.2.0",
        "through": ">=2.2.7 <3"
      }
    },
    "accepts": {
      "version": "1.3.7",
      "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.7.tgz",
      "integrity": "sha512-Il80Qs2WjYlJIBNzNkK6KYqlVMTbZLXgHx2oT0pU/fjRHyEp+PEfEPY0R3WCwAGVOtauxh1hOxNgIf5bv7dQpA==",
      "requires": {
        "mime-types": "~2.1.24",
        "negotiator": "0.6.2"
      }
    },
    "acorn": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-7.1.1.tgz",
      "integrity": "sha512-add7dgA5ppRPxCFJoAGfMDi7PIBXq1RtGo7BhbLaxwrXPOmw8gq48Y9ozT01hUKy9byMjlR20EJhu5zlkErEkg==",
      "dev": true
    },
    "adm-zip": {
      "version": "0.4.14",
      "resolved": "https://registry.npmjs.org/adm-zip/-/adm-zip-0.4.14.tgz",
      "integrity": "sha512-/9aQCnQHF+0IiCl0qhXoK7qs//SwYE7zX8lsr/DNk1BRAHYxeLZPL4pguwK29gUEqasYQjqPtEpDRSWEkdHn9g==",
      "dev": true
    },
    "aes-js": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/aes-js/-/aes-js-3.0.0.tgz",
      "integrity": "sha1-4h3xCtbCBTKVvLuNq0Cwnb6ofk0="
    },
    "after": {
      "version": "0.8.2",
      "resolved": "https://registry.npmjs.org/after/-/after-0.8.2.tgz",
      "integrity": "sha1-/ts5T58OAqqXaOcCvaI7UF+ufh8=",
      "dev": true
    },
    "agent-base": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-4.3.0.tgz",
      "integrity": "sha512-salcGninV0nPrwpGNn4VTXBb1SOuXQBiqbrNXoeizJsHrsL6ERFM2Ne3JUSBWRE6aeNJI2ROP/WEEIDUiDe3cg==",
      "dev": true,
      "requires": {
        "es6-promisify": "^5.0.0"
      }
    },
    "agentkeepalive": {
      "version": "3.5.2",
      "resolved": "https://registry.npmjs.org/agentkeepalive/-/agentkeepalive-3.5.2.tgz",
      "integrity": "sha512-e0L/HNe6qkQ7H19kTlRRqUibEAwDK5AFk6y3PtMsuut2VAH6+Q4xZml1tNDJD7kSAyqmbG/K08K5WEJYtUrSlQ==",
      "dev": true,
      "requires": {
        "humanize-ms": "^1.2.1"
      }
    },
    "aggregate-error": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/aggregate-error/-/aggregate-error-3.0.1.tgz",
      "integrity": "sha512-quoaXsZ9/BLNae5yiNoUz+Nhkwz83GhWwtYFglcjEQB2NDHCIpApbqXxIFnm4Pq/Nvhrsq5sYJFyohrrxnTGAA==",
      "dev": true,
      "requires": {
        "clean-stack": "^2.0.0",
        "indent-string": "^4.0.0"
      }
    },
    "ajv": {
      "version": "6.10.2",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.10.2.tgz",
      "integrity": "sha512-TXtUUEYHuaTEbLZWIKUr5pmBuhDLy+8KYtPYdcV8qC+pOZL+NKqYwvWSRrVXHn+ZmRRAu8vJTAznH7Oag6RVRw==",
      "requires": {
        "fast-deep-equal": "^2.0.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      }
    },
    "ajv-errors": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/ajv-errors/-/ajv-errors-1.0.1.tgz",
      "integrity": "sha512-DCRfO/4nQ+89p/RK43i8Ezd41EqdGIU4ld7nGF8OQ14oc/we5rEntLCUa7+jrn3nn83BosfwZA0wb4pon2o8iQ==",
      "dev": true
    },
    "ajv-keywords": {
      "version": "3.4.1",
      "resolved": "https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-3.4.1.tgz",
      "integrity": "sha512-RO1ibKvd27e6FEShVFfPALuHI3WjSVNeK5FIsmme/LYRNxjKuNj+Dt7bucLa6NdSv3JcVTyMlm9kGR84z1XpaQ==",
      "dev": true
    },
    "alphanum-sort": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/alphanum-sort/-/alphanum-sort-1.0.2.tgz",
      "integrity": "sha1-l6ERlkmyEa0zaR2fn0hqjsn74KM=",
      "dev": true
    },
    "ansi-colors": {
      "version": "3.2.4",
      "resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-3.2.4.tgz",
      "integrity": "sha512-hHUXGagefjN2iRrID63xckIvotOXOojhQKWIPUZ4mNUZ9nLZW+7FMNoE1lOkEhNWYsx/7ysGIuJYCiMAA9FnrA==",
      "dev": true
    },
    "ansi-escapes": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.1.tgz",
      "integrity": "sha512-JWF7ocqNrp8u9oqpgV+wH5ftbt+cfvv+PTjOvKLT3AdYly/LmORARfEVT1iyjwN+4MqE5UmVKoAdIBqeoCHgLA==",
      "dev": true,
      "requires": {
        "type-fest": "^0.11.0"
      }
    },
    "ansi-html": {
      "version": "0.0.7",
      "resolved": "https://registry.npmjs.org/ansi-html/-/ansi-html-0.0.7.tgz",
      "integrity": "sha1-gTWEAhliqenm/QOflA0S9WynhZ4=",
      "dev": true
    },
    "ansi-regex": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
      "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="
    },
    "ansi-styles": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
      "dev": true,
      "requires": {
        "color-convert": "^1.9.0"
      }
    },
    "any-promise": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz",
      "integrity": "sha1-q8av7tzqUugJzcA3au0845Y10X8="
    },
    "anymatch": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.1.tgz",
      "integrity": "sha512-mM8522psRCqzV+6LhomX5wgp25YVibjh8Wj23I5RPkPppSVSjyKD2A2mBJmWGa+KN7f2D6LNh9jkBCeyLktzjg==",
      "dev": true,
      "requires": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      }
    },
    "app-root-path": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/app-root-path/-/app-root-path-2.2.1.tgz",
      "integrity": "sha512-91IFKeKk7FjfmezPKkwtaRvSpnUc4gDwPAjA1YZ9Gn0q0PPeW+vbeUsZuyDwjI7+QTHhcLen2v25fi/AmhvbJA==",
      "dev": true
    },
    "append-transform": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/append-transform/-/append-transform-1.0.0.tgz",
      "integrity": "sha512-P009oYkeHyU742iSZJzZZywj4QRJdnTWffaKuJQLablCZ1uz6/cW4yaRgcDaoQ+uwOxxnt0gRUcwfsNP2ri0gw==",
      "dev": true,
      "requires": {
        "default-require-extensions": "^2.0.0"
      }
    },
    "aproba": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/aproba/-/aproba-1.2.0.tgz",
      "integrity": "sha512-Y9J6ZjXtoYh8RnXVCMOU/ttDmk1aBjunq9vO0ta5x85WDQiQfUF9sIPBITdbiiIVcBo03Hi3jMxigBtsddlXRw==",
      "dev": true
    },
    "arg": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/arg/-/arg-4.1.3.tgz",
      "integrity": "sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==",
      "dev": true
    },
    "argparse": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",
      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
      "dev": true,
      "requires": {
        "sprintf-js": "~1.0.2"
      }
    },
    "aria-query": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/aria-query/-/aria-query-3.0.0.tgz",
      "integrity": "sha1-ZbP8wcoRVajJrmTW7uKX8V1RM8w=",
      "dev": true,
      "requires": {
        "ast-types-flow": "0.0.7",
        "commander": "^2.11.0"
      }
    },
    "arql-ops": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/arql-ops/-/arql-ops-1.0.0.tgz",
      "integrity": "sha512-7nj1QWj8uNP4LipeF6Wkbn3We/2ZVDAaEJWxMk6NNBM5bZBAKsAAn1ime34+2nyuaaA/yBALaanuhF674JjBRw=="
    },
    "arr-diff": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-4.0.0.tgz",
      "integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA=",
      "dev": true
    },
    "arr-flatten": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/arr-flatten/-/arr-flatten-1.1.0.tgz",
      "integrity": "sha512-L3hKV5R/p5o81R7O02IGnwpDmkp6E982XhtbuwSe3O4qOtMMMtodicASA1Cny2U+aCXcNpml+m4dPsvsJ3jatg==",
      "dev": true
    },
    "arr-union": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-3.1.0.tgz",
      "integrity": "sha1-45sJrqne+Gao8gbiiK9jkZuuOcQ=",
      "dev": true
    },
    "array-flatten": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-2.1.2.tgz",
      "integrity": "sha512-hNfzcOV8W4NdualtqBFPyVO+54DSJuZGY9qT4pRroB6S9e3iiido2ISIC5h9R2sPJ8H3FHCIiEnsv1lPXO3KtQ==",
      "dev": true
    },
    "array-union": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/array-union/-/array-union-1.0.2.tgz",
      "integrity": "sha1-mjRBDk9OPaI96jdb5b5w8kd47Dk=",
      "dev": true,
      "requires": {
        "array-uniq": "^1.0.1"
      }
    },
    "array-uniq": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/array-uniq/-/array-uniq-1.0.3.tgz",
      "integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY=",
      "dev": true
    },
    "array-unique": {
      "version": "0.3.2",
      "resolved": "https://registry.npmjs.org/array-unique/-/array-unique-0.3.2.tgz",
      "integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg=",
      "dev": true
    },
    "arraybuffer.slice": {
      "version": "0.0.7",
      "resolved": "https://registry.npmjs.org/arraybuffer.slice/-/arraybuffer.slice-0.0.7.tgz",
      "integrity": "sha512-wGUIVQXuehL5TCqQun8OW81jGzAWycqzFF8lFp+GOM5BXLYj3bKNsYC4daB7n6XjCqxQA/qgTJ+8ANR3acjrog==",
      "dev": true
    },
    "arrify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz",
      "integrity": "sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0=",
      "dev": true
    },
    "arweave": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/arweave/-/arweave-1.6.0.tgz",
      "integrity": "sha512-weK0OCUTJ8vkhTutvej69wtieufi8XF4vRPeKesYUHM7R5qI3oMgFFeYJ7A/AuZ7UPqx0iFeCgqoPJ1TTY7ypg==",
      "requires": {
        "arweave-asn1": "github:arweave-kyle/asn1.js",
        "axios": "^0.18.0",
        "base64-js": "^1.3.0",
        "bignumber.js": "^8.1.1"
      },
      "dependencies": {
        "bignumber.js": {
          "version": "8.1.1",
          "resolved": "https://registry.npmjs.org/bignumber.js/-/bignumber.js-8.1.1.tgz",
          "integrity": "sha512-QD46ppGintwPGuL1KqmwhR0O+N2cZUg8JG/VzwI2e28sM9TqHjQB10lI4QAaMHVbLzwVLLAwEglpKPViWX+5NQ=="
        }
      }
    },
    "arweave-asn1": {
      "version": "github:arweave-kyle/asn1.js#afc4c325183f6a9d1ff84454106319d3e08d2b0e",
      "from": "github:arweave-kyle/asn1.js",
      "requires": {
        "bn.js": "^4.0.0",
        "inherits": "^2.0.1",
        "minimalistic-assert": "^1.0.0"
      }
    },
    "asap": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/asap/-/asap-2.0.6.tgz",
      "integrity": "sha1-5QNHYR1+aQlDIIu9r+vLwvuGbUY=",
      "dev": true
    },
    "ascli": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/ascli/-/ascli-1.0.1.tgz",
      "integrity": "sha1-vPpZdKYvGOgcq660lzKrSoj5Brw=",
      "requires": {
        "colour": "~0.7.1",
        "optjs": "~3.2.2"
      }
    },
    "asn1": {
      "version": "0.2.4",
      "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz",
      "integrity": "sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==",
      "requires": {
        "safer-buffer": "~2.1.0"
      }
    },
    "asn1.js": {
      "version": "4.10.1",
      "resolved": "https://registry.npmjs.org/asn1.js/-/asn1.js-4.10.1.tgz",
      "integrity": "sha512-p32cOF5q0Zqs9uBiONKYLm6BClCoBCM5O9JfeUSlnQLBTxYdTK+pW+nXflm8UkKd2UYlEbYz5qEi0JuZR9ckSw==",
      "requires": {
        "bn.js": "^4.0.0",
        "inherits": "^2.0.1",
        "minimalistic-assert": "^1.0.0"
      }
    },
    "assert": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/assert/-/assert-1.5.0.tgz",
      "integrity": "sha512-EDsgawzwoun2CZkCgtxJbv392v4nbk9XDD06zI+kQYoBM/3RBWLlEyJARDOmhAAosBjWACEkKL6S+lIZtcAubA==",
      "dev": true,
      "requires": {
        "object-assign": "^4.1.1",
        "util": "0.10.3"
      },
      "dependencies": {
        "inherits": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.1.tgz",
          "integrity": "sha1-sX0I0ya0Qj5Wjv9xn5GwscvfafE=",
          "dev": true
        },
        "util": {
          "version": "0.10.3",
          "resolved": "https://registry.npmjs.org/util/-/util-0.10.3.tgz",
          "integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",
          "dev": true,
          "requires": {
            "inherits": "2.0.1"
          }
        }
      }
    },
    "assert-plus": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
      "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU="
    },
    "assertion-error": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/assertion-error/-/assertion-error-1.1.0.tgz",
      "integrity": "sha512-jgsaNduz+ndvGyFt3uSuWqvy4lCnIJiovtouQN5JZHOKCS2QuhEdbcQHFhVksz2N2U9hXJo8odG7ETyWlEeuDw=="
    },
    "assign-symbols": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/assign-symbols/-/assign-symbols-1.0.0.tgz",
      "integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c=",
      "dev": true
    },
    "ast-types-flow": {
      "version": "0.0.7",
      "resolved": "https://registry.npmjs.org/ast-types-flow/-/ast-types-flow-0.0.7.tgz",
      "integrity": "sha1-9wtzXGvKGlycItmCw+Oef+ujva0=",
      "dev": true
    },
    "async": {
      "version": "2.6.3",
      "resolved": "https://registry.npmjs.org/async/-/async-2.6.3.tgz",
      "integrity": "sha512-zflvls11DCy+dQWzTW2dzuilv8Z5X/pjfmZOWba6TNIVDm+2UDaJmXSOXlasHKfNBs8oo3M0aT50fDEWfKZjXg==",
      "dev": true,
      "requires": {
        "lodash": "^4.17.14"
      }
    },
    "async-each": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/async-each/-/async-each-1.0.3.tgz",
      "integrity": "sha512-z/WhQ5FPySLdvREByI2vZiTWwCnF0moMJ1hK9YQwDTHKh6I7/uSckMetoRGb5UBZPC1z0jlw+n/XCgjeH7y1AQ==",
      "dev": true
    },
    "async-each-series": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/async-each-series/-/async-each-series-0.1.1.tgz",
      "integrity": "sha1-dhfBkXQB/Yykooqtzj266Yr+tDI=",
      "dev": true
    },
    "async-limiter": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/async-limiter/-/async-limiter-1.0.1.tgz",
      "integrity": "sha512-csOlWGAcRFJaI6m+F2WKdnMKr4HhdhFVBk0H/QbJFMCr+uO2kwohwXQPxw/9OCxp05r5ghVBFSyioixx3gfkNQ=="
    },
    "asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha1-x57Zf380y48robyXkLzDZkdLS3k="
    },
    "atob": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/atob/-/atob-2.1.2.tgz",
      "integrity": "sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg==",
      "dev": true
    },
    "autoprefixer": {
      "version": "9.7.1",
      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-9.7.1.tgz",
      "integrity": "sha512-w3b5y1PXWlhYulevrTJ0lizkQ5CyqfeU6BIRDbuhsMupstHQOeb1Ur80tcB1zxSu7AwyY/qCQ7Vvqklh31ZBFw==",
      "dev": true,
      "requires": {
        "browserslist": "^4.7.2",
        "caniuse-lite": "^1.0.30001006",
        "chalk": "^2.4.2",
        "normalize-range": "^0.1.2",
        "num2fraction": "^1.2.2",
        "postcss": "^7.0.21",
        "postcss-value-parser": "^4.0.2"
      }
    },
    "aws-sign2": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
      "integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg="
    },
    "aws4": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.9.1.tgz",
      "integrity": "sha512-wMHVg2EOHaMRxbzgFJ9gtjOOCrI80OHLG14rxi28XwOW8ux6IiEbRCGGGqCtdAIg4FQCbW20k9RsT4y3gJlFug=="
    },
    "axios": {
      "version": "0.18.1",
      "resolved": "https://registry.npmjs.org/axios/-/axios-0.18.1.tgz",
      "integrity": "sha512-0BfJq4NSfQXd+SkFdrvFbG7addhYSBA2mQwISr46pD6E5iqkWg02RAs8vyTT/j0RTnoYmeXauBuSv1qKwR179g==",
      "requires": {
        "follow-redirects": "1.5.10",
        "is-buffer": "^2.0.2"
      },
      "dependencies": {
        "debug": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
          "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
          "requires": {
            "ms": "2.0.0"
          }
        },
        "follow-redirects": {
          "version": "1.5.10",
          "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.5.10.tgz",
          "integrity": "sha512-0V5l4Cizzvqt5D44aTXbFZz+FtyXV1vrDN6qrelxtfYQKW0KO0W2T/hkE8xvGa/540LkZlkaUjO4ailYTFtHVQ==",
          "requires": {
            "debug": "=3.1.0"
          }
        },
        "is-buffer": {
          "version": "2.0.4",
          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-2.0.4.tgz",
          "integrity": "sha512-Kq1rokWXOPXWuaMAqZiJW4XxsmD9zGx9q4aePabbn3qCRGedtH7Cm+zV8WETitMfu1wdh+Rvd6w5egwSngUX2A=="
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
        }
      }
    },
    "axobject-query": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/axobject-query/-/axobject-query-2.0.2.tgz",
      "integrity": "sha512-MCeek8ZH7hKyO1rWUbKNQBbl4l2eY0ntk7OGi+q0RlafrCnfPxC06WZA+uebCfmYp4mNU9jRBP1AhGyf8+W3ww==",
      "dev": true,
      "requires": {
        "ast-types-flow": "0.0.7"
      }
    },
    "babel-loader": {
      "version": "8.0.6",
      "resolved": "https://registry.npmjs.org/babel-loader/-/babel-loader-8.0.6.tgz",
      "integrity": "sha512-4BmWKtBOBm13uoUwd08UwjZlaw3O9GWf456R9j+5YykFZ6LUIjIKLc0zEZf+hauxPOJs96C8k6FvYD09vWzhYw==",
      "dev": true,
      "requires": {
        "find-cache-dir": "^2.0.0",
        "loader-utils": "^1.0.2",
        "mkdirp": "^0.5.1",
        "pify": "^4.0.1"
      },
      "dependencies": {
        "find-cache-dir": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-2.1.0.tgz",
          "integrity": "sha512-Tq6PixE0w/VMFfCgbONnkiQIVol/JJL7nRMi20fqzA4NRs9AfeqMGeRdPi3wIhYkxjeBaWh2rxwapn5Tu3IqOQ==",
          "dev": true,
          "requires": {
            "commondir": "^1.0.1",
            "make-dir": "^2.0.0",
            "pkg-dir": "^3.0.0"
          }
        }
      }
    },
    "babel-plugin-dynamic-import-node": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/babel-plugin-dynamic-import-node/-/babel-plugin-dynamic-import-node-2.3.0.tgz",
      "integrity": "sha512-o6qFkpeQEBxcqt0XYlWzAVxNCSCZdUgcR8IRlhD/8DylxjjO4foPcvTW0GGKa/cVt3rvxZ7o5ippJ+/0nvLhlQ==",
      "dev": true,
      "requires": {
        "object.assign": "^4.1.0"
      }
    },
    "backo2": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/backo2/-/backo2-1.0.2.tgz",
      "integrity": "sha1-MasayLEpNjRj41s+u2n038+6eUc=",
      "dev": true
    },
    "balanced-match": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz",
      "integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c=",
      "dev": true
    },
    "base": {
      "version": "0.11.2",
      "resolved": "https://registry.npmjs.org/base/-/base-0.11.2.tgz",
      "integrity": "sha512-5T6P4xPgpp0YDFvSWwEZ4NoE3aM4QBQXDzmVbraCkFj8zHM+mba8SyqB5DbZWyR7mYHo6Y7BdQo3MoA4m0TeQg==",
      "dev": true,
      "requires": {
        "cache-base": "^1.0.1",
        "class-utils": "^0.3.5",
        "component-emitter": "^1.2.1",
        "define-property": "^1.0.0",
        "isobject": "^3.0.1",
        "mixin-deep": "^1.2.0",
        "pascalcase": "^0.1.1"
      },
      "dependencies": {
        "define-property": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^1.0.0"
          }
        },
        "is-accessor-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-data-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-descriptor": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
          "dev": true,
          "requires": {
            "is-accessor-descriptor": "^1.0.0",
            "is-data-descriptor": "^1.0.0",
            "kind-of": "^6.0.2"
          }
        }
      }
    },
    "base-x": {
      "version": "3.0.8",
      "resolved": "https://registry.npmjs.org/base-x/-/base-x-3.0.8.tgz",
      "integrity": "sha512-Rl/1AWP4J/zRrk54hhlxH4drNxPJXYUaKffODVI53/dAsV4t9fBxyxYKAVPU1XBHxYwOWP9h9H0hM2MVw4YfJA==",
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "base64-arraybuffer": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/base64-arraybuffer/-/base64-arraybuffer-0.1.5.tgz",
      "integrity": "sha1-c5JncZI7Whl0etZmqlzUv5xunOg=",
      "dev": true
    },
    "base64-js": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.3.1.tgz",
      "integrity": "sha512-mLQ4i2QO1ytvGWFWmcngKO//JXAQueZvwEKtjgQFM4jIK0kU+ytMfplL8j+n5mspOfjHwoAg+9yhb7BwAHm36g=="
    },
    "base64id": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/base64id/-/base64id-1.0.0.tgz",
      "integrity": "sha1-R2iMuZu2gE8OBtPnY7HDLlfY5rY=",
      "dev": true
    },
    "batch": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/batch/-/batch-0.6.1.tgz",
      "integrity": "sha1-3DQxT05nkxgJP8dgJyUl+UvyXBY=",
      "dev": true
    },
    "bcrypt-pbkdf": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
      "integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
      "requires": {
        "tweetnacl": "^0.14.3"
      }
    },
    "better-assert": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/better-assert/-/better-assert-1.0.2.tgz",
      "integrity": "sha1-QIZrnhueC1W0gYlDEeaPr/rrxSI=",
      "dev": true,
      "requires": {
        "callsite": "1.0.0"
      }
    },
    "big.js": {
      "version": "5.2.2",
      "resolved": "https://registry.npmjs.org/big.js/-/big.js-5.2.2.tgz",
      "integrity": "sha512-vyL2OymJxmarO8gxMr0mhChsO9QGwhynfuu4+MHTAW6czfq9humCB7rKpUjDd9YUiDPU4mzpyupFSvOClAwbmQ==",
      "dev": true
    },
    "bignumber.js": {
      "version": "9.0.0",
      "resolved": "https://registry.npmjs.org/bignumber.js/-/bignumber.js-9.0.0.tgz",
      "integrity": "sha512-t/OYhhJ2SD+YGBQcjY8GzzDHEk9f3nerxjtfa6tlMXfe7frs/WozhvCNoGvpM0P3bNf3Gq5ZRMlGr5f3r4/N8A=="
    },
    "binary-extensions": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.0.0.tgz",
      "integrity": "sha512-Phlt0plgpIIBOGTT/ehfFnbNlfsDEiqmzE2KRXoX1bLIlir4X/MR+zSyBEkL05ffWgnRSf/DXv+WrUAVr93/ow==",
      "dev": true
    },
    "bindings": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/bindings/-/bindings-1.5.0.tgz",
      "integrity": "sha512-p2q/t/mhvuOj/UeLlV6566GD/guowlr0hHxClI0W9m7MWYkL1F0hLo+0Aexs9HSPCtR1SXQ0TD3MMKrXZajbiQ==",
      "requires": {
        "file-uri-to-path": "1.0.0"
      }
    },
    "bip66": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/bip66/-/bip66-1.1.5.tgz",
      "integrity": "sha1-AfqHSHhcpwlV1QESF9GzE5lpyiI=",
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "bl": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/bl/-/bl-1.2.2.tgz",
      "integrity": "sha512-e8tQYnZodmebYDWGH7KMRvtzKXaJHx3BbilrgZCfvyLUYdKpK1t5PSPmpkny/SgiTSCnjfLW7v5rlONXVFkQEA==",
      "requires": {
        "readable-stream": "^2.3.5",
        "safe-buffer": "^5.1.1"
      }
    },
    "blob": {
      "version": "0.0.5",
      "resolved": "https://registry.npmjs.org/blob/-/blob-0.0.5.tgz",
      "integrity": "sha512-gaqbzQPqOoamawKg0LGVd7SzLgXS+JH61oWprSLH+P+abTczqJbhTR8CmJ2u9/bUYNmHTGJx/UEmn6doAvvuig==",
      "dev": true
    },
    "blocking-proxy": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/blocking-proxy/-/blocking-proxy-1.0.1.tgz",
      "integrity": "sha512-KE8NFMZr3mN2E0HcvCgRtX7DjhiIQrwle+nSVJVC/yqFb9+xznHl2ZcoBp2L9qzkI4t4cBFJ1efXF8Dwi132RA==",
      "dev": true,
      "requires": {
        "minimist": "^1.2.0"
      }
    },
    "bluebird": {
      "version": "3.7.2",
      "resolved": "https://registry.npmjs.org/bluebird/-/bluebird-3.7.2.tgz",
      "integrity": "sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg=="
    },
    "bn.js": {
      "version": "4.11.8",
      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.8.tgz",
      "integrity": "sha512-ItfYfPLkWHUjckQCk8xC+LwxgK8NYcXywGigJgSwOP8Y2iyWT4f2vsZnoOXTTbo+o5yXmIUJ4gn5538SO5S3gA=="
    },
    "body-parser": {
      "version": "1.19.0",
      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.19.0.tgz",
      "integrity": "sha512-dhEPs72UPbDnAQJ9ZKMNTP6ptJaionhP5cBb541nXPlW60Jepo9RV/a4fX4XWW9CuFNK22krhrj1+rgzifNCsw==",
      "requires": {
        "bytes": "3.1.0",
        "content-type": "~1.0.4",
        "debug": "2.6.9",
        "depd": "~1.1.2",
        "http-errors": "1.7.2",
        "iconv-lite": "0.4.24",
        "on-finished": "~2.3.0",
        "qs": "6.7.0",
        "raw-body": "2.4.0",
        "type-is": "~1.6.17"
      },
      "dependencies": {
        "bytes": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.0.tgz",
          "integrity": "sha512-zauLjrfCG+xvoyaqLoV8bLVXXNGC4JqlxFCutSDWA6fJrTo2ZuvLYTqZ7aHBLZSMOopbzwv8f+wZcVzfVTI2Dg=="
        },
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "requires": {
            "ms": "2.0.0"
          }
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
        },
        "qs": {
          "version": "6.7.0",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.7.0.tgz",
          "integrity": "sha512-VCdBRNFTX1fyE7Nb6FYoURo/SPe62QCaAyzJvUjwRaIsc+NePBEniHlvxFmmX56+HZphIGtV0XeCirBtpDrTyQ=="
        }
      }
    },
    "bonjour": {
      "version": "3.5.0",
      "resolved": "https://registry.npmjs.org/bonjour/-/bonjour-3.5.0.tgz",
      "integrity": "sha1-jokKGD2O6aI5OzhExpGkK897yfU=",
      "dev": true,
      "requires": {
        "array-flatten": "^2.1.0",
        "deep-equal": "^1.0.1",
        "dns-equal": "^1.0.0",
        "dns-txt": "^2.0.2",
        "multicast-dns": "^6.0.1",
        "multicast-dns-service-types": "^1.1.0"
      }
    },
    "boolbase": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgz",
      "integrity": "sha1-aN/1++YMUes3cl6p4+0xDcwed24=",
      "dev": true
    },
    "brace-expansion": {
      "version": "1.1.11",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
      "dev": true,
      "requires": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "braces": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
      "dev": true,
      "requires": {
        "fill-range": "^7.0.1"
      }
    },
    "brorand": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/brorand/-/brorand-1.1.0.tgz",
      "integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8="
    },
    "browser-sync": {
      "version": "2.26.7",
      "resolved": "https://registry.npmjs.org/browser-sync/-/browser-sync-2.26.7.tgz",
      "integrity": "sha512-lY3emme0OyvA2ujEMpRmyRy9LY6gHLuTr2/ABxhIm3lADOiRXzP4dgekvnDrQqZ/Ec2Fz19lEjm6kglSG5766w==",
      "dev": true,
      "requires": {
        "browser-sync-client": "^2.26.6",
        "browser-sync-ui": "^2.26.4",
        "bs-recipes": "1.3.4",
        "bs-snippet-injector": "^2.0.1",
        "chokidar": "^2.0.4",
        "connect": "3.6.6",
        "connect-history-api-fallback": "^1",
        "dev-ip": "^1.0.1",
        "easy-extender": "^2.3.4",
        "eazy-logger": "^3",
        "etag": "^1.8.1",
        "fresh": "^0.5.2",
        "fs-extra": "3.0.1",
        "http-proxy": "1.15.2",
        "immutable": "^3",
        "localtunnel": "1.9.2",
        "micromatch": "^3.1.10",
        "opn": "5.3.0",
        "portscanner": "2.1.1",
        "qs": "6.2.3",
        "raw-body": "^2.3.2",
        "resp-modifier": "6.0.2",
        "rx": "4.1.0",
        "send": "0.16.2",
        "serve-index": "1.9.1",
        "serve-static": "1.13.2",
        "server-destroy": "1.0.1",
        "socket.io": "2.1.1",
        "ua-parser-js": "0.7.17",
        "yargs": "6.4.0"
      },
      "dependencies": {
        "anymatch": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-2.0.0.tgz",
          "integrity": "sha512-5teOsQWABXHHBFP9y3skS5P3d/WfWXpv3FUpy+LorMrNYaT9pI4oLMQX7jzQ2KklNpGpWHzdCXTDT2Y3XGlZBw==",
          "dev": true,
          "requires": {
            "micromatch": "^3.1.4",
            "normalize-path": "^2.1.1"
          },
          "dependencies": {
            "normalize-path": {
              "version": "2.1.1",
              "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-2.1.1.tgz",
              "integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
              "dev": true,
              "requires": {
                "remove-trailing-separator": "^1.0.1"
              }
            }
          }
        },
        "binary-extensions": {
          "version": "1.13.1",
          "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-1.13.1.tgz",
          "integrity": "sha512-Un7MIEDdUC5gNpcGDV97op1Ywk748MpHcFTHoYs6qnj1Z3j7I53VG3nwZhKzoBZmbdRNnb6WRdFlwl7tSDuZGw==",
          "dev": true
        },
        "braces": {
          "version": "2.3.2",
          "resolved": "https://registry.npmjs.org/braces/-/braces-2.3.2.tgz",
          "integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",
          "dev": true,
          "requires": {
            "arr-flatten": "^1.1.0",
            "array-unique": "^0.3.2",
            "extend-shallow": "^2.0.1",
            "fill-range": "^4.0.0",
            "isobject": "^3.0.1",
            "repeat-element": "^1.1.2",
            "snapdragon": "^0.8.1",
            "snapdragon-node": "^2.0.1",
            "split-string": "^3.0.2",
            "to-regex": "^3.0.1"
          }
        },
        "camelcase": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-3.0.0.tgz",
          "integrity": "sha1-MvxLn82vhF/N9+c7uXysImHwqwo=",
          "dev": true
        },
        "chokidar": {
          "version": "2.1.8",
          "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-2.1.8.tgz",
          "integrity": "sha512-ZmZUazfOzf0Nve7duiCKD23PFSCs4JPoYyccjUFF3aQkQadqBhfzhjkwBH2mNOG9cTBwhamM37EIsIkZw3nRgg==",
          "dev": true,
          "requires": {
            "anymatch": "^2.0.0",
            "async-each": "^1.0.1",
            "braces": "^2.3.2",
            "fsevents": "^1.2.7",
            "glob-parent": "^3.1.0",
            "inherits": "^2.0.3",
            "is-binary-path": "^1.0.0",
            "is-glob": "^4.0.0",
            "normalize-path": "^3.0.0",
            "path-is-absolute": "^1.0.0",
            "readdirp": "^2.2.1",
            "upath": "^1.1.1"
          }
        },
        "cliui": {
          "version": "3.2.0",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-3.2.0.tgz",
          "integrity": "sha1-EgYBU3qRbSmUD5NNo7SNWFo5IT0=",
          "dev": true,
          "requires": {
            "string-width": "^1.0.1",
            "strip-ansi": "^3.0.1",
            "wrap-ansi": "^2.0.0"
          }
        },
        "connect": {
          "version": "3.6.6",
          "resolved": "https://registry.npmjs.org/connect/-/connect-3.6.6.tgz",
          "integrity": "sha1-Ce/2xVr3I24TcTWnJXSFi2eG9SQ=",
          "dev": true,
          "requires": {
            "debug": "2.6.9",
            "finalhandler": "1.1.0",
            "parseurl": "~1.3.2",
            "utils-merge": "1.0.1"
          }
        },
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "eventemitter3": {
          "version": "1.2.0",
          "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-1.2.0.tgz",
          "integrity": "sha1-HIaZHYFq0eUEdQ5zh0Ik7PO+xQg=",
          "dev": true
        },
        "extend-shallow": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
          "dev": true,
          "requires": {
            "is-extendable": "^0.1.0"
          }
        },
        "fill-range": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz",
          "integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",
          "dev": true,
          "requires": {
            "extend-shallow": "^2.0.1",
            "is-number": "^3.0.0",
            "repeat-string": "^1.6.1",
            "to-regex-range": "^2.1.0"
          }
        },
        "finalhandler": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.0.tgz",
          "integrity": "sha1-zgtoVbRYU+eRsvzGgARtiCU91/U=",
          "dev": true,
          "requires": {
            "debug": "2.6.9",
            "encodeurl": "~1.0.1",
            "escape-html": "~1.0.3",
            "on-finished": "~2.3.0",
            "parseurl": "~1.3.2",
            "statuses": "~1.3.1",
            "unpipe": "~1.0.0"
          }
        },
        "fs-extra": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-3.0.1.tgz",
          "integrity": "sha1-N5TzeMWLNC6n27sjCVEJxLO2IpE=",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.2",
            "jsonfile": "^3.0.0",
            "universalify": "^0.1.0"
          }
        },
        "fsevents": {
          "version": "1.2.12",
          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.2.12.tgz",
          "integrity": "sha512-Ggd/Ktt7E7I8pxZRbGIs7vwqAPscSESMrCSkx2FtWeqmheJgCo2R74fTsZFCifr0VTPwqRpPv17+6b8Zp7th0Q==",
          "dev": true,
          "optional": true,
          "requires": {
            "bindings": "^1.5.0",
            "nan": "^2.12.1",
            "node-pre-gyp": "*"
          },
          "dependencies": {
            "abbrev": {
              "version": "1.1.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "ansi-regex": {
              "version": "2.1.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "aproba": {
              "version": "1.2.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "are-we-there-yet": {
              "version": "1.1.5",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "delegates": "^1.0.0",
                "readable-stream": "^2.0.6"
              }
            },
            "balanced-match": {
              "version": "1.0.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "brace-expansion": {
              "version": "1.1.11",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "balanced-match": "^1.0.0",
                "concat-map": "0.0.1"
              }
            },
            "chownr": {
              "version": "1.1.4",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "code-point-at": {
              "version": "1.1.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "concat-map": {
              "version": "0.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "console-control-strings": {
              "version": "1.1.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "core-util-is": {
              "version": "1.0.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "debug": {
              "version": "3.2.6",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "ms": "^2.1.1"
              }
            },
            "deep-extend": {
              "version": "0.6.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "delegates": {
              "version": "1.0.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "detect-libc": {
              "version": "1.0.3",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "fs-minipass": {
              "version": "1.2.7",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "minipass": "^2.6.0"
              }
            },
            "fs.realpath": {
              "version": "1.0.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "gauge": {
              "version": "2.7.4",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "aproba": "^1.0.3",
                "console-control-strings": "^1.0.0",
                "has-unicode": "^2.0.0",
                "object-assign": "^4.1.0",
                "signal-exit": "^3.0.0",
                "string-width": "^1.0.1",
                "strip-ansi": "^3.0.1",
                "wide-align": "^1.1.0"
              }
            },
            "glob": {
              "version": "7.1.6",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "fs.realpath": "^1.0.0",
                "inflight": "^1.0.4",
                "inherits": "2",
                "minimatch": "^3.0.4",
                "once": "^1.3.0",
                "path-is-absolute": "^1.0.0"
              }
            },
            "has-unicode": {
              "version": "2.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "iconv-lite": {
              "version": "0.4.24",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "safer-buffer": ">= 2.1.2 < 3"
              }
            },
            "ignore-walk": {
              "version": "3.0.3",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "minimatch": "^3.0.4"
              }
            },
            "inflight": {
              "version": "1.0.6",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "once": "^1.3.0",
                "wrappy": "1"
              }
            },
            "inherits": {
              "version": "2.0.4",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "ini": {
              "version": "1.3.5",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "is-fullwidth-code-point": {
              "version": "1.0.0",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "number-is-nan": "^1.0.0"
              }
            },
            "isarray": {
              "version": "1.0.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "minimatch": {
              "version": "3.0.4",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "brace-expansion": "^1.1.7"
              }
            },
            "minimist": {
              "version": "1.2.5",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "minipass": {
              "version": "2.9.0",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "safe-buffer": "^5.1.2",
                "yallist": "^3.0.0"
              }
            },
            "minizlib": {
              "version": "1.3.3",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "minipass": "^2.9.0"
              }
            },
            "mkdirp": {
              "version": "0.5.3",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "minimist": "^1.2.5"
              }
            },
            "ms": {
              "version": "2.1.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "needle": {
              "version": "2.3.3",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "debug": "^3.2.6",
                "iconv-lite": "^0.4.4",
                "sax": "^1.2.4"
              }
            },
            "node-pre-gyp": {
              "version": "0.14.0",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "detect-libc": "^1.0.2",
                "mkdirp": "^0.5.1",
                "needle": "^2.2.1",
                "nopt": "^4.0.1",
                "npm-packlist": "^1.1.6",
                "npmlog": "^4.0.2",
                "rc": "^1.2.7",
                "rimraf": "^2.6.1",
                "semver": "^5.3.0",
                "tar": "^4.4.2"
              }
            },
            "nopt": {
              "version": "4.0.3",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "abbrev": "1",
                "osenv": "^0.1.4"
              }
            },
            "npm-bundled": {
              "version": "1.1.1",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "npm-normalize-package-bin": "^1.0.1"
              }
            },
            "npm-normalize-package-bin": {
              "version": "1.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "npm-packlist": {
              "version": "1.4.8",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "ignore-walk": "^3.0.1",
                "npm-bundled": "^1.0.1",
                "npm-normalize-package-bin": "^1.0.1"
              }
            },
            "npmlog": {
              "version": "4.1.2",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "are-we-there-yet": "~1.1.2",
                "console-control-strings": "~1.1.0",
                "gauge": "~2.7.3",
                "set-blocking": "~2.0.0"
              }
            },
            "number-is-nan": {
              "version": "1.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "object-assign": {
              "version": "4.1.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "once": {
              "version": "1.4.0",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "wrappy": "1"
              }
            },
            "os-homedir": {
              "version": "1.0.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "os-tmpdir": {
              "version": "1.0.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "osenv": {
              "version": "0.1.5",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "os-homedir": "^1.0.0",
                "os-tmpdir": "^1.0.0"
              }
            },
            "path-is-absolute": {
              "version": "1.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "process-nextick-args": {
              "version": "2.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "rc": {
              "version": "1.2.8",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "deep-extend": "^0.6.0",
                "ini": "~1.3.0",
                "minimist": "^1.2.0",
                "strip-json-comments": "~2.0.1"
              }
            },
            "readable-stream": {
              "version": "2.3.7",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "core-util-is": "~1.0.0",
                "inherits": "~2.0.3",
                "isarray": "~1.0.0",
                "process-nextick-args": "~2.0.0",
                "safe-buffer": "~5.1.1",
                "string_decoder": "~1.1.1",
                "util-deprecate": "~1.0.1"
              }
            },
            "rimraf": {
              "version": "2.7.1",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "glob": "^7.1.3"
              }
            },
            "safe-buffer": {
              "version": "5.1.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "safer-buffer": {
              "version": "2.1.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "sax": {
              "version": "1.2.4",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "semver": {
              "version": "5.7.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "set-blocking": {
              "version": "2.0.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "signal-exit": {
              "version": "3.0.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "string-width": {
              "version": "1.0.2",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "code-point-at": "^1.0.0",
                "is-fullwidth-code-point": "^1.0.0",
                "strip-ansi": "^3.0.0"
              }
            },
            "string_decoder": {
              "version": "1.1.1",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "safe-buffer": "~5.1.0"
              }
            },
            "strip-ansi": {
              "version": "3.0.1",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "ansi-regex": "^2.0.0"
              }
            },
            "strip-json-comments": {
              "version": "2.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "tar": {
              "version": "4.4.13",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "chownr": "^1.1.1",
                "fs-minipass": "^1.2.5",
                "minipass": "^2.8.6",
                "minizlib": "^1.2.1",
                "mkdirp": "^0.5.0",
                "safe-buffer": "^5.1.2",
                "yallist": "^3.0.3"
              }
            },
            "util-deprecate": {
              "version": "1.0.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "wide-align": {
              "version": "1.1.3",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "string-width": "^1.0.2 || 2"
              }
            },
            "wrappy": {
              "version": "1.0.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "yallist": {
              "version": "3.1.1",
              "bundled": true,
              "dev": true,
              "optional": true
            }
          }
        },
        "http-errors": {
          "version": "1.6.3",
          "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz",
          "integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
          "dev": true,
          "requires": {
            "depd": "~1.1.2",
            "inherits": "2.0.3",
            "setprototypeof": "1.1.0",
            "statuses": ">= 1.4.0 < 2"
          },
          "dependencies": {
            "inherits": {
              "version": "2.0.3",
              "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
              "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
              "dev": true
            },
            "statuses": {
              "version": "1.5.0",
              "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
              "integrity": "sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow=",
              "dev": true
            }
          }
        },
        "http-proxy": {
          "version": "1.15.2",
          "resolved": "https://registry.npmjs.org/http-proxy/-/http-proxy-1.15.2.tgz",
          "integrity": "sha1-ZC/cr/5S00SNK9o7AHnpQJBk2jE=",
          "dev": true,
          "requires": {
            "eventemitter3": "1.x.x",
            "requires-port": "1.x.x"
          }
        },
        "invert-kv": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/invert-kv/-/invert-kv-1.0.0.tgz",
          "integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY=",
          "dev": true
        },
        "is-binary-path": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-1.0.1.tgz",
          "integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
          "dev": true,
          "requires": {
            "binary-extensions": "^1.0.0"
          }
        },
        "is-fullwidth-code-point": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
          "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
          "dev": true,
          "requires": {
            "number-is-nan": "^1.0.0"
          }
        },
        "is-number": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
          "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
          "dev": true,
          "requires": {
            "kind-of": "^3.0.2"
          }
        },
        "is-wsl": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-1.1.0.tgz",
          "integrity": "sha1-HxbkqiKwTRM2tmGIpmrzxgDDpm0=",
          "dev": true
        },
        "jsonfile": {
          "version": "3.0.1",
          "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-3.0.1.tgz",
          "integrity": "sha1-pezG9l9T9mLEQVx2daAzHQmS7GY=",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.6"
          }
        },
        "kind-of": {
          "version": "3.2.2",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
          "dev": true,
          "requires": {
            "is-buffer": "^1.1.5"
          }
        },
        "lcid": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/lcid/-/lcid-1.0.0.tgz",
          "integrity": "sha1-MIrMr6C8SDo4Z7S28rlQYlHRuDU=",
          "dev": true,
          "requires": {
            "invert-kv": "^1.0.0"
          }
        },
        "mime": {
          "version": "1.4.1",
          "resolved": "https://registry.npmjs.org/mime/-/mime-1.4.1.tgz",
          "integrity": "sha512-KI1+qOZu5DcW6wayYHSzR/tXKCDC5Om4s1z2QJjDULzLcmf3DvzS7oluY4HCTrc+9FiKmWUgeNLg7W3uIQvxtQ==",
          "dev": true
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
          "dev": true
        },
        "opn": {
          "version": "5.3.0",
          "resolved": "https://registry.npmjs.org/opn/-/opn-5.3.0.tgz",
          "integrity": "sha512-bYJHo/LOmoTd+pfiYhfZDnf9zekVJrY+cnS2a5F2x+w5ppvTqObojTP7WiFG+kVZs9Inw+qQ/lw7TroWwhdd2g==",
          "dev": true,
          "requires": {
            "is-wsl": "^1.1.0"
          }
        },
        "os-locale": {
          "version": "1.4.0",
          "resolved": "https://registry.npmjs.org/os-locale/-/os-locale-1.4.0.tgz",
          "integrity": "sha1-IPnxeuKe00XoveWDsT0gCYA8FNk=",
          "dev": true,
          "requires": {
            "lcid": "^1.0.0"
          }
        },
        "qs": {
          "version": "6.2.3",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.2.3.tgz",
          "integrity": "sha1-HPyyXBCpsrSDBT/zn138kjOQjP4=",
          "dev": true
        },
        "readdirp": {
          "version": "2.2.1",
          "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-2.2.1.tgz",
          "integrity": "sha512-1JU/8q+VgFZyxwrJ+SVIOsh+KywWGpds3NTqikiKpDMZWScmAYyKIgqkO+ARvNWJfXeXR1zxz7aHF4u4CyH6vQ==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.11",
            "micromatch": "^3.1.10",
            "readable-stream": "^2.0.2"
          }
        },
        "send": {
          "version": "0.16.2",
          "resolved": "https://registry.npmjs.org/send/-/send-0.16.2.tgz",
          "integrity": "sha512-E64YFPUssFHEFBvpbbjr44NCLtI1AohxQ8ZSiJjQLskAdKuriYEP6VyGEsRDH8ScozGpkaX1BGvhanqCwkcEZw==",
          "dev": true,
          "requires": {
            "debug": "2.6.9",
            "depd": "~1.1.2",
            "destroy": "~1.0.4",
            "encodeurl": "~1.0.2",
            "escape-html": "~1.0.3",
            "etag": "~1.8.1",
            "fresh": "0.5.2",
            "http-errors": "~1.6.2",
            "mime": "1.4.1",
            "ms": "2.0.0",
            "on-finished": "~2.3.0",
            "range-parser": "~1.2.0",
            "statuses": "~1.4.0"
          },
          "dependencies": {
            "statuses": {
              "version": "1.4.0",
              "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.4.0.tgz",
              "integrity": "sha512-zhSCtt8v2NDrRlPQpCNtw/heZLtfUDqxBM1udqikb/Hbk52LK4nQSwr10u77iopCW5LsyHpuXS0GnEc48mLeew==",
              "dev": true
            }
          }
        },
        "serve-static": {
          "version": "1.13.2",
          "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.13.2.tgz",
          "integrity": "sha512-p/tdJrO4U387R9oMjb1oj7qSMaMfmOyd4j9hOFoxZe2baQszgHcSWjuya/CiT5kgZZKRudHNOA0pYXOl8rQ5nw==",
          "dev": true,
          "requires": {
            "encodeurl": "~1.0.2",
            "escape-html": "~1.0.3",
            "parseurl": "~1.3.2",
            "send": "0.16.2"
          }
        },
        "setprototypeof": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.0.tgz",
          "integrity": "sha512-BvE/TwpZX4FXExxOxZyRGQQv651MSwmWKZGqvmPcRIjDqWub67kTKuIMx43cZZrS/cBBzwBcNDWoFxt2XEFIpQ==",
          "dev": true
        },
        "statuses": {
          "version": "1.3.1",
          "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.3.1.tgz",
          "integrity": "sha1-+vUbnrdKrvOzrPStX2Gr8ky3uT4=",
          "dev": true
        },
        "string-width": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
          "integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",
          "dev": true,
          "requires": {
            "code-point-at": "^1.0.0",
            "is-fullwidth-code-point": "^1.0.0",
            "strip-ansi": "^3.0.0"
          }
        },
        "to-regex-range": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz",
          "integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",
          "dev": true,
          "requires": {
            "is-number": "^3.0.0",
            "repeat-string": "^1.6.1"
          }
        },
        "which-module": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/which-module/-/which-module-1.0.0.tgz",
          "integrity": "sha1-u6Y8qGGUiZT/MHc2CJ47lgJsKk8=",
          "dev": true
        },
        "y18n": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/y18n/-/y18n-3.2.1.tgz",
          "integrity": "sha1-bRX7qITAhnnA136I53WegR4H+kE=",
          "dev": true
        },
        "yargs": {
          "version": "6.4.0",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-6.4.0.tgz",
          "integrity": "sha1-gW4ahm1VmMzzTlWW3c4i2S2kkNQ=",
          "dev": true,
          "requires": {
            "camelcase": "^3.0.0",
            "cliui": "^3.2.0",
            "decamelize": "^1.1.1",
            "get-caller-file": "^1.0.1",
            "os-locale": "^1.4.0",
            "read-pkg-up": "^1.0.1",
            "require-directory": "^2.1.1",
            "require-main-filename": "^1.0.1",
            "set-blocking": "^2.0.0",
            "string-width": "^1.0.2",
            "which-module": "^1.0.0",
            "window-size": "^0.2.0",
            "y18n": "^3.2.1",
            "yargs-parser": "^4.1.0"
          }
        },
        "yargs-parser": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-4.2.1.tgz",
          "integrity": "sha1-KczqwNxPA8bIe0qfIX3RjJ90hxw=",
          "dev": true,
          "requires": {
            "camelcase": "^3.0.0"
          }
        }
      }
    },
    "browser-sync-client": {
      "version": "2.26.6",
      "resolved": "https://registry.npmjs.org/browser-sync-client/-/browser-sync-client-2.26.6.tgz",
      "integrity": "sha512-mGrkZdNzttKdf/16I+y+2dTQxoMCIpKbVIMJ/uP8ZpnKu9f9qa/2CYVtLtbjZG8nsM14EwiCrjuFTGBEnT3Gjw==",
      "dev": true,
      "requires": {
        "etag": "1.8.1",
        "fresh": "0.5.2",
        "mitt": "^1.1.3",
        "rxjs": "^5.5.6"
      },
      "dependencies": {
        "rxjs": {
          "version": "5.5.12",
          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-5.5.12.tgz",
          "integrity": "sha512-xx2itnL5sBbqeeiVgNPVuQQ1nC8Jp2WfNJhXWHmElW9YmrpS9UVnNzhP3EH3HFqexO5Tlp8GhYY+WEcqcVMvGw==",
          "dev": true,
          "requires": {
            "symbol-observable": "1.0.1"
          }
        },
        "symbol-observable": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/symbol-observable/-/symbol-observable-1.0.1.tgz",
          "integrity": "sha1-g0D8RwLDEi310iKI+IKD9RPT/dQ=",
          "dev": true
        }
      }
    },
    "browser-sync-ui": {
      "version": "2.26.4",
      "resolved": "https://registry.npmjs.org/browser-sync-ui/-/browser-sync-ui-2.26.4.tgz",
      "integrity": "sha512-u20P3EsZoM8Pt+puoi3BU3KlbQAH1lAcV+/O4saF26qokrBqIDotmGonfWwoRbUmdxZkM9MBmA0K39ZTG1h4sA==",
      "dev": true,
      "requires": {
        "async-each-series": "0.1.1",
        "connect-history-api-fallback": "^1",
        "immutable": "^3",
        "server-destroy": "1.0.1",
        "socket.io-client": "^2.0.4",
        "stream-throttle": "^0.1.3"
      }
    },
    "browserify-aes": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/browserify-aes/-/browserify-aes-1.2.0.tgz",
      "integrity": "sha512-+7CHXqGuspUn/Sl5aO7Ea0xWGAtETPXNSAjHo48JfLdPWcMng33Xe4znFvQweqc/uzk5zSOI3H52CYnjCfb5hA==",
      "requires": {
        "buffer-xor": "^1.0.3",
        "cipher-base": "^1.0.0",
        "create-hash": "^1.1.0",
        "evp_bytestokey": "^1.0.3",
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "browserify-cipher": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/browserify-cipher/-/browserify-cipher-1.0.1.tgz",
      "integrity": "sha512-sPhkz0ARKbf4rRQt2hTpAHqn47X3llLkUGn+xEJzLjwY8LRs2p0v7ljvI5EyoRO/mexrNunNECisZs+gw2zz1w==",
      "requires": {
        "browserify-aes": "^1.0.4",
        "browserify-des": "^1.0.0",
        "evp_bytestokey": "^1.0.0"
      }
    },
    "browserify-des": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/browserify-des/-/browserify-des-1.0.2.tgz",
      "integrity": "sha512-BioO1xf3hFwz4kc6iBhI3ieDFompMhrMlnDFC4/0/vd5MokpuAc3R+LYbwTA9A5Yc9pq9UYPqffKpW2ObuwX5A==",
      "requires": {
        "cipher-base": "^1.0.1",
        "des.js": "^1.0.0",
        "inherits": "^2.0.1",
        "safe-buffer": "^5.1.2"
      }
    },
    "browserify-rsa": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/browserify-rsa/-/browserify-rsa-4.0.1.tgz",
      "integrity": "sha1-IeCr+vbyApzy+vsTNWenAdQTVSQ=",
      "requires": {
        "bn.js": "^4.1.0",
        "randombytes": "^2.0.1"
      }
    },
    "browserify-sign": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/browserify-sign/-/browserify-sign-4.0.4.tgz",
      "integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",
      "requires": {
        "bn.js": "^4.1.1",
        "browserify-rsa": "^4.0.0",
        "create-hash": "^1.1.0",
        "create-hmac": "^1.1.2",
        "elliptic": "^6.0.0",
        "inherits": "^2.0.1",
        "parse-asn1": "^5.0.0"
      }
    },
    "browserify-zlib": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/browserify-zlib/-/browserify-zlib-0.2.0.tgz",
      "integrity": "sha512-Z942RysHXmJrhqk88FmKBVq/v5tqmSkDz7p54G/MGyjMnCFFnC79XWNbg+Vta8W6Wb2qtSZTSxIGkJrRpCFEiA==",
      "dev": true,
      "requires": {
        "pako": "~1.0.5"
      }
    },
    "browserslist": {
      "version": "4.11.0",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.11.0.tgz",
      "integrity": "sha512-WqEC7Yr5wUH5sg6ruR++v2SGOQYpyUdYYd4tZoAq1F7y+QXoLoYGXVbxhtaIqWmAJjtNTRjVD3HuJc1OXTel2A==",
      "dev": true,
      "requires": {
        "caniuse-lite": "^1.0.30001035",
        "electron-to-chromium": "^1.3.380",
        "node-releases": "^1.1.52",
        "pkg-up": "^3.1.0"
      }
    },
    "browserstack": {
      "version": "1.5.3",
      "resolved": "https://registry.npmjs.org/browserstack/-/browserstack-1.5.3.tgz",
      "integrity": "sha512-AO+mECXsW4QcqC9bxwM29O7qWa7bJT94uBFzeb5brylIQwawuEziwq20dPYbins95GlWzOawgyDNdjYAo32EKg==",
      "dev": true,
      "requires": {
        "https-proxy-agent": "^2.2.1"
      }
    },
    "bs-recipes": {
      "version": "1.3.4",
      "resolved": "https://registry.npmjs.org/bs-recipes/-/bs-recipes-1.3.4.tgz",
      "integrity": "sha1-DS1NSKcYyMBEdp/cT4lZLci2lYU=",
      "dev": true
    },
    "bs-snippet-injector": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/bs-snippet-injector/-/bs-snippet-injector-2.0.1.tgz",
      "integrity": "sha1-YbU5PxH1JVntEgaTEANDtu2wTdU=",
      "dev": true
    },
    "bs58": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/bs58/-/bs58-4.0.1.tgz",
      "integrity": "sha1-vhYedsNU9veIrkBx9j806MTwpCo=",
      "requires": {
        "base-x": "^3.0.2"
      }
    },
    "buffer": {
      "version": "4.9.2",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-4.9.2.tgz",
      "integrity": "sha512-xq+q3SRMOxGivLhBNaUdC64hDTQwejJ+H0T/NB1XMtTVEwNTrfFF3gAxiyW0Bu/xWEGhjVKgUcMhCrUy2+uCWg==",
      "dev": true,
      "requires": {
        "base64-js": "^1.0.2",
        "ieee754": "^1.1.4",
        "isarray": "^1.0.0"
      }
    },
    "buffer-alloc": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/buffer-alloc/-/buffer-alloc-1.2.0.tgz",
      "integrity": "sha512-CFsHQgjtW1UChdXgbyJGtnm+O/uLQeZdtbDo8mfUgYXCHSM1wgrVxXm6bSyrUuErEb+4sYVGCzASBRot7zyrow==",
      "requires": {
        "buffer-alloc-unsafe": "^1.1.0",
        "buffer-fill": "^1.0.0"
      }
    },
    "buffer-alloc-unsafe": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/buffer-alloc-unsafe/-/buffer-alloc-unsafe-1.1.0.tgz",
      "integrity": "sha512-TEM2iMIEQdJ2yjPJoSIsldnleVaAk1oW3DBVUykyOLsEsFmEc9kn+SFFPz+gl54KQNxlDnAwCXosOS9Okx2xAg=="
    },
    "buffer-crc32": {
      "version": "0.2.13",
      "resolved": "https://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.13.tgz",
      "integrity": "sha1-DTM+PwDqxQqhRUq9MO+MKl2ackI="
    },
    "buffer-fill": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/buffer-fill/-/buffer-fill-1.0.0.tgz",
      "integrity": "sha1-+PeLdniYiO858gXNY39o5wISKyw="
    },
    "buffer-from": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.1.tgz",
      "integrity": "sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO/k9V3hjVUF/zwW7KBVdSK4gIt/bzwS9MbR5qob+F5jusZsb0YQK2A==",
      "dev": true
    },
    "buffer-indexof": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/buffer-indexof/-/buffer-indexof-1.1.1.tgz",
      "integrity": "sha512-4/rOEg86jivtPTeOUUT61jJO1Ya1TrR/OkqCSZDyq84WJh3LuuiphBYJN+fm5xufIk4XAFcEwte/8WzC8If/1g==",
      "dev": true
    },
    "buffer-to-arraybuffer": {
      "version": "0.0.5",
      "resolved": "https://registry.npmjs.org/buffer-to-arraybuffer/-/buffer-to-arraybuffer-0.0.5.tgz",
      "integrity": "sha1-YGSkD6dutDxyOrqe+PbhIW0QURo="
    },
    "buffer-xor": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/buffer-xor/-/buffer-xor-1.0.3.tgz",
      "integrity": "sha1-JuYe0UIvtw3ULm42cp7VHYVf6Nk="
    },
    "builtin-modules": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/builtin-modules/-/builtin-modules-1.1.1.tgz",
      "integrity": "sha1-Jw8HbFpywC9bZaR9+Uxf46J4iS8=",
      "dev": true
    },
    "builtin-status-codes": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/builtin-status-codes/-/builtin-status-codes-3.0.0.tgz",
      "integrity": "sha1-hZgoeOIbmOHGZCXgPQF0eI9Wnug=",
      "dev": true
    },
    "builtins": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/builtins/-/builtins-1.0.3.tgz",
      "integrity": "sha1-y5T662HIaWRR2zZTThQi+U8K7og=",
      "dev": true
    },
    "bytebuffer": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/bytebuffer/-/bytebuffer-5.0.1.tgz",
      "integrity": "sha1-WC7qSxqHO20CCkjVjfhfC7ps/d0=",
      "requires": {
        "long": "~3"
      },
      "dependencies": {
        "long": {
          "version": "3.2.0",
          "resolved": "https://registry.npmjs.org/long/-/long-3.2.0.tgz",
          "integrity": "sha1-2CG3E4yhy1gcFymQ7xTbIAtcR0s="
        }
      }
    },
    "bytes": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.0.0.tgz",
      "integrity": "sha1-0ygVQE1olpn4Wk6k+odV3ROpYEg=",
      "dev": true
    },
    "cacache": {
      "version": "13.0.1",
      "resolved": "https://registry.npmjs.org/cacache/-/cacache-13.0.1.tgz",
      "integrity": "sha512-5ZvAxd05HDDU+y9BVvcqYu2LLXmPnQ0hW62h32g4xBTgL/MppR4/04NHfj/ycM2y6lmTnbw6HVi+1eN0Psba6w==",
      "dev": true,
      "requires": {
        "chownr": "^1.1.2",
        "figgy-pudding": "^3.5.1",
        "fs-minipass": "^2.0.0",
        "glob": "^7.1.4",
        "graceful-fs": "^4.2.2",
        "infer-owner": "^1.0.4",
        "lru-cache": "^5.1.1",
        "minipass": "^3.0.0",
        "minipass-collect": "^1.0.2",
        "minipass-flush": "^1.0.5",
        "minipass-pipeline": "^1.2.2",
        "mkdirp": "^0.5.1",
        "move-concurrently": "^1.0.1",
        "p-map": "^3.0.0",
        "promise-inflight": "^1.0.1",
        "rimraf": "^2.7.1",
        "ssri": "^7.0.0",
        "unique-filename": "^1.1.1"
      },
      "dependencies": {
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        }
      }
    },
    "cache-base": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/cache-base/-/cache-base-1.0.1.tgz",
      "integrity": "sha512-AKcdTnFSWATd5/GCPRxr2ChwIJ85CeyrEyjRHlKxQ56d4XJMGym0uAiKn0xbLOGOl3+yRpOTi484dVCEc5AUzQ==",
      "dev": true,
      "requires": {
        "collection-visit": "^1.0.0",
        "component-emitter": "^1.2.1",
        "get-value": "^2.0.6",
        "has-value": "^1.0.0",
        "isobject": "^3.0.1",
        "set-value": "^2.0.0",
        "to-object-path": "^0.3.0",
        "union-value": "^1.0.0",
        "unset-value": "^1.0.0"
      }
    },
    "cacheable-request": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/cacheable-request/-/cacheable-request-6.1.0.tgz",
      "integrity": "sha512-Oj3cAGPCqOZX7Rz64Uny2GYAZNliQSqfbePrgAQ1wKAihYmCUnraBtJtKcGR4xz7wF+LoJC+ssFZvv5BgF9Igg==",
      "requires": {
        "clone-response": "^1.0.2",
        "get-stream": "^5.1.0",
        "http-cache-semantics": "^4.0.0",
        "keyv": "^3.0.0",
        "lowercase-keys": "^2.0.0",
        "normalize-url": "^4.1.0",
        "responselike": "^1.0.2"
      },
      "dependencies": {
        "get-stream": {
          "version": "5.1.0",
          "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-5.1.0.tgz",
          "integrity": "sha512-EXr1FOzrzTfGeL0gQdeFEvOMm2mzMOglyiOXSTpPC+iAjAKftbr3jpCMWynogwYnM+eSj9sHGc6wjIcDvYiygw==",
          "requires": {
            "pump": "^3.0.0"
          }
        },
        "http-cache-semantics": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.1.0.tgz",
          "integrity": "sha512-carPklcUh7ROWRK7Cv27RPtdhYhUsela/ue5/jKzjegVvXDqM2ILE9Q2BGn9JZJh1g87cp56su/FgQSzcWS8cQ=="
        },
        "lowercase-keys": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz",
          "integrity": "sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA=="
        },
        "normalize-url": {
          "version": "4.5.0",
          "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-4.5.0.tgz",
          "integrity": "sha512-2s47yzUxdexf1OhyRi4Em83iQk0aPvwTddtFz4hnSSw9dCEsLEGf6SwIO8ss/19S9iBb5sJaOuTvTGDeZI00BQ=="
        }
      }
    },
    "caller-callsite": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/caller-callsite/-/caller-callsite-2.0.0.tgz",
      "integrity": "sha1-hH4PzgoiN1CpoCfFSzNzGtMVQTQ=",
      "dev": true,
      "requires": {
        "callsites": "^2.0.0"
      }
    },
    "caller-path": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/caller-path/-/caller-path-2.0.0.tgz",
      "integrity": "sha1-Ro+DBE42mrIBD6xfBs7uFbsssfQ=",
      "dev": true,
      "requires": {
        "caller-callsite": "^2.0.0"
      }
    },
    "callsite": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/callsite/-/callsite-1.0.0.tgz",
      "integrity": "sha1-KAOY5dZkvXQDi28JBRU+borxvCA=",
      "dev": true
    },
    "callsites": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-2.0.0.tgz",
      "integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA=",
      "dev": true
    },
    "camelcase": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",
      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
      "dev": true
    },
    "caniuse-api": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/caniuse-api/-/caniuse-api-3.0.0.tgz",
      "integrity": "sha512-bsTwuIg/BZZK/vreVTYYbSWoe2F+71P7K5QGEX+pT250DZbfU1MQ5prOKpPR+LL6uWKK3KMwMCAS74QB3Um1uw==",
      "dev": true,
      "requires": {
        "browserslist": "^4.0.0",
        "caniuse-lite": "^1.0.0",
        "lodash.memoize": "^4.1.2",
        "lodash.uniq": "^4.5.0"
      }
    },
    "caniuse-lite": {
      "version": "1.0.30001038",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001038.tgz",
      "integrity": "sha512-zii9quPo96XfOiRD4TrfYGs+QsGZpb2cGiMAzPjtf/hpFgB6zCPZgJb7I1+EATeMw/o+lG8FyRAnI+CWStHcaQ==",
      "dev": true
    },
    "canonical-path": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/canonical-path/-/canonical-path-1.0.0.tgz",
      "integrity": "sha512-feylzsbDxi1gPZ1IjystzIQZagYYLvfKrSuygUCgf7z6x790VEzze5QEkdSV1U58RA7Hi0+v6fv4K54atOzATg==",
      "dev": true
    },
    "capability": {
      "version": "0.2.5",
      "resolved": "https://registry.npmjs.org/capability/-/capability-0.2.5.tgz",
      "integrity": "sha1-Ua2HNT8ZNv/Xfy8hx0YzpN6oiAE="
    },
    "caseless": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
      "integrity": "sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw="
    },
    "chai": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/chai/-/chai-4.2.0.tgz",
      "integrity": "sha512-XQU3bhBukrOsQCuwZndwGcCVQHyZi53fQ6Ys1Fym7E4olpIqqZZhhoFJoaKVvV17lWQoXYwgWN2nF5crA8J2jw==",
      "requires": {
        "assertion-error": "^1.1.0",
        "check-error": "^1.0.2",
        "deep-eql": "^3.0.1",
        "get-func-name": "^2.0.0",
        "pathval": "^1.1.0",
        "type-detect": "^4.0.5"
      }
    },
    "chai-as-promised": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/chai-as-promised/-/chai-as-promised-7.1.1.tgz",
      "integrity": "sha512-azL6xMoi+uxu6z4rhWQ1jbdUhOMhis2PvscD/xjLqNMkv3BPPp2JyyuTHOrf9BOosGpNQ11v6BKv/g57RXbiaA==",
      "requires": {
        "check-error": "^1.0.2"
      }
    },
    "chalk": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
      "dev": true,
      "requires": {
        "ansi-styles": "^3.2.1",
        "escape-string-regexp": "^1.0.5",
        "supports-color": "^5.3.0"
      }
    },
    "chardet": {
      "version": "0.7.0",
      "resolved": "https://registry.npmjs.org/chardet/-/chardet-0.7.0.tgz",
      "integrity": "sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA==",
      "dev": true
    },
    "check-error": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/check-error/-/check-error-1.0.2.tgz",
      "integrity": "sha1-V00xLt2Iu13YkS6Sht1sCu1KrII="
    },
    "chokidar": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.3.1.tgz",
      "integrity": "sha512-4QYCEWOcK3OJrxwvyyAOxFuhpvOVCYkr33LPfFNBjAD/w3sEzWsp2BUOkI4l9bHvWioAd0rc6NlHUOEaWkTeqg==",
      "dev": true,
      "requires": {
        "anymatch": "~3.1.1",
        "braces": "~3.0.2",
        "fsevents": "~2.1.2",
        "glob-parent": "~5.1.0",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.3.0"
      },
      "dependencies": {
        "glob-parent": {
          "version": "5.1.0",
          "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.0.tgz",
          "integrity": "sha512-qjtRgnIVmOfnKUE3NJAQEdk+lKrxfw8t5ke7SXtfMTHcjsBfOfWXCQfdb30zfDoZQ2IRSIiidmjtbHZPZ++Ihw==",
          "dev": true,
          "requires": {
            "is-glob": "^4.0.1"
          }
        }
      }
    },
    "chownr": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
      "integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg=="
    },
    "chrome-trace-event": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/chrome-trace-event/-/chrome-trace-event-1.0.2.tgz",
      "integrity": "sha512-9e/zx1jw7B4CO+c/RXoCsfg/x1AfUBioy4owYH0bJprEYAx5hRFLRhWBqHAG57D0ZM4H7vxbP7bPe0VwhQRYDQ==",
      "dev": true,
      "requires": {
        "tslib": "^1.9.0"
      }
    },
    "cipher-base": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/cipher-base/-/cipher-base-1.0.4.tgz",
      "integrity": "sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==",
      "requires": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "circular-dependency-plugin": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/circular-dependency-plugin/-/circular-dependency-plugin-5.2.0.tgz",
      "integrity": "sha512-7p4Kn/gffhQaavNfyDFg7LS5S/UT1JAjyGd4UqR2+jzoYF02eDkj0Ec3+48TsIa4zghjLY87nQHIh/ecK9qLdw==",
      "dev": true
    },
    "class-utils": {
      "version": "0.3.6",
      "resolved": "https://registry.npmjs.org/class-utils/-/class-utils-0.3.6.tgz",
      "integrity": "sha512-qOhPa/Fj7s6TY8H8esGu5QNpMMQxz79h+urzrNYN6mn+9BnxlDGf5QZ+XeCDsxSjPqsSR56XOZOJmpeurnLMeg==",
      "dev": true,
      "requires": {
        "arr-union": "^3.1.0",
        "define-property": "^0.2.5",
        "isobject": "^3.0.0",
        "static-extend": "^0.1.1"
      },
      "dependencies": {
        "define-property": {
          "version": "0.2.5",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^0.1.0"
          }
        }
      }
    },
    "clean-stack": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/clean-stack/-/clean-stack-2.2.0.tgz",
      "integrity": "sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A==",
      "dev": true
    },
    "cli-cursor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-3.1.0.tgz",
      "integrity": "sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==",
      "dev": true,
      "requires": {
        "restore-cursor": "^3.1.0"
      }
    },
    "cli-spinners": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/cli-spinners/-/cli-spinners-2.2.0.tgz",
      "integrity": "sha512-tgU3fKwzYjiLEQgPMD9Jt+JjHVL9kW93FiIMX/l7rivvOD4/LL0Mf7gda3+4U2KJBloybwgj5KEoQgGRioMiKQ==",
      "dev": true
    },
    "cli-width": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/cli-width/-/cli-width-2.2.0.tgz",
      "integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk=",
      "dev": true
    },
    "cliui": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/cliui/-/cliui-4.1.0.tgz",
      "integrity": "sha512-4FG+RSG9DL7uEwRUZXZn3SS34DiDPfzP0VOiEwtUWlE+AR2EIg+hSyvrIgUUfhdgR/UkAeW2QHgeP+hWrXs7jQ==",
      "dev": true,
      "requires": {
        "string-width": "^2.1.1",
        "strip-ansi": "^4.0.0",
        "wrap-ansi": "^2.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
          "dev": true
        },
        "strip-ansi": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
          "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
          "dev": true,
          "requires": {
            "ansi-regex": "^3.0.0"
          }
        }
      }
    },
    "clone": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
      "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18=",
      "dev": true
    },
    "clone-deep": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/clone-deep/-/clone-deep-4.0.1.tgz",
      "integrity": "sha512-neHB9xuzh/wk0dIHweyAXv2aPGZIVk3pLMe+/RNzINf17fe0OG96QroktYAUm7SM1PBnzTabaLboqqxDyMU+SQ==",
      "dev": true,
      "requires": {
        "is-plain-object": "^2.0.4",
        "kind-of": "^6.0.2",
        "shallow-clone": "^3.0.0"
      }
    },
    "clone-response": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/clone-response/-/clone-response-1.0.2.tgz",
      "integrity": "sha1-0dyXOSAxTfZ/vrlCI7TuNQI56Ws=",
      "requires": {
        "mimic-response": "^1.0.0"
      }
    },
    "coa": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/coa/-/coa-2.0.2.tgz",
      "integrity": "sha512-q5/jG+YQnSy4nRTV4F7lPepBJZ8qBNJJDBuJdoejDyLXgmL7IEo+Le2JDZudFTFt7mrCqIRaSjws4ygRCTCAXA==",
      "dev": true,
      "requires": {
        "@types/q": "^1.5.1",
        "chalk": "^2.4.1",
        "q": "^1.1.2"
      }
    },
    "code-point-at": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",
      "integrity": "sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c="
    },
    "codelyzer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/codelyzer/-/codelyzer-5.2.1.tgz",
      "integrity": "sha512-awBZXFcJUyC5HMYXiHzjr3D24tww2l1D1OqtfA9vUhEtYr32a65A+Gblm/OvsO+HuKLYzn8EDMw1inSM3VbxWA==",
      "dev": true,
      "requires": {
        "app-root-path": "^2.2.1",
        "aria-query": "^3.0.0",
        "axobject-query": "2.0.2",
        "css-selector-tokenizer": "^0.7.1",
        "cssauron": "^1.4.0",
        "damerau-levenshtein": "^1.0.4",
        "semver-dsl": "^1.0.1",
        "source-map": "^0.5.7",
        "sprintf-js": "^1.1.2"
      },
      "dependencies": {
        "source-map": {
          "version": "0.5.7",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
          "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",
          "dev": true
        },
        "sprintf-js": {
          "version": "1.1.2",
          "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.1.2.tgz",
          "integrity": "sha512-VE0SOVEHCk7Qc8ulkWw3ntAzXuqf7S2lvwQaDLRnUeIEaKNQJzV6BwmLKhOqT61aGhfUMrXeaBk+oDGCzvhcug==",
          "dev": true
        }
      }
    },
    "collection-visit": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/collection-visit/-/collection-visit-1.0.0.tgz",
      "integrity": "sha1-S8A3PBZLwykbTTaMgpzxqApZ3KA=",
      "dev": true,
      "requires": {
        "map-visit": "^1.0.0",
        "object-visit": "^1.0.0"
      }
    },
    "color": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/color/-/color-3.1.2.tgz",
      "integrity": "sha512-vXTJhHebByxZn3lDvDJYw4lR5+uB3vuoHsuYA5AKuxRVn5wzzIfQKGLBmgdVRHKTJYeK5rvJcHnrd0Li49CFpg==",
      "dev": true,
      "requires": {
        "color-convert": "^1.9.1",
        "color-string": "^1.5.2"
      }
    },
    "color-convert": {
      "version": "1.9.3",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
      "dev": true,
      "requires": {
        "color-name": "1.1.3"
      }
    },
    "color-name": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
      "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",
      "dev": true
    },
    "color-string": {
      "version": "1.5.3",
      "resolved": "https://registry.npmjs.org/color-string/-/color-string-1.5.3.tgz",
      "integrity": "sha512-dC2C5qeWoYkxki5UAXapdjqO672AM4vZuPGRQfO8b5HKuKGBbKWpITyDYN7TOFKvRW7kOgAn3746clDBMDJyQw==",
      "dev": true,
      "requires": {
        "color-name": "^1.0.0",
        "simple-swizzle": "^0.2.2"
      }
    },
    "colors": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/colors/-/colors-1.1.2.tgz",
      "integrity": "sha1-FopHAXVran9RoSzgyXv6KMCE7WM=",
      "dev": true
    },
    "colour": {
      "version": "0.7.1",
      "resolved": "https://registry.npmjs.org/colour/-/colour-0.7.1.tgz",
      "integrity": "sha1-nLFpkX7F0SwHNtPoaFdG3xyt93g="
    },
    "combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "requires": {
        "delayed-stream": "~1.0.0"
      }
    },
    "commander": {
      "version": "2.20.3",
      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
      "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
      "dev": true
    },
    "commondir": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz",
      "integrity": "sha1-3dgA2gxmEnOTzKWVDqloo6rxJTs=",
      "dev": true
    },
    "compare-versions": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/compare-versions/-/compare-versions-3.6.0.tgz",
      "integrity": "sha512-W6Af2Iw1z4CB7q4uU4hv646dW9GQuBM+YpC0UvUCWSD8w90SJjp+ujJuXaEMtAXBtSqGfMPuFOVn4/+FlaqfBA==",
      "dev": true
    },
    "component-bind": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/component-bind/-/component-bind-1.0.0.tgz",
      "integrity": "sha1-AMYIq33Nk4l8AAllGx06jh5zu9E=",
      "dev": true
    },
    "component-emitter": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/component-emitter/-/component-emitter-1.3.0.tgz",
      "integrity": "sha512-Rd3se6QB+sO1TwqZjscQrurpEPIfO0/yYnSin6Q/rD3mOutHvUrCAhJub3r90uNb+SESBuE0QYoB90YdfatsRg==",
      "dev": true
    },
    "component-inherit": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/component-inherit/-/component-inherit-0.0.3.tgz",
      "integrity": "sha1-ZF/ErfWLcrZJ1crmUTVhnbJv8UM=",
      "dev": true
    },
    "compressible": {
      "version": "2.0.18",
      "resolved": "https://registry.npmjs.org/compressible/-/compressible-2.0.18.tgz",
      "integrity": "sha512-AF3r7P5dWxL8MxyITRMlORQNaOA2IkAFaTr4k7BUumjPtRpGDTZpl0Pb1XCO6JeDCBdp126Cgs9sMxqSjgYyRg==",
      "dev": true,
      "requires": {
        "mime-db": ">= 1.43.0 < 2"
      }
    },
    "compression": {
      "version": "1.7.4",
      "resolved": "https://registry.npmjs.org/compression/-/compression-1.7.4.tgz",
      "integrity": "sha512-jaSIDzP9pZVS4ZfQ+TzvtiWhdpFhE2RDHz8QJkpX9SIpLq88VueF5jJw6t+6CUQcAoA6t+x89MLrWAqpfDE8iQ==",
      "dev": true,
      "requires": {
        "accepts": "~1.3.5",
        "bytes": "3.0.0",
        "compressible": "~2.0.16",
        "debug": "2.6.9",
        "on-headers": "~1.0.2",
        "safe-buffer": "5.1.2",
        "vary": "~1.1.2"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
          "dev": true
        }
      }
    },
    "concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=",
      "dev": true
    },
    "concat-stream": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.2.tgz",
      "integrity": "sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==",
      "dev": true,
      "requires": {
        "buffer-from": "^1.0.0",
        "inherits": "^2.0.3",
        "readable-stream": "^2.2.2",
        "typedarray": "^0.0.6"
      }
    },
    "connect": {
      "version": "3.7.0",
      "resolved": "https://registry.npmjs.org/connect/-/connect-3.7.0.tgz",
      "integrity": "sha512-ZqRXc+tZukToSNmh5C2iWMSoV3X1YUcPbqEM4DkEG5tNQXrQUZCNVGGv3IuicnkMtPfGf3Xtp8WCXs295iQ1pQ==",
      "dev": true,
      "requires": {
        "debug": "2.6.9",
        "finalhandler": "1.1.2",
        "parseurl": "~1.3.3",
        "utils-merge": "1.0.1"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
          "dev": true
        }
      }
    },
    "connect-history-api-fallback": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/connect-history-api-fallback/-/connect-history-api-fallback-1.6.0.tgz",
      "integrity": "sha512-e54B99q/OUoH64zYYRf3HBP5z24G38h5D3qXu23JGRoigpX5Ss4r9ZnDk3g0Z8uQC2x2lPaJ+UlWBc1ZWBWdLg==",
      "dev": true
    },
    "connect-logger": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/connect-logger/-/connect-logger-0.0.1.tgz",
      "integrity": "sha1-TZmZeKHSC7RgjnzUNNdBZSJVF0s=",
      "dev": true,
      "requires": {
        "moment": "*"
      }
    },
    "console-browserify": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/console-browserify/-/console-browserify-1.2.0.tgz",
      "integrity": "sha512-ZMkYO/LkF17QvCPqM0gxw8yUzigAOZOSWSHg91FH6orS7vcEj5dVZTidN2fQ14yBSdg97RqhSNwLUXInd52OTA==",
      "dev": true
    },
    "constants-browserify": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/constants-browserify/-/constants-browserify-1.0.0.tgz",
      "integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U=",
      "dev": true
    },
    "content-disposition": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.3.tgz",
      "integrity": "sha512-ExO0774ikEObIAEV9kDo50o+79VCUdEB6n6lzKgGwupcVeRlhrj3qGAfwq8G6uBJjkqLrhT0qEYFcWng8z1z0g==",
      "requires": {
        "safe-buffer": "5.1.2"
      }
    },
    "content-type": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz",
      "integrity": "sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA=="
    },
    "convert-source-map": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.7.0.tgz",
      "integrity": "sha512-4FJkXzKXEDB1snCFZlLP4gpC3JILicCpGbzG9f9G7tGqGCzETQ2hWPrcinA9oU4wtf2biUaEH5065UnMeR33oA==",
      "dev": true,
      "requires": {
        "safe-buffer": "~5.1.1"
      }
    },
    "cookie": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.4.0.tgz",
      "integrity": "sha512-+Hp8fLp57wnUSt0tY0tHEXh4voZRDnoIrZPqlo3DPiI4y9lwg/jqx+1Om94/W6ZaPDOUbnjOt/99w66zk+l1Xg=="
    },
    "cookie-signature": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
      "integrity": "sha1-4wOogrNCzD7oylE6eZmXNNqzriw="
    },
    "cookiejar": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/cookiejar/-/cookiejar-2.1.2.tgz",
      "integrity": "sha512-Mw+adcfzPxcPeI+0WlvRrr/3lGVO0bD75SxX6811cxSh1Wbxx7xZBGK1eVtDf6si8rg2lhnUjsVLMFMfbRIuwA=="
    },
    "copy-concurrently": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/copy-concurrently/-/copy-concurrently-1.0.5.tgz",
      "integrity": "sha512-f2domd9fsVDFtaFcbaRZuYXwtdmnzqbADSwhSWYxYB/Q8zsdUUFMXVRwXGDMWmbEzAn1kdRrtI1T/KTFOL4X2A==",
      "dev": true,
      "requires": {
        "aproba": "^1.1.1",
        "fs-write-stream-atomic": "^1.0.8",
        "iferr": "^0.1.5",
        "mkdirp": "^0.5.1",
        "rimraf": "^2.5.4",
        "run-queue": "^1.0.0"
      },
      "dependencies": {
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        }
      }
    },
    "copy-descriptor": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/copy-descriptor/-/copy-descriptor-0.1.1.tgz",
      "integrity": "sha1-Z29us8OZl8LuGsOpJP1hJHSPV40=",
      "dev": true
    },
    "copy-webpack-plugin": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/copy-webpack-plugin/-/copy-webpack-plugin-5.1.1.tgz",
      "integrity": "sha512-P15M5ZC8dyCjQHWwd4Ia/dm0SgVvZJMYeykVIVYXbGyqO4dWB5oyPHp9i7wjwo5LhtlhKbiBCdS2NvM07Wlybg==",
      "dev": true,
      "requires": {
        "cacache": "^12.0.3",
        "find-cache-dir": "^2.1.0",
        "glob-parent": "^3.1.0",
        "globby": "^7.1.1",
        "is-glob": "^4.0.1",
        "loader-utils": "^1.2.3",
        "minimatch": "^3.0.4",
        "normalize-path": "^3.0.0",
        "p-limit": "^2.2.1",
        "schema-utils": "^1.0.0",
        "serialize-javascript": "^2.1.2",
        "webpack-log": "^2.0.0"
      },
      "dependencies": {
        "cacache": {
          "version": "12.0.4",
          "resolved": "https://registry.npmjs.org/cacache/-/cacache-12.0.4.tgz",
          "integrity": "sha512-a0tMB40oefvuInr4Cwb3GerbL9xTj1D5yg0T5xrjGCGyfvbxseIXX7BAO/u/hIXdafzOI5JC3wDwHyf24buOAQ==",
          "dev": true,
          "requires": {
            "bluebird": "^3.5.5",
            "chownr": "^1.1.1",
            "figgy-pudding": "^3.5.1",
            "glob": "^7.1.4",
            "graceful-fs": "^4.1.15",
            "infer-owner": "^1.0.3",
            "lru-cache": "^5.1.1",
            "mississippi": "^3.0.0",
            "mkdirp": "^0.5.1",
            "move-concurrently": "^1.0.1",
            "promise-inflight": "^1.0.1",
            "rimraf": "^2.6.3",
            "ssri": "^6.0.1",
            "unique-filename": "^1.1.1",
            "y18n": "^4.0.0"
          }
        },
        "find-cache-dir": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-2.1.0.tgz",
          "integrity": "sha512-Tq6PixE0w/VMFfCgbONnkiQIVol/JJL7nRMi20fqzA4NRs9AfeqMGeRdPi3wIhYkxjeBaWh2rxwapn5Tu3IqOQ==",
          "dev": true,
          "requires": {
            "commondir": "^1.0.1",
            "make-dir": "^2.0.0",
            "pkg-dir": "^3.0.0"
          }
        },
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        },
        "ssri": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/ssri/-/ssri-6.0.1.tgz",
          "integrity": "sha512-3Wge10hNcT1Kur4PDFwEieXSCMCJs/7WvSACcrMYrNp+b8kDL1/0wJch5Ni2WrtwEa2IO8OsVfeKIciKCDx/QA==",
          "dev": true,
          "requires": {
            "figgy-pudding": "^3.5.1"
          }
        }
      }
    },
    "core-js": {
      "version": "3.6.4",
      "resolved": "https://registry.npmjs.org/core-js/-/core-js-3.6.4.tgz",
      "integrity": "sha512-4paDGScNgZP2IXXilaffL9X7968RuvwlkK3xWtZRVqgd8SYNiVKRJvkFd1aqqEuPfN7E68ZHEp9hDj6lHj4Hyw=="
    },
    "core-js-compat": {
      "version": "3.6.4",
      "resolved": "https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.6.4.tgz",
      "integrity": "sha512-zAa3IZPvsJ0slViBQ2z+vgyyTuhd3MFn1rBQjZSKVEgB0UMYhUkCj9jJUVPgGTGqWvsBVmfnruXgTcNyTlEiSA==",
      "dev": true,
      "requires": {
        "browserslist": "^4.8.3",
        "semver": "7.0.0"
      },
      "dependencies": {
        "semver": {
          "version": "7.0.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-7.0.0.tgz",
          "integrity": "sha512-+GB6zVA9LWh6zovYQLALHwv5rb2PHGlJi3lfiqIHxR0uuwCgefcOJc59v9fv1w8GbStwxuuqqAjI9NMAOOgq1A==",
          "dev": true
        }
      }
    },
    "core-util-is": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
      "integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac="
    },
    "cors": {
      "version": "2.8.5",
      "resolved": "https://registry.npmjs.org/cors/-/cors-2.8.5.tgz",
      "integrity": "sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==",
      "requires": {
        "object-assign": "^4",
        "vary": "^1"
      }
    },
    "cosmiconfig": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-5.2.1.tgz",
      "integrity": "sha512-H65gsXo1SKjf8zmrJ67eJk8aIRKV5ff2D4uKZIBZShbhGSpEmsQOPW/SKMKYhSTrqR7ufy6RP69rPogdaPh/kA==",
      "dev": true,
      "requires": {
        "import-fresh": "^2.0.0",
        "is-directory": "^0.3.1",
        "js-yaml": "^3.13.1",
        "parse-json": "^4.0.0"
      }
    },
    "coverage-istanbul-loader": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/coverage-istanbul-loader/-/coverage-istanbul-loader-2.0.3.tgz",
      "integrity": "sha512-LiGRvyIuzVYs3M1ZYK1tF0HekjH0DJ8zFdUwAZq378EJzqOgToyb1690dp3TAUlP6Y+82uu42LRjuROVeJ54CA==",
      "dev": true,
      "requires": {
        "convert-source-map": "^1.7.0",
        "istanbul-lib-instrument": "^4.0.0",
        "loader-utils": "^1.2.3",
        "merge-source-map": "^1.1.0",
        "schema-utils": "^2.6.1"
      },
      "dependencies": {
        "ajv": {
          "version": "6.12.0",
          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.0.tgz",
          "integrity": "sha512-D6gFiFA0RRLyUbvijN74DWAjXSFxWKaWP7mldxkVhyhAV3+SWA9HEJPHQ2c9soIeTFJqcSdFDGFgdqs1iUU2Hw==",
          "dev": true,
          "requires": {
            "fast-deep-equal": "^3.1.1",
            "fast-json-stable-stringify": "^2.0.0",
            "json-schema-traverse": "^0.4.1",
            "uri-js": "^4.2.2"
          }
        },
        "fast-deep-equal": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.1.tgz",
          "integrity": "sha512-8UEa58QDLauDNfpbrX55Q9jrGHThw2ZMdOky5Gl1CDtVeJDPVrG4Jxx1N8jw2gkWaff5UUuX1KJd+9zGe2B+ZA==",
          "dev": true
        },
        "schema-utils": {
          "version": "2.6.5",
          "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-2.6.5.tgz",
          "integrity": "sha512-5KXuwKziQrTVHh8j/Uxz+QUbxkaLW9X/86NBlx/gnKgtsZA2GIVMUn17qWhRFwF8jdYb3Dig5hRO/W5mZqy6SQ==",
          "dev": true,
          "requires": {
            "ajv": "^6.12.0",
            "ajv-keywords": "^3.4.1"
          }
        }
      }
    },
    "create-ecdh": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/create-ecdh/-/create-ecdh-4.0.3.tgz",
      "integrity": "sha512-GbEHQPMOswGpKXM9kCWVrremUcBmjteUaQ01T9rkKCPDXfUHX0IoP9LpHYo2NPFampa4e+/pFDc3jQdxrxQLaw==",
      "requires": {
        "bn.js": "^4.1.0",
        "elliptic": "^6.0.0"
      }
    },
    "create-hash": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/create-hash/-/create-hash-1.2.0.tgz",
      "integrity": "sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==",
      "requires": {
        "cipher-base": "^1.0.1",
        "inherits": "^2.0.1",
        "md5.js": "^1.3.4",
        "ripemd160": "^2.0.1",
        "sha.js": "^2.4.0"
      }
    },
    "create-hmac": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/create-hmac/-/create-hmac-1.1.7.tgz",
      "integrity": "sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==",
      "requires": {
        "cipher-base": "^1.0.3",
        "create-hash": "^1.1.0",
        "inherits": "^2.0.1",
        "ripemd160": "^2.0.0",
        "safe-buffer": "^5.0.1",
        "sha.js": "^2.4.8"
      }
    },
    "cross-spawn": {
      "version": "6.0.5",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-6.0.5.tgz",
      "integrity": "sha512-eTVLrBSt7fjbDygz805pMnstIs2VTBNkRm0qxZd+M7A5XDdxVRWO5MxGBXZhjY4cqLYLdtrGqRf8mBPmzwSpWQ==",
      "dev": true,
      "requires": {
        "nice-try": "^1.0.4",
        "path-key": "^2.0.1",
        "semver": "^5.5.0",
        "shebang-command": "^1.2.0",
        "which": "^1.2.9"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "crypto-browserify": {
      "version": "3.12.0",
      "resolved": "https://registry.npmjs.org/crypto-browserify/-/crypto-browserify-3.12.0.tgz",
      "integrity": "sha512-fz4spIh+znjO2VjL+IdhEpRJ3YN6sMzITSBijk6FK2UvTqruSQW+/cCZTSNsMiZNvUeq0CqurF+dAbyiGOY6Wg==",
      "requires": {
        "browserify-cipher": "^1.0.0",
        "browserify-sign": "^4.0.0",
        "create-ecdh": "^4.0.0",
        "create-hash": "^1.1.0",
        "create-hmac": "^1.1.0",
        "diffie-hellman": "^5.0.0",
        "inherits": "^2.0.1",
        "pbkdf2": "^3.0.3",
        "public-encrypt": "^4.0.0",
        "randombytes": "^2.0.0",
        "randomfill": "^1.0.3"
      }
    },
    "crypto-js": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/crypto-js/-/crypto-js-4.0.0.tgz",
      "integrity": "sha512-bzHZN8Pn+gS7DQA6n+iUmBfl0hO5DJq++QP3U6uTucDtk/0iGpXd/Gg7CGR0p8tJhofJyaKoWBuJI4eAO00BBg=="
    },
    "css": {
      "version": "2.2.4",
      "resolved": "https://registry.npmjs.org/css/-/css-2.2.4.tgz",
      "integrity": "sha512-oUnjmWpy0niI3x/mPL8dVEI1l7MnG3+HHyRPHf+YFSbK+svOhXpmSOcDURUh2aOCgl2grzrOPt1nHLuCVFULLw==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.3",
        "source-map": "^0.6.1",
        "source-map-resolve": "^0.5.2",
        "urix": "^0.1.0"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "css-color-names": {
      "version": "0.0.4",
      "resolved": "https://registry.npmjs.org/css-color-names/-/css-color-names-0.0.4.tgz",
      "integrity": "sha1-gIrcLnnPhHOAabZGyyDsJ762KeA=",
      "dev": true
    },
    "css-declaration-sorter": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/css-declaration-sorter/-/css-declaration-sorter-4.0.1.tgz",
      "integrity": "sha512-BcxQSKTSEEQUftYpBVnsH4SF05NTuBokb19/sBt6asXGKZ/6VP7PLG1CBCkFDYOnhXhPh0jMhO6xZ71oYHXHBA==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.1",
        "timsort": "^0.3.0"
      }
    },
    "css-parse": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/css-parse/-/css-parse-2.0.0.tgz",
      "integrity": "sha1-pGjuZnwW2BzPBcWMONKpfHgNv9Q=",
      "dev": true,
      "requires": {
        "css": "^2.0.0"
      }
    },
    "css-select": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/css-select/-/css-select-2.1.0.tgz",
      "integrity": "sha512-Dqk7LQKpwLoH3VovzZnkzegqNSuAziQyNZUcrdDM401iY+R5NkGBXGmtO05/yaXQziALuPogeG0b7UAgjnTJTQ==",
      "dev": true,
      "requires": {
        "boolbase": "^1.0.0",
        "css-what": "^3.2.1",
        "domutils": "^1.7.0",
        "nth-check": "^1.0.2"
      }
    },
    "css-select-base-adapter": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/css-select-base-adapter/-/css-select-base-adapter-0.1.1.tgz",
      "integrity": "sha512-jQVeeRG70QI08vSTwf1jHxp74JoZsr2XSgETae8/xC8ovSnL2WF87GTLO86Sbwdt2lK4Umg4HnnwMO4YF3Ce7w==",
      "dev": true
    },
    "css-selector-tokenizer": {
      "version": "0.7.2",
      "resolved": "https://registry.npmjs.org/css-selector-tokenizer/-/css-selector-tokenizer-0.7.2.tgz",
      "integrity": "sha512-yj856NGuAymN6r8bn8/Jl46pR+OC3eEvAhfGYDUe7YPtTPAYrSSw4oAniZ9Y8T5B92hjhwTBLUen0/vKPxf6pw==",
      "dev": true,
      "requires": {
        "cssesc": "^3.0.0",
        "fastparse": "^1.1.2",
        "regexpu-core": "^4.6.0"
      }
    },
    "css-tree": {
      "version": "1.0.0-alpha.37",
      "resolved": "https://registry.npmjs.org/css-tree/-/css-tree-1.0.0-alpha.37.tgz",
      "integrity": "sha512-DMxWJg0rnz7UgxKT0Q1HU/L9BeJI0M6ksor0OgqOnF+aRCDWg/N2641HmVyU9KVIu0OVVWOb2IpC9A+BJRnejg==",
      "dev": true,
      "requires": {
        "mdn-data": "2.0.4",
        "source-map": "^0.6.1"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "css-what": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/css-what/-/css-what-3.2.1.tgz",
      "integrity": "sha512-WwOrosiQTvyms+Ti5ZC5vGEK0Vod3FTt1ca+payZqvKuGJF+dq7bG63DstxtN0dpm6FxY27a/zS3Wten+gEtGw==",
      "dev": true
    },
    "cssauron": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/cssauron/-/cssauron-1.4.0.tgz",
      "integrity": "sha1-pmAt/34EqDBtwNuaVR6S6LVmKtg=",
      "dev": true,
      "requires": {
        "through": "X.X.X"
      }
    },
    "cssesc": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
      "dev": true
    },
    "cssnano": {
      "version": "4.1.10",
      "resolved": "https://registry.npmjs.org/cssnano/-/cssnano-4.1.10.tgz",
      "integrity": "sha512-5wny+F6H4/8RgNlaqab4ktc3e0/blKutmq8yNlBFXA//nSFFAqAngjNVRzUvCgYROULmZZUoosL/KSoZo5aUaQ==",
      "dev": true,
      "requires": {
        "cosmiconfig": "^5.0.0",
        "cssnano-preset-default": "^4.0.7",
        "is-resolvable": "^1.0.0",
        "postcss": "^7.0.0"
      }
    },
    "cssnano-preset-default": {
      "version": "4.0.7",
      "resolved": "https://registry.npmjs.org/cssnano-preset-default/-/cssnano-preset-default-4.0.7.tgz",
      "integrity": "sha512-x0YHHx2h6p0fCl1zY9L9roD7rnlltugGu7zXSKQx6k2rYw0Hi3IqxcoAGF7u9Q5w1nt7vK0ulxV8Lo+EvllGsA==",
      "dev": true,
      "requires": {
        "css-declaration-sorter": "^4.0.1",
        "cssnano-util-raw-cache": "^4.0.1",
        "postcss": "^7.0.0",
        "postcss-calc": "^7.0.1",
        "postcss-colormin": "^4.0.3",
        "postcss-convert-values": "^4.0.1",
        "postcss-discard-comments": "^4.0.2",
        "postcss-discard-duplicates": "^4.0.2",
        "postcss-discard-empty": "^4.0.1",
        "postcss-discard-overridden": "^4.0.1",
        "postcss-merge-longhand": "^4.0.11",
        "postcss-merge-rules": "^4.0.3",
        "postcss-minify-font-values": "^4.0.2",
        "postcss-minify-gradients": "^4.0.2",
        "postcss-minify-params": "^4.0.2",
        "postcss-minify-selectors": "^4.0.2",
        "postcss-normalize-charset": "^4.0.1",
        "postcss-normalize-display-values": "^4.0.2",
        "postcss-normalize-positions": "^4.0.2",
        "postcss-normalize-repeat-style": "^4.0.2",
        "postcss-normalize-string": "^4.0.2",
        "postcss-normalize-timing-functions": "^4.0.2",
        "postcss-normalize-unicode": "^4.0.1",
        "postcss-normalize-url": "^4.0.1",
        "postcss-normalize-whitespace": "^4.0.2",
        "postcss-ordered-values": "^4.1.2",
        "postcss-reduce-initial": "^4.0.3",
        "postcss-reduce-transforms": "^4.0.2",
        "postcss-svgo": "^4.0.2",
        "postcss-unique-selectors": "^4.0.1"
      }
    },
    "cssnano-util-get-arguments": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/cssnano-util-get-arguments/-/cssnano-util-get-arguments-4.0.0.tgz",
      "integrity": "sha1-7ToIKZ8h11dBsg87gfGU7UnMFQ8=",
      "dev": true
    },
    "cssnano-util-get-match": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/cssnano-util-get-match/-/cssnano-util-get-match-4.0.0.tgz",
      "integrity": "sha1-wOTKB/U4a7F+xeUiULT1lhNlFW0=",
      "dev": true
    },
    "cssnano-util-raw-cache": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/cssnano-util-raw-cache/-/cssnano-util-raw-cache-4.0.1.tgz",
      "integrity": "sha512-qLuYtWK2b2Dy55I8ZX3ky1Z16WYsx544Q0UWViebptpwn/xDBmog2TLg4f+DBMg1rJ6JDWtn96WHbOKDWt1WQA==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.0"
      }
    },
    "cssnano-util-same-parent": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/cssnano-util-same-parent/-/cssnano-util-same-parent-4.0.1.tgz",
      "integrity": "sha512-WcKx5OY+KoSIAxBW6UBBRay1U6vkYheCdjyVNDm85zt5K9mHoGOfsOsqIszfAqrQQFIIKgjh2+FDgIj/zsl21Q==",
      "dev": true
    },
    "csso": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/csso/-/csso-4.0.3.tgz",
      "integrity": "sha512-NL3spysxUkcrOgnpsT4Xdl2aiEiBG6bXswAABQVHcMrfjjBisFOKwLDOmf4wf32aPdcJws1zds2B0Rg+jqMyHQ==",
      "dev": true,
      "requires": {
        "css-tree": "1.0.0-alpha.39"
      },
      "dependencies": {
        "css-tree": {
          "version": "1.0.0-alpha.39",
          "resolved": "https://registry.npmjs.org/css-tree/-/css-tree-1.0.0-alpha.39.tgz",
          "integrity": "sha512-7UvkEYgBAHRG9Nt980lYxjsTrCyHFN53ky3wVsDkiMdVqylqRt+Zc+jm5qw7/qyOvN2dHSYtX0e4MbCCExSvnA==",
          "dev": true,
          "requires": {
            "mdn-data": "2.0.6",
            "source-map": "^0.6.1"
          }
        },
        "mdn-data": {
          "version": "2.0.6",
          "resolved": "https://registry.npmjs.org/mdn-data/-/mdn-data-2.0.6.tgz",
          "integrity": "sha512-rQvjv71olwNHgiTbfPZFkJtjNMciWgswYeciZhtvWLO8bmX3TnhyA62I6sTWOyZssWHJJjY6/KiWwqQsWWsqOA==",
          "dev": true
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "custom-event": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/custom-event/-/custom-event-1.0.1.tgz",
      "integrity": "sha1-XQKkaFCt8bSjF5RqOSj8y1v9BCU=",
      "dev": true
    },
    "cyclist": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/cyclist/-/cyclist-1.0.1.tgz",
      "integrity": "sha1-WW6WmP0MgOEgOMK4LW6xs1tiJNk=",
      "dev": true
    },
    "d": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/d/-/d-1.0.1.tgz",
      "integrity": "sha512-m62ShEObQ39CfralilEQRjH6oAMtNCV1xJyEx5LpRYUVN+EviphDgUc/F3hnYbADmkiNs67Y+3ylmlG7Lnu+FA==",
      "requires": {
        "es5-ext": "^0.10.50",
        "type": "^1.0.1"
      }
    },
    "damerau-levenshtein": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/damerau-levenshtein/-/damerau-levenshtein-1.0.6.tgz",
      "integrity": "sha512-JVrozIeElnj3QzfUIt8tB8YMluBJom4Vw9qTPpjGYQ9fYlB3D/rb6OordUxf3xeFB35LKWs0xqcO5U6ySvBtug==",
      "dev": true
    },
    "dashdash": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
      "integrity": "sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=",
      "requires": {
        "assert-plus": "^1.0.0"
      }
    },
    "date-format": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/date-format/-/date-format-2.1.0.tgz",
      "integrity": "sha512-bYQuGLeFxhkxNOF3rcMtiZxvCBAquGzZm6oWA1oZ0g2THUzivaRhv8uOhdr19LmoobSOLoIAxeUK2RdbM8IFTA==",
      "dev": true
    },
    "debug": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
      "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
      "dev": true,
      "requires": {
        "ms": "^2.1.1"
      }
    },
    "debuglog": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/debuglog/-/debuglog-1.0.1.tgz",
      "integrity": "sha1-qiT/uaw9+aI1GDfPstJ5NgzXhJI=",
      "dev": true
    },
    "decamelize": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",
      "integrity": "sha1-9lNNFRSCabIDUue+4m9QH5oZEpA="
    },
    "decode-uri-component": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.0.tgz",
      "integrity": "sha1-6zkTMzRYd1y4TNGh+uBiEGu4dUU="
    },
    "decompress": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/decompress/-/decompress-4.2.0.tgz",
      "integrity": "sha1-eu3YVCflqS2s/lVnSnxQXpbQH50=",
      "requires": {
        "decompress-tar": "^4.0.0",
        "decompress-tarbz2": "^4.0.0",
        "decompress-targz": "^4.0.0",
        "decompress-unzip": "^4.0.1",
        "graceful-fs": "^4.1.10",
        "make-dir": "^1.0.0",
        "pify": "^2.3.0",
        "strip-dirs": "^2.0.0"
      },
      "dependencies": {
        "make-dir": {
          "version": "1.3.0",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-1.3.0.tgz",
          "integrity": "sha512-2w31R7SJtieJJnQtGc7RVL2StM2vGYVfqUOvUDxH6bC6aJTxPxTF0GnIgCyu7tjockiUWAYQRbxa7vKn34s5sQ==",
          "requires": {
            "pify": "^3.0.0"
          },
          "dependencies": {
            "pify": {
              "version": "3.0.0",
              "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
              "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="
            }
          }
        },
        "pify": {
          "version": "2.3.0",
          "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
          "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw="
        }
      }
    },
    "decompress-response": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-3.3.0.tgz",
      "integrity": "sha1-gKTdMjdIOEv6JICDYirt7Jgq3/M=",
      "requires": {
        "mimic-response": "^1.0.0"
      }
    },
    "decompress-tar": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/decompress-tar/-/decompress-tar-4.1.1.tgz",
      "integrity": "sha512-JdJMaCrGpB5fESVyxwpCx4Jdj2AagLmv3y58Qy4GE6HMVjWz1FeVQk1Ct4Kye7PftcdOo/7U7UKzYBJgqnGeUQ==",
      "requires": {
        "file-type": "^5.2.0",
        "is-stream": "^1.1.0",
        "tar-stream": "^1.5.2"
      }
    },
    "decompress-tarbz2": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/decompress-tarbz2/-/decompress-tarbz2-4.1.1.tgz",
      "integrity": "sha512-s88xLzf1r81ICXLAVQVzaN6ZmX4A6U4z2nMbOwobxkLoIIfjVMBg7TeguTUXkKeXni795B6y5rnvDw7rxhAq9A==",
      "requires": {
        "decompress-tar": "^4.1.0",
        "file-type": "^6.1.0",
        "is-stream": "^1.1.0",
        "seek-bzip": "^1.0.5",
        "unbzip2-stream": "^1.0.9"
      },
      "dependencies": {
        "file-type": {
          "version": "6.2.0",
          "resolved": "https://registry.npmjs.org/file-type/-/file-type-6.2.0.tgz",
          "integrity": "sha512-YPcTBDV+2Tm0VqjybVd32MHdlEGAtuxS3VAYsumFokDSMG+ROT5wawGlnHDoz7bfMcMDt9hxuXvXwoKUx2fkOg=="
        }
      }
    },
    "decompress-targz": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/decompress-targz/-/decompress-targz-4.1.1.tgz",
      "integrity": "sha512-4z81Znfr6chWnRDNfFNqLwPvm4db3WuZkqV+UgXQzSngG3CEKdBkw5jrv3axjjL96glyiiKjsxJG3X6WBZwX3w==",
      "requires": {
        "decompress-tar": "^4.1.1",
        "file-type": "^5.2.0",
        "is-stream": "^1.1.0"
      }
    },
    "decompress-unzip": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/decompress-unzip/-/decompress-unzip-4.0.1.tgz",
      "integrity": "sha1-3qrM39FK6vhVePczroIQ+bSEj2k=",
      "requires": {
        "file-type": "^3.8.0",
        "get-stream": "^2.2.0",
        "pify": "^2.3.0",
        "yauzl": "^2.4.2"
      },
      "dependencies": {
        "file-type": {
          "version": "3.9.0",
          "resolved": "https://registry.npmjs.org/file-type/-/file-type-3.9.0.tgz",
          "integrity": "sha1-JXoHg4TR24CHvESdEH1SpSZyuek="
        },
        "get-stream": {
          "version": "2.3.1",
          "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-2.3.1.tgz",
          "integrity": "sha1-Xzj5PzRgCWZu4BUKBUFn+Rvdld4=",
          "requires": {
            "object-assign": "^4.0.1",
            "pinkie-promise": "^2.0.0"
          }
        },
        "pify": {
          "version": "2.3.0",
          "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
          "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw="
        }
      }
    },
    "deep-eql": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/deep-eql/-/deep-eql-3.0.1.tgz",
      "integrity": "sha512-+QeIQyN5ZuO+3Uk5DYh6/1eKO0m0YmJFGNmFHGACpf1ClL1nmlV/p4gNgbl2pJGxgXb4faqo6UE+M5ACEMyVcw==",
      "requires": {
        "type-detect": "^4.0.0"
      }
    },
    "deep-equal": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/deep-equal/-/deep-equal-1.1.1.tgz",
      "integrity": "sha512-yd9c5AdiqVcR+JjcwUQb9DkhJc8ngNr0MahEBGvDiJw8puWab2yZlh+nkasOnZP+EGTAP6rRp2JzJhJZzvNF8g==",
      "dev": true,
      "requires": {
        "is-arguments": "^1.0.4",
        "is-date-object": "^1.0.1",
        "is-regex": "^1.0.4",
        "object-is": "^1.0.1",
        "object-keys": "^1.1.1",
        "regexp.prototype.flags": "^1.2.0"
      }
    },
    "default-gateway": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/default-gateway/-/default-gateway-4.2.0.tgz",
      "integrity": "sha512-h6sMrVB1VMWVrW13mSc6ia/DwYYw5MN6+exNu1OaJeFac5aSAvwM7lZ0NVfTABuSkQelr4h5oebg3KB1XPdjgA==",
      "dev": true,
      "requires": {
        "execa": "^1.0.0",
        "ip-regex": "^2.1.0"
      }
    },
    "default-require-extensions": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/default-require-extensions/-/default-require-extensions-2.0.0.tgz",
      "integrity": "sha1-9fj7sYp9bVCyH2QfZJ67Uiz+JPc=",
      "dev": true,
      "requires": {
        "strip-bom": "^3.0.0"
      }
    },
    "defaults": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/defaults/-/defaults-1.0.3.tgz",
      "integrity": "sha1-xlYFHpgX2f8I7YgUd/P+QBnz730=",
      "dev": true,
      "requires": {
        "clone": "^1.0.2"
      },
      "dependencies": {
        "clone": {
          "version": "1.0.4",
          "resolved": "https://registry.npmjs.org/clone/-/clone-1.0.4.tgz",
          "integrity": "sha1-2jCcwmPfFZlMaIypAheco8fNfH4=",
          "dev": true
        }
      }
    },
    "defer-to-connect": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-1.1.3.tgz",
      "integrity": "sha512-0ISdNousHvZT2EiFlZeZAHBUvSxmKswVCEf8hW7KWgG4a8MVEu/3Vb6uWYozkjylyCxe0JBIiRB1jV45S70WVQ=="
    },
    "define-properties": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.1.3.tgz",
      "integrity": "sha512-3MqfYKj2lLzdMSf8ZIZE/V+Zuy+BgD6f164e8K2w7dgnpKArBDerGYpM46IYYcjnkdPNMjPk9A6VFB8+3SKlXQ==",
      "dev": true,
      "requires": {
        "object-keys": "^1.0.12"
      }
    },
    "define-property": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/define-property/-/define-property-2.0.2.tgz",
      "integrity": "sha512-jwK2UV4cnPpbcG7+VRARKTZPUWowwXA8bzH5NP6ud0oeAxyYPuGZUAC7hMugpCdz4BeSZl2Dl9k66CHJ/46ZYQ==",
      "dev": true,
      "requires": {
        "is-descriptor": "^1.0.2",
        "isobject": "^3.0.1"
      },
      "dependencies": {
        "is-accessor-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-data-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-descriptor": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
          "dev": true,
          "requires": {
            "is-accessor-descriptor": "^1.0.0",
            "is-data-descriptor": "^1.0.0",
            "kind-of": "^6.0.2"
          }
        }
      }
    },
    "del": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/del/-/del-4.1.1.tgz",
      "integrity": "sha512-QwGuEUouP2kVwQenAsOof5Fv8K9t3D8Ca8NxcXKrIpEHjTXK5J2nXLdP+ALI1cgv8wj7KuwBhTwBkOZSJKM5XQ==",
      "dev": true,
      "requires": {
        "@types/glob": "^7.1.1",
        "globby": "^6.1.0",
        "is-path-cwd": "^2.0.0",
        "is-path-in-cwd": "^2.0.0",
        "p-map": "^2.0.0",
        "pify": "^4.0.1",
        "rimraf": "^2.6.3"
      },
      "dependencies": {
        "globby": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/globby/-/globby-6.1.0.tgz",
          "integrity": "sha1-9abXDoOV4hyFj7BInWTfAkJNUGw=",
          "dev": true,
          "requires": {
            "array-union": "^1.0.1",
            "glob": "^7.0.3",
            "object-assign": "^4.0.1",
            "pify": "^2.0.0",
            "pinkie-promise": "^2.0.0"
          },
          "dependencies": {
            "pify": {
              "version": "2.3.0",
              "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
              "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
              "dev": true
            }
          }
        },
        "p-map": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/p-map/-/p-map-2.1.0.tgz",
          "integrity": "sha512-y3b8Kpd8OAN444hxfBbFfj1FY/RjtTd8tzYwhUqNYXx0fXx2iX4maP4Qr6qhIKbQXI02wTLAda4fYUbDagTUFw==",
          "dev": true
        },
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        }
      }
    },
    "delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha1-3zrhmayt+31ECqrgsp4icrJOxhk="
    },
    "depd": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",
      "integrity": "sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak="
    },
    "dependency-graph": {
      "version": "0.7.2",
      "resolved": "https://registry.npmjs.org/dependency-graph/-/dependency-graph-0.7.2.tgz",
      "integrity": "sha512-KqtH4/EZdtdfWX0p6MGP9jljvxSY6msy/pRUD4jgNwVpv3v1QmNLlsB3LDSSUg79BRVSn7jI1QPRtArGABovAQ==",
      "dev": true
    },
    "des.js": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/des.js/-/des.js-1.0.1.tgz",
      "integrity": "sha512-Q0I4pfFrv2VPd34/vfLrFOoRmlYj3OV50i7fskps1jZWK1kApMWWT9G6RRUeYedLcBDIhnSDaUvJMb3AhUlaEA==",
      "requires": {
        "inherits": "^2.0.1",
        "minimalistic-assert": "^1.0.0"
      }
    },
    "destroy": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.0.4.tgz",
      "integrity": "sha1-l4hXRCxEdJ5CBmE+N5RiBYJqvYA="
    },
    "detect-node": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/detect-node/-/detect-node-2.0.4.tgz",
      "integrity": "sha512-ZIzRpLJrOj7jjP2miAtgqIfmzbxa4ZOr5jJc601zklsfEx9oTzmmj2nVpIPRpNlRTIh8lc1kyViIY7BWSGNmKw==",
      "dev": true
    },
    "dev-ip": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/dev-ip/-/dev-ip-1.0.1.tgz",
      "integrity": "sha1-p2o+0YVb56ASu4rBbLgPPADcKPA=",
      "dev": true
    },
    "dezalgo": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/dezalgo/-/dezalgo-1.0.3.tgz",
      "integrity": "sha1-f3Qt4Gb8dIvI24IFad3c5Jvw1FY=",
      "dev": true,
      "requires": {
        "asap": "^2.0.0",
        "wrappy": "1"
      }
    },
    "di": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/di/-/di-0.0.1.tgz",
      "integrity": "sha1-gGZJMmzqp8qjMG112YXqJ0i6kTw=",
      "dev": true
    },
    "diff": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",
      "integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==",
      "dev": true
    },
    "diffie-hellman": {
      "version": "5.0.3",
      "resolved": "https://registry.npmjs.org/diffie-hellman/-/diffie-hellman-5.0.3.tgz",
      "integrity": "sha512-kqag/Nl+f3GwyK25fhUMYj81BUOrZ9IuJsjIcDE5icNM9FJHAVm3VcUDxdLPoQtTuUylWm6ZIknYJwwaPxsUzg==",
      "requires": {
        "bn.js": "^4.1.0",
        "miller-rabin": "^4.0.0",
        "randombytes": "^2.0.0"
      }
    },
    "dir-glob": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-2.2.2.tgz",
      "integrity": "sha512-f9LBi5QWzIW3I6e//uxZoLBlUt9kcp66qo0sSCxL6YZKc75R1c4MFCoe/LaZiBGmgujvQdxc5Bn3QhfyvK5Hsw==",
      "dev": true,
      "requires": {
        "path-type": "^3.0.0"
      }
    },
    "dns-equal": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/dns-equal/-/dns-equal-1.0.0.tgz",
      "integrity": "sha1-s55/HabrCnW6nBcySzR1PEfgZU0=",
      "dev": true
    },
    "dns-packet": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/dns-packet/-/dns-packet-1.3.1.tgz",
      "integrity": "sha512-0UxfQkMhYAUaZI+xrNZOz/as5KgDU0M/fQ9b6SpkyLbk3GEswDi6PADJVaYJradtRVsRIlF1zLyOodbcTCDzUg==",
      "dev": true,
      "requires": {
        "ip": "^1.1.0",
        "safe-buffer": "^5.0.1"
      }
    },
    "dns-txt": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/dns-txt/-/dns-txt-2.0.2.tgz",
      "integrity": "sha1-uR2Ab10nGI5Ks+fRB9iBocxGQrY=",
      "dev": true,
      "requires": {
        "buffer-indexof": "^1.0.0"
      }
    },
    "dom-serialize": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/dom-serialize/-/dom-serialize-2.2.1.tgz",
      "integrity": "sha1-ViromZ9Evl6jB29UGdzVnrQ6yVs=",
      "dev": true,
      "requires": {
        "custom-event": "~1.0.0",
        "ent": "~2.2.0",
        "extend": "^3.0.0",
        "void-elements": "^2.0.0"
      }
    },
    "dom-serializer": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-0.2.2.tgz",
      "integrity": "sha512-2/xPb3ORsQ42nHYiSunXkDjPLBaEj/xTwUO4B7XCZQTRk7EBtTOPaygh10YAAh2OI1Qrp6NWfpAhzswj0ydt9g==",
      "dev": true,
      "requires": {
        "domelementtype": "^2.0.1",
        "entities": "^2.0.0"
      },
      "dependencies": {
        "domelementtype": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-2.0.1.tgz",
          "integrity": "sha512-5HOHUDsYZWV8FGWN0Njbr/Rn7f/eWSQi1v7+HsUVwXgn8nWWlL64zKDkS0n8ZmQ3mlWOMuXOnR+7Nx/5tMO5AQ==",
          "dev": true
        }
      }
    },
    "dom-storage": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/dom-storage/-/dom-storage-2.1.0.tgz",
      "integrity": "sha512-g6RpyWXzl0RR6OTElHKBl7nwnK87GUyZMYC7JWsB/IA73vpqK2K6LT39x4VepLxlSsWBFrPVLnsSR5Jyty0+2Q=="
    },
    "dom-walk": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/dom-walk/-/dom-walk-0.1.1.tgz",
      "integrity": "sha1-ZyIm3HTI95mtNTB9+TaroRrNYBg="
    },
    "domain-browser": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/domain-browser/-/domain-browser-1.2.0.tgz",
      "integrity": "sha512-jnjyiM6eRyZl2H+W8Q/zLMA481hzi0eszAaBUzIVnmYVDBbnLxVNnfu1HgEBvCbL+71FrxMl3E6lpKH7Ge3OXA==",
      "dev": true
    },
    "domelementtype": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-1.3.1.tgz",
      "integrity": "sha512-BSKB+TSpMpFI/HOxCNr1O8aMOTZ8hT3pM3GQ0w/mWRmkhEDSFJkkyzz4XQsBV44BChwGkrDfMyjVD0eA2aFV3w==",
      "dev": true
    },
    "domutils": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/domutils/-/domutils-1.7.0.tgz",
      "integrity": "sha512-Lgd2XcJ/NjEw+7tFvfKxOzCYKZsdct5lczQ2ZaQY8Djz7pfAD3Gbp8ySJWtreII/vDlMVmxwa6pHmdxIYgttDg==",
      "dev": true,
      "requires": {
        "dom-serializer": "0",
        "domelementtype": "1"
      }
    },
    "dot-prop": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-5.2.0.tgz",
      "integrity": "sha512-uEUyaDKoSQ1M4Oq8l45hSE26SnTxL6snNnqvK/VWx5wJhmff5z0FUVJDKDanor/6w3kzE3i7XZOk+7wC0EXr1A==",
      "dev": true,
      "requires": {
        "is-obj": "^2.0.0"
      }
    },
    "drbg.js": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/drbg.js/-/drbg.js-1.0.1.tgz",
      "integrity": "sha1-Pja2xCs3BDgjzbwzLVjzHiRFSAs=",
      "requires": {
        "browserify-aes": "^1.0.6",
        "create-hash": "^1.1.2",
        "create-hmac": "^1.1.4"
      }
    },
    "duplexer3": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/duplexer3/-/duplexer3-0.1.4.tgz",
      "integrity": "sha1-7gHdHKwO08vH/b6jfcCo8c4ALOI="
    },
    "duplexify": {
      "version": "3.7.1",
      "resolved": "https://registry.npmjs.org/duplexify/-/duplexify-3.7.1.tgz",
      "integrity": "sha512-07z8uv2wMyS51kKhD1KsdXJg5WQ6t93RneqRxUHnskXVtlYYkLqM0gqStQZ3pj073g687jPCHrqNfCzawLYh5g==",
      "dev": true,
      "requires": {
        "end-of-stream": "^1.0.0",
        "inherits": "^2.0.1",
        "readable-stream": "^2.0.0",
        "stream-shift": "^1.0.0"
      }
    },
    "easy-extender": {
      "version": "2.3.4",
      "resolved": "https://registry.npmjs.org/easy-extender/-/easy-extender-2.3.4.tgz",
      "integrity": "sha512-8cAwm6md1YTiPpOvDULYJL4ZS6WfM5/cTeVVh4JsvyYZAoqlRVUpHL9Gr5Fy7HA6xcSZicUia3DeAgO3Us8E+Q==",
      "dev": true,
      "requires": {
        "lodash": "^4.17.10"
      }
    },
    "eazy-logger": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/eazy-logger/-/eazy-logger-3.0.2.tgz",
      "integrity": "sha1-oyWqXlPROiIliJsqxBE7K5Y29Pw=",
      "dev": true,
      "requires": {
        "tfunk": "^3.0.1"
      }
    },
    "ecc-jsbn": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
      "integrity": "sha1-OoOpBOVDUyh4dMVkt1SThoSamMk=",
      "requires": {
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.1.0"
      }
    },
    "ee-first": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
      "integrity": "sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0="
    },
    "electron-to-chromium": {
      "version": "1.3.387",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.387.tgz",
      "integrity": "sha512-jjQ6WkxrOu0rtGqY9/74Z+UEVQ7YmJU2rCX6kH4eidKP0ZK0VKB3/i1avXQ+EDwJAABKGaOAbJrcyz18P8E3aA==",
      "dev": true
    },
    "elliptic": {
      "version": "6.5.2",
      "resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.5.2.tgz",
      "integrity": "sha512-f4x70okzZbIQl/NSRLkI/+tteV/9WqL98zx+SQ69KbXxmVrmjwsNUPn/gYJJ0sHvEak24cZgHIPegRePAtA/xw==",
      "requires": {
        "bn.js": "^4.4.0",
        "brorand": "^1.0.1",
        "hash.js": "^1.0.0",
        "hmac-drbg": "^1.0.0",
        "inherits": "^2.0.1",
        "minimalistic-assert": "^1.0.0",
        "minimalistic-crypto-utils": "^1.0.0"
      }
    },
    "emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "dev": true
    },
    "emojis-list": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/emojis-list/-/emojis-list-2.1.0.tgz",
      "integrity": "sha1-TapNnbAPmBmIDHn6RXrlsJof04k=",
      "dev": true
    },
    "encodeurl": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
      "integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k="
    },
    "encoding": {
      "version": "0.1.12",
      "resolved": "https://registry.npmjs.org/encoding/-/encoding-0.1.12.tgz",
      "integrity": "sha1-U4tm8+5izRq1HsMjgp0flIDHS+s=",
      "requires": {
        "iconv-lite": "~0.4.13"
      }
    },
    "end-of-stream": {
      "version": "1.4.4",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
      "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
      "requires": {
        "once": "^1.4.0"
      }
    },
    "engine.io": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/engine.io/-/engine.io-3.2.1.tgz",
      "integrity": "sha512-+VlKzHzMhaU+GsCIg4AoXF1UdDFjHHwMmMKqMJNDNLlUlejz58FCy4LBqB2YVJskHGYl06BatYWKP2TVdVXE5w==",
      "dev": true,
      "requires": {
        "accepts": "~1.3.4",
        "base64id": "1.0.0",
        "cookie": "0.3.1",
        "debug": "~3.1.0",
        "engine.io-parser": "~2.1.0",
        "ws": "~3.3.1"
      },
      "dependencies": {
        "cookie": {
          "version": "0.3.1",
          "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.3.1.tgz",
          "integrity": "sha1-5+Ch+e9DtMi6klxcWpboBtFoc7s=",
          "dev": true
        },
        "debug": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
          "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
          "dev": true
        },
        "ws": {
          "version": "3.3.3",
          "resolved": "https://registry.npmjs.org/ws/-/ws-3.3.3.tgz",
          "integrity": "sha512-nnWLa/NwZSt4KQJu51MYlCcSQ5g7INpOrOMt4XV8j4dqTXdmlUmSHQ8/oLC069ckre0fRsgfvsKwbTdtKLCDkA==",
          "dev": true,
          "requires": {
            "async-limiter": "~1.0.0",
            "safe-buffer": "~5.1.0",
            "ultron": "~1.1.0"
          }
        }
      }
    },
    "engine.io-client": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/engine.io-client/-/engine.io-client-3.2.1.tgz",
      "integrity": "sha512-y5AbkytWeM4jQr7m/koQLc5AxpRKC1hEVUb/s1FUAWEJq5AzJJ4NLvzuKPuxtDi5Mq755WuDvZ6Iv2rXj4PTzw==",
      "dev": true,
      "requires": {
        "component-emitter": "1.2.1",
        "component-inherit": "0.0.3",
        "debug": "~3.1.0",
        "engine.io-parser": "~2.1.1",
        "has-cors": "1.1.0",
        "indexof": "0.0.1",
        "parseqs": "0.0.5",
        "parseuri": "0.0.5",
        "ws": "~3.3.1",
        "xmlhttprequest-ssl": "~1.5.4",
        "yeast": "0.1.2"
      },
      "dependencies": {
        "component-emitter": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/component-emitter/-/component-emitter-1.2.1.tgz",
          "integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY=",
          "dev": true
        },
        "debug": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
          "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
          "dev": true
        },
        "ws": {
          "version": "3.3.3",
          "resolved": "https://registry.npmjs.org/ws/-/ws-3.3.3.tgz",
          "integrity": "sha512-nnWLa/NwZSt4KQJu51MYlCcSQ5g7INpOrOMt4XV8j4dqTXdmlUmSHQ8/oLC069ckre0fRsgfvsKwbTdtKLCDkA==",
          "dev": true,
          "requires": {
            "async-limiter": "~1.0.0",
            "safe-buffer": "~5.1.0",
            "ultron": "~1.1.0"
          }
        }
      }
    },
    "engine.io-parser": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/engine.io-parser/-/engine.io-parser-2.1.3.tgz",
      "integrity": "sha512-6HXPre2O4Houl7c4g7Ic/XzPnHBvaEmN90vtRO9uLmwtRqQmTOw0QMevL1TOfL2Cpu1VzsaTmMotQgMdkzGkVA==",
      "dev": true,
      "requires": {
        "after": "0.8.2",
        "arraybuffer.slice": "~0.0.7",
        "base64-arraybuffer": "0.1.5",
        "blob": "0.0.5",
        "has-binary2": "~1.0.2"
      }
    },
    "enhanced-resolve": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-4.1.1.tgz",
      "integrity": "sha512-98p2zE+rL7/g/DzMHMTF4zZlCgeVdJ7yr6xzEpJRYwFYrGi9ANdn5DnJURg6RpBkyk60XYDnWIv51VfIhfNGuA==",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.2",
        "memory-fs": "^0.5.0",
        "tapable": "^1.0.0"
      }
    },
    "ent": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/ent/-/ent-2.2.0.tgz",
      "integrity": "sha1-6WQhkyWiHQX0RGai9obtbOX13R0=",
      "dev": true
    },
    "entities": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/entities/-/entities-2.0.0.tgz",
      "integrity": "sha512-D9f7V0JSRwIxlRI2mjMqufDrRDnx8p+eEOz7aUM9SuvF8gsBzra0/6tbjl1m8eQHrZlYj6PxqE00hZ1SAIKPLw==",
      "dev": true
    },
    "err-code": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/err-code/-/err-code-1.1.2.tgz",
      "integrity": "sha1-BuARbTAo9q70gGhJ6w6mp0iuaWA=",
      "dev": true
    },
    "errno": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/errno/-/errno-0.1.7.tgz",
      "integrity": "sha512-MfrRBDWzIWifgq6tJj60gkAwtLNb6sQPlcFrSOflcP1aFmmruKQ2wRnze/8V6kgyz7H3FF8Npzv78mZ7XLLflg==",
      "dev": true,
      "requires": {
        "prr": "~1.0.1"
      }
    },
    "error-ex": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
      "dev": true,
      "requires": {
        "is-arrayish": "^0.2.1"
      }
    },
    "error-polyfill": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/error-polyfill/-/error-polyfill-0.1.2.tgz",
      "integrity": "sha512-8uhnXlJuhFkmIfhw2tAHtWQGpXcw5rrc0dhuY3bhn8tBHvh6l0oL9VJvR2suqx9eltglKKhVPv8luPQy+UxLTA==",
      "requires": {
        "capability": "^0.2.5",
        "o3": "^1.0.3",
        "u3": "^0.1.0"
      }
    },
    "es-abstract": {
      "version": "1.17.4",
      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.17.4.tgz",
      "integrity": "sha512-Ae3um/gb8F0mui/jPL+QiqmglkUsaQf7FwBEHYIFkztkneosu9imhqHpBzQ3h1vit8t5iQ74t6PEVvphBZiuiQ==",
      "dev": true,
      "requires": {
        "es-to-primitive": "^1.2.1",
        "function-bind": "^1.1.1",
        "has": "^1.0.3",
        "has-symbols": "^1.0.1",
        "is-callable": "^1.1.5",
        "is-regex": "^1.0.5",
        "object-inspect": "^1.7.0",
        "object-keys": "^1.1.1",
        "object.assign": "^4.1.0",
        "string.prototype.trimleft": "^2.1.1",
        "string.prototype.trimright": "^2.1.1"
      }
    },
    "es-to-primitive": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.1.tgz",
      "integrity": "sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==",
      "dev": true,
      "requires": {
        "is-callable": "^1.1.4",
        "is-date-object": "^1.0.1",
        "is-symbol": "^1.0.2"
      }
    },
    "es5-ext": {
      "version": "0.10.53",
      "resolved": "https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.53.tgz",
      "integrity": "sha512-Xs2Stw6NiNHWypzRTY1MtaG/uJlwCk8kH81920ma8mvN8Xq1gsfhZvpkImLQArw8AHnv8MT2I45J3c0R8slE+Q==",
      "requires": {
        "es6-iterator": "~2.0.3",
        "es6-symbol": "~3.1.3",
        "next-tick": "~1.0.0"
      }
    },
    "es6-iterator": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/es6-iterator/-/es6-iterator-2.0.3.tgz",
      "integrity": "sha1-p96IkUGgWpSwhUQDstCg+/qY87c=",
      "requires": {
        "d": "1",
        "es5-ext": "^0.10.35",
        "es6-symbol": "^3.1.1"
      }
    },
    "es6-promise": {
      "version": "4.2.8",
      "resolved": "https://registry.npmjs.org/es6-promise/-/es6-promise-4.2.8.tgz",
      "integrity": "sha512-HJDGx5daxeIvxdBxvG2cb9g4tEvwIk3i8+nhX0yGrYmZUzbkdg8QbDevheDB8gd0//uPj4c1EQua8Q+MViT0/w==",
      "dev": true
    },
    "es6-promisify": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/es6-promisify/-/es6-promisify-5.0.0.tgz",
      "integrity": "sha1-UQnWLz5W6pZ8S2NQWu8IKRyKUgM=",
      "dev": true,
      "requires": {
        "es6-promise": "^4.0.3"
      }
    },
    "es6-symbol": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/es6-symbol/-/es6-symbol-3.1.3.tgz",
      "integrity": "sha512-NJ6Yn3FuDinBaBRWl/q5X/s4koRHBrgKAu+yGI6JCBeiu3qrcbJhwT2GeR/EXVfylRk8dpQVJoLEFhK+Mu31NA==",
      "requires": {
        "d": "^1.0.1",
        "ext": "^1.1.2"
      }
    },
    "escape-html": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
      "integrity": "sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg="
    },
    "escape-string-regexp": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
      "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
      "dev": true
    },
    "eslint-scope": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-4.0.3.tgz",
      "integrity": "sha512-p7VutNr1O/QrxysMo3E45FjYDTeXBy0iTltPFNSqKAIfjDSXC+4dj+qfyuD8bfAXrW/y6lW3O76VaYNPKfpKrg==",
      "dev": true,
      "requires": {
        "esrecurse": "^4.1.0",
        "estraverse": "^4.1.1"
      }
    },
    "esprima": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
      "dev": true
    },
    "esrecurse": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.2.1.tgz",
      "integrity": "sha512-64RBB++fIOAXPw3P9cy89qfMlvZEXZkqqJkjqqXIvzP5ezRZjW+lPWjw35UX/3EhUPFYbg5ER4JYgDw4007/DQ==",
      "dev": true,
      "requires": {
        "estraverse": "^4.1.0"
      }
    },
    "estraverse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz",
      "integrity": "sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==",
      "dev": true
    },
    "esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true
    },
    "etag": {
      "version": "1.8.1",
      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
      "integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc="
    },
    "eth-ens-namehash": {
      "version": "2.0.8",
      "resolved": "https://registry.npmjs.org/eth-ens-namehash/-/eth-ens-namehash-2.0.8.tgz",
      "integrity": "sha1-IprEbsqG1S4MmR58sq74P/D2i88=",
      "requires": {
        "idna-uts46-hx": "^2.3.1",
        "js-sha3": "^0.5.7"
      },
      "dependencies": {
        "js-sha3": {
          "version": "0.5.7",
          "resolved": "https://registry.npmjs.org/js-sha3/-/js-sha3-0.5.7.tgz",
          "integrity": "sha1-DU/9gALVMzqrr0oj7tL2N0yfKOc="
        }
      }
    },
    "eth-lib": {
      "version": "0.1.29",
      "resolved": "https://registry.npmjs.org/eth-lib/-/eth-lib-0.1.29.tgz",
      "integrity": "sha512-bfttrr3/7gG4E02HoWTDUcDDslN003OlOoBxk9virpAZQ1ja/jDgwkWB8QfJF7ojuEowrqy+lzp9VcJG7/k5bQ==",
      "requires": {
        "bn.js": "^4.11.6",
        "elliptic": "^6.4.0",
        "nano-json-stream-parser": "^0.1.2",
        "servify": "^0.1.12",
        "ws": "^3.0.0",
        "xhr-request-promise": "^0.1.2"
      },
      "dependencies": {
        "ws": {
          "version": "3.3.3",
          "resolved": "https://registry.npmjs.org/ws/-/ws-3.3.3.tgz",
          "integrity": "sha512-nnWLa/NwZSt4KQJu51MYlCcSQ5g7INpOrOMt4XV8j4dqTXdmlUmSHQ8/oLC069ckre0fRsgfvsKwbTdtKLCDkA==",
          "requires": {
            "async-limiter": "~1.0.0",
            "safe-buffer": "~5.1.0",
            "ultron": "~1.1.0"
          }
        }
      }
    },
    "ethereum-bloom-filters": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/ethereum-bloom-filters/-/ethereum-bloom-filters-1.0.6.tgz",
      "integrity": "sha512-dE9CGNzgOOsdh7msZirvv8qjHtnHpvBlKe2647kM8v+yeF71IRso55jpojemvHV+jMjr48irPWxMRaHuOWzAFA==",
      "requires": {
        "js-sha3": "^0.8.0"
      }
    },
    "ethereumjs-common": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/ethereumjs-common/-/ethereumjs-common-1.5.0.tgz",
      "integrity": "sha512-SZOjgK1356hIY7MRj3/ma5qtfr/4B5BL+G4rP/XSMYr2z1H5el4RX5GReYCKmQmYI/nSBmRnwrZ17IfHuG0viQ=="
    },
    "ethereumjs-tx": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ethereumjs-tx/-/ethereumjs-tx-2.1.2.tgz",
      "integrity": "sha512-zZEK1onCeiORb0wyCXUvg94Ve5It/K6GD1K+26KfFKodiBiS6d9lfCXlUKGBBdQ+bv7Day+JK0tj1K+BeNFRAw==",
      "requires": {
        "ethereumjs-common": "^1.5.0",
        "ethereumjs-util": "^6.0.0"
      }
    },
    "ethereumjs-util": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/ethereumjs-util/-/ethereumjs-util-6.2.0.tgz",
      "integrity": "sha512-vb0XN9J2QGdZGIEKG2vXM+kUdEivUfU6Wmi5y0cg+LRhDYKnXIZ/Lz7XjFbHRR9VIKq2lVGLzGBkA++y2nOdOQ==",
      "requires": {
        "@types/bn.js": "^4.11.3",
        "bn.js": "^4.11.0",
        "create-hash": "^1.1.2",
        "ethjs-util": "0.1.6",
        "keccak": "^2.0.0",
        "rlp": "^2.2.3",
        "secp256k1": "^3.0.1"
      }
    },
    "ethers": {
      "version": "4.0.0-beta.3",
      "resolved": "https://registry.npmjs.org/ethers/-/ethers-4.0.0-beta.3.tgz",
      "integrity": "sha512-YYPogooSknTwvHg3+Mv71gM/3Wcrx+ZpCzarBj3mqs9njjRkrOo2/eufzhHloOCo3JSoNI4TQJJ6yU5ABm3Uog==",
      "requires": {
        "@types/node": "^10.3.2",
        "aes-js": "3.0.0",
        "bn.js": "^4.4.0",
        "elliptic": "6.3.3",
        "hash.js": "1.1.3",
        "js-sha3": "0.5.7",
        "scrypt-js": "2.0.3",
        "setimmediate": "1.0.4",
        "uuid": "2.0.1",
        "xmlhttprequest": "1.8.0"
      },
      "dependencies": {
        "@types/node": {
          "version": "10.17.17",
          "resolved": "https://registry.npmjs.org/@types/node/-/node-10.17.17.tgz",
          "integrity": "sha512-gpNnRnZP3VWzzj5k3qrpRC6Rk3H/uclhAVo1aIvwzK5p5cOrs9yEyQ8H/HBsBY0u5rrWxXEiVPQ0dEB6pkjE8Q=="
        },
        "elliptic": {
          "version": "6.3.3",
          "resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.3.3.tgz",
          "integrity": "sha1-VILZZG1UvLif19mU/J4ulWiHbj8=",
          "requires": {
            "bn.js": "^4.4.0",
            "brorand": "^1.0.1",
            "hash.js": "^1.0.0",
            "inherits": "^2.0.1"
          }
        },
        "hash.js": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/hash.js/-/hash.js-1.1.3.tgz",
          "integrity": "sha512-/UETyP0W22QILqS+6HowevwhEFJ3MBJnwTf75Qob9Wz9t0DPuisL8kW8YZMK62dHAKE1c1p+gY1TtOLY+USEHA==",
          "requires": {
            "inherits": "^2.0.3",
            "minimalistic-assert": "^1.0.0"
          }
        },
        "js-sha3": {
          "version": "0.5.7",
          "resolved": "https://registry.npmjs.org/js-sha3/-/js-sha3-0.5.7.tgz",
          "integrity": "sha1-DU/9gALVMzqrr0oj7tL2N0yfKOc="
        },
        "setimmediate": {
          "version": "1.0.4",
          "resolved": "https://registry.npmjs.org/setimmediate/-/setimmediate-1.0.4.tgz",
          "integrity": "sha1-IOgd5iLUoCWIzgyNqJc8vPHTE48="
        },
        "uuid": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/uuid/-/uuid-2.0.1.tgz",
          "integrity": "sha1-wqMN7bPlNdcsz4LjQ5QaULqFM6w="
        }
      }
    },
    "ethjs-unit": {
      "version": "0.1.6",
      "resolved": "https://registry.npmjs.org/ethjs-unit/-/ethjs-unit-0.1.6.tgz",
      "integrity": "sha1-xmWSHkduh7ziqdWIpv4EBbLEFpk=",
      "requires": {
        "bn.js": "4.11.6",
        "number-to-bn": "1.7.0"
      },
      "dependencies": {
        "bn.js": {
          "version": "4.11.6",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.6.tgz",
          "integrity": "sha1-UzRK2xRhehP26N0s4okF0cC6MhU="
        }
      }
    },
    "ethjs-util": {
      "version": "0.1.6",
      "resolved": "https://registry.npmjs.org/ethjs-util/-/ethjs-util-0.1.6.tgz",
      "integrity": "sha512-CUnVOQq7gSpDHZVVrQW8ExxUETWrnrvXYvYz55wOU8Uj4VCgw56XC2B/fVqQN+f7gmrnRHSLVnFAwsCuNwji8w==",
      "requires": {
        "is-hex-prefixed": "1.0.0",
        "strip-hex-prefix": "1.0.0"
      }
    },
    "eventemitter3": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-4.0.0.tgz",
      "integrity": "sha512-qerSRB0p+UDEssxTtm6EDKcE7W4OaoisfIMl4CngyEhjpYglocpNg6UEqCvemdGhosAsg4sO2dXJOdyBifPGCg==",
      "dev": true
    },
    "events": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/events/-/events-3.1.0.tgz",
      "integrity": "sha512-Rv+u8MLHNOdMjTAFeT3nCjHn2aGlx435FP/sDHNaRhDEMwyI/aB22Kj2qIN8R0cw3z28psEQLYwxVKLsKrMgWg==",
      "dev": true
    },
    "eventsource": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/eventsource/-/eventsource-1.0.7.tgz",
      "integrity": "sha512-4Ln17+vVT0k8aWq+t/bF5arcS3EpT9gYtW66EPacdj/mAFevznsnyoHLPy2BA8gbIQeIHoPsvwmfBftfcG//BQ==",
      "dev": true,
      "requires": {
        "original": "^1.0.0"
      }
    },
    "evp_bytestokey": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/evp_bytestokey/-/evp_bytestokey-1.0.3.tgz",
      "integrity": "sha512-/f2Go4TognH/KvCISP7OUsHn85hT9nUkxxA9BEWxFn+Oj9o8ZNLm/40hdlgSLyuOimsrTKLUMEorQexp/aPQeA==",
      "requires": {
        "md5.js": "^1.3.4",
        "safe-buffer": "^5.1.1"
      }
    },
    "execa": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/execa/-/execa-1.0.0.tgz",
      "integrity": "sha512-adbxcyWV46qiHyvSp50TKt05tB4tK3HcmF7/nxfAdhnox83seTDbwnaqKO4sXRy7roHAIFqJP/Rw/AuEbX61LA==",
      "dev": true,
      "requires": {
        "cross-spawn": "^6.0.0",
        "get-stream": "^4.0.0",
        "is-stream": "^1.1.0",
        "npm-run-path": "^2.0.0",
        "p-finally": "^1.0.0",
        "signal-exit": "^3.0.0",
        "strip-eof": "^1.0.0"
      }
    },
    "exit": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/exit/-/exit-0.1.2.tgz",
      "integrity": "sha1-BjJjj42HfMghB9MKD/8aF8uhzQw=",
      "dev": true
    },
    "expand-brackets": {
      "version": "2.1.4",
      "resolved": "https://registry.npmjs.org/expand-brackets/-/expand-brackets-2.1.4.tgz",
      "integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
      "dev": true,
      "requires": {
        "debug": "^2.3.3",
        "define-property": "^0.2.5",
        "extend-shallow": "^2.0.1",
        "posix-character-classes": "^0.1.0",
        "regex-not": "^1.0.0",
        "snapdragon": "^0.8.1",
        "to-regex": "^3.0.1"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "define-property": {
          "version": "0.2.5",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^0.1.0"
          }
        },
        "extend-shallow": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
          "dev": true,
          "requires": {
            "is-extendable": "^0.1.0"
          }
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
          "dev": true
        }
      }
    },
    "express": {
      "version": "4.17.1",
      "resolved": "https://registry.npmjs.org/express/-/express-4.17.1.tgz",
      "integrity": "sha512-mHJ9O79RqluphRrcw2X/GTh3k9tVv8YcoyY4Kkh4WDMUYKRZUq0h1o0w2rrrxBqM7VoeUVqgb27xlEMXTnYt4g==",
      "requires": {
        "accepts": "~1.3.7",
        "array-flatten": "1.1.1",
        "body-parser": "1.19.0",
        "content-disposition": "0.5.3",
        "content-type": "~1.0.4",
        "cookie": "0.4.0",
        "cookie-signature": "1.0.6",
        "debug": "2.6.9",
        "depd": "~1.1.2",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "finalhandler": "~1.1.2",
        "fresh": "0.5.2",
        "merge-descriptors": "1.0.1",
        "methods": "~1.1.2",
        "on-finished": "~2.3.0",
        "parseurl": "~1.3.3",
        "path-to-regexp": "0.1.7",
        "proxy-addr": "~2.0.5",
        "qs": "6.7.0",
        "range-parser": "~1.2.1",
        "safe-buffer": "5.1.2",
        "send": "0.17.1",
        "serve-static": "1.14.1",
        "setprototypeof": "1.1.1",
        "statuses": "~1.5.0",
        "type-is": "~1.6.18",
        "utils-merge": "1.0.1",
        "vary": "~1.1.2"
      },
      "dependencies": {
        "array-flatten": {
          "version": "1.1.1",
          "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
          "integrity": "sha1-ml9pkFGx5wczKPKgCJaLZOopVdI="
        },
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "requires": {
            "ms": "2.0.0"
          }
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
        },
        "qs": {
          "version": "6.7.0",
          "resolved": "https://registry.npmjs.org/qs/-/qs-6.7.0.tgz",
          "integrity": "sha512-VCdBRNFTX1fyE7Nb6FYoURo/SPe62QCaAyzJvUjwRaIsc+NePBEniHlvxFmmX56+HZphIGtV0XeCirBtpDrTyQ=="
        }
      }
    },
    "ext": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/ext/-/ext-1.4.0.tgz",
      "integrity": "sha512-Key5NIsUxdqKg3vIsdw9dSuXpPCQ297y6wBjL30edxwPgt2E44WcWBZey/ZvUc6sERLTxKdyCu4gZFmUbk1Q7A==",
      "requires": {
        "type": "^2.0.0"
      },
      "dependencies": {
        "type": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/type/-/type-2.0.0.tgz",
          "integrity": "sha512-KBt58xCHry4Cejnc2ISQAF7QY+ORngsWfxezO68+12hKV6lQY8P/psIkcbjeHWn7MqcgciWJyCCevFMJdIXpow=="
        }
      }
    },
    "extend": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
      "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g=="
    },
    "extend-shallow": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-3.0.2.tgz",
      "integrity": "sha1-Jqcarwc7OfshJxcnRhMcJwQCjbg=",
      "dev": true,
      "requires": {
        "assign-symbols": "^1.0.0",
        "is-extendable": "^1.0.1"
      },
      "dependencies": {
        "is-extendable": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz",
          "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",
          "dev": true,
          "requires": {
            "is-plain-object": "^2.0.4"
          }
        }
      }
    },
    "external-editor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-3.1.0.tgz",
      "integrity": "sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==",
      "dev": true,
      "requires": {
        "chardet": "^0.7.0",
        "iconv-lite": "^0.4.24",
        "tmp": "^0.0.33"
      }
    },
    "extglob": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/extglob/-/extglob-2.0.4.tgz",
      "integrity": "sha512-Nmb6QXkELsuBr24CJSkilo6UHHgbekK5UiZgfE6UHD3Eb27YC6oD+bhcT+tJ6cl8dmsgdQxnWlcry8ksBIBLpw==",
      "dev": true,
      "requires": {
        "array-unique": "^0.3.2",
        "define-property": "^1.0.0",
        "expand-brackets": "^2.1.4",
        "extend-shallow": "^2.0.1",
        "fragment-cache": "^0.2.1",
        "regex-not": "^1.0.0",
        "snapdragon": "^0.8.1",
        "to-regex": "^3.0.1"
      },
      "dependencies": {
        "define-property": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^1.0.0"
          }
        },
        "extend-shallow": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
          "dev": true,
          "requires": {
            "is-extendable": "^0.1.0"
          }
        },
        "is-accessor-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-data-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-descriptor": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
          "dev": true,
          "requires": {
            "is-accessor-descriptor": "^1.0.0",
            "is-data-descriptor": "^1.0.0",
            "kind-of": "^6.0.2"
          }
        }
      }
    },
    "extsprintf": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
      "integrity": "sha1-lpGEQOMEGnpBT4xS48V06zw+HgU="
    },
    "fast-deep-equal": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-2.0.1.tgz",
      "integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk="
    },
    "fast-json-stable-stringify": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.0.0.tgz",
      "integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I="
    },
    "fastparse": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/fastparse/-/fastparse-1.1.2.tgz",
      "integrity": "sha512-483XLLxTVIwWK3QTrMGRqUfUpoOs/0hbQrl2oz4J0pAcm3A3bu84wxTFqGqkJzewCLdME38xJLJAxBABfQT8sQ==",
      "dev": true
    },
    "faye-websocket": {
      "version": "0.10.0",
      "resolved": "https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.10.0.tgz",
      "integrity": "sha1-TkkvjQTftviQA1B/btvy1QHnxvQ=",
      "dev": true,
      "requires": {
        "websocket-driver": ">=0.5.1"
      }
    },
    "fd-slicer": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.1.0.tgz",
      "integrity": "sha1-JcfInLH5B3+IkbvmHY85Dq4lbx4=",
      "requires": {
        "pend": "~1.2.0"
      }
    },
    "figgy-pudding": {
      "version": "3.5.1",
      "resolved": "https://registry.npmjs.org/figgy-pudding/-/figgy-pudding-3.5.1.tgz",
      "integrity": "sha512-vNKxJHTEKNThjfrdJwHc7brvM6eVevuO5nTj6ez8ZQ1qbXTvGthucRF7S4vf2cr71QVnT70V34v0S1DyQsti0w==",
      "dev": true
    },
    "figures": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/figures/-/figures-3.2.0.tgz",
      "integrity": "sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==",
      "dev": true,
      "requires": {
        "escape-string-regexp": "^1.0.5"
      }
    },
    "file-loader": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/file-loader/-/file-loader-4.2.0.tgz",
      "integrity": "sha512-+xZnaK5R8kBJrHK0/6HRlrKNamvVS5rjyuju+rnyxRGuwUJwpAMsVzUl5dz6rK8brkzjV6JpcFNjp6NqV0g1OQ==",
      "dev": true,
      "requires": {
        "loader-utils": "^1.2.3",
        "schema-utils": "^2.0.0"
      },
      "dependencies": {
        "ajv": {
          "version": "6.12.0",
          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.0.tgz",
          "integrity": "sha512-D6gFiFA0RRLyUbvijN74DWAjXSFxWKaWP7mldxkVhyhAV3+SWA9HEJPHQ2c9soIeTFJqcSdFDGFgdqs1iUU2Hw==",
          "dev": true,
          "requires": {
            "fast-deep-equal": "^3.1.1",
            "fast-json-stable-stringify": "^2.0.0",
            "json-schema-traverse": "^0.4.1",
            "uri-js": "^4.2.2"
          }
        },
        "fast-deep-equal": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.1.tgz",
          "integrity": "sha512-8UEa58QDLauDNfpbrX55Q9jrGHThw2ZMdOky5Gl1CDtVeJDPVrG4Jxx1N8jw2gkWaff5UUuX1KJd+9zGe2B+ZA==",
          "dev": true
        },
        "schema-utils": {
          "version": "2.6.5",
          "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-2.6.5.tgz",
          "integrity": "sha512-5KXuwKziQrTVHh8j/Uxz+QUbxkaLW9X/86NBlx/gnKgtsZA2GIVMUn17qWhRFwF8jdYb3Dig5hRO/W5mZqy6SQ==",
          "dev": true,
          "requires": {
            "ajv": "^6.12.0",
            "ajv-keywords": "^3.4.1"
          }
        }
      }
    },
    "file-saver": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/file-saver/-/file-saver-2.0.2.tgz",
      "integrity": "sha512-Wz3c3XQ5xroCxd1G8b7yL0Ehkf0TC9oYC6buPFkNnU9EnaPlifeAFCyCh+iewXTyFRcg0a6j3J7FmJsIhlhBdw=="
    },
    "file-type": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/file-type/-/file-type-5.2.0.tgz",
      "integrity": "sha1-LdvqfHP/42No365J3DOMBYwritY="
    },
    "file-uri-to-path": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/file-uri-to-path/-/file-uri-to-path-1.0.0.tgz",
      "integrity": "sha512-0Zt+s3L7Vf1biwWZ29aARiVYLx7iMGnEUl9x33fbB/j3jR81u/O2LbqK+Bm1CDSNDKVtJ/YjwY7TUd5SkeLQLw=="
    },
    "fileset": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/fileset/-/fileset-2.0.3.tgz",
      "integrity": "sha1-jnVIqW08wjJ+5eZ0FocjozO7oqA=",
      "dev": true,
      "requires": {
        "glob": "^7.0.3",
        "minimatch": "^3.0.3"
      }
    },
    "fill-range": {
      "version": "7.0.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
      "dev": true,
      "requires": {
        "to-regex-range": "^5.0.1"
      }
    },
    "finalhandler": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.2.tgz",
      "integrity": "sha512-aAWcW57uxVNrQZqFXjITpW3sIUQmHGG3qSb9mUah9MgMC4NeWhNOlNjXEYq3HjRAvL6arUviZGGJsBg6z0zsWA==",
      "requires": {
        "debug": "2.6.9",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "on-finished": "~2.3.0",
        "parseurl": "~1.3.3",
        "statuses": "~1.5.0",
        "unpipe": "~1.0.0"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "requires": {
            "ms": "2.0.0"
          }
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
        }
      }
    },
    "find-cache-dir": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-3.0.0.tgz",
      "integrity": "sha512-t7ulV1fmbxh5G9l/492O1p5+EBbr3uwpt6odhFTMc+nWyhmbloe+ja9BZ8pIBtqFWhOmCWVjx+pTW4zDkFoclw==",
      "dev": true,
      "requires": {
        "commondir": "^1.0.1",
        "make-dir": "^3.0.0",
        "pkg-dir": "^4.1.0"
      },
      "dependencies": {
        "find-up": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
          "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
          "dev": true,
          "requires": {
            "locate-path": "^5.0.0",
            "path-exists": "^4.0.0"
          }
        },
        "locate-path": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
          "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
          "dev": true,
          "requires": {
            "p-locate": "^4.1.0"
          }
        },
        "make-dir": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.0.2.tgz",
          "integrity": "sha512-rYKABKutXa6vXTXhoV18cBE7PaewPXHe/Bdq4v+ZLMhxbWApkFFplT0LcbMW+6BbjnQXzZ/sAvSE/JdguApG5w==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "p-locate": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
          "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
          "dev": true,
          "requires": {
            "p-limit": "^2.2.0"
          }
        },
        "path-exists": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
          "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
          "dev": true
        },
        "pkg-dir": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-4.2.0.tgz",
          "integrity": "sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==",
          "dev": true,
          "requires": {
            "find-up": "^4.0.0"
          }
        }
      }
    },
    "find-up": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",
      "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",
      "dev": true,
      "requires": {
        "locate-path": "^3.0.0"
      }
    },
    "firebase": {
      "version": "7.13.1",
      "resolved": "https://registry.npmjs.org/firebase/-/firebase-7.13.1.tgz",
      "integrity": "sha512-v4Z7Wioy/7LMC8RJn1jNlOaUqLK7bUEva+Uf+qrbtFd7hM2rWLW+0IqHZBwPrQ5tI604uHj7IlhqAZEjm38AMw==",
      "requires": {
        "@firebase/analytics": "0.3.0",
        "@firebase/app": "0.6.0",
        "@firebase/app-types": "0.6.0",
        "@firebase/auth": "0.14.1",
        "@firebase/database": "0.5.24",
        "@firebase/firestore": "1.13.0",
        "@firebase/functions": "0.4.38",
        "@firebase/installations": "0.4.6",
        "@firebase/messaging": "0.6.10",
        "@firebase/performance": "0.2.36",
        "@firebase/polyfill": "0.3.33",
        "@firebase/remote-config": "0.1.17",
        "@firebase/storage": "0.3.30",
        "@firebase/util": "0.2.43"
      }
    },
    "flatted": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/flatted/-/flatted-2.0.1.tgz",
      "integrity": "sha512-a1hQMktqW9Nmqr5aktAux3JMNqaucxGcjtjWnZLHX7yyPCmlSV3M54nGYbqT8K+0GhF3NBgmJCc3ma+WOgX8Jg==",
      "dev": true
    },
    "flush-write-stream": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/flush-write-stream/-/flush-write-stream-1.1.1.tgz",
      "integrity": "sha512-3Z4XhFZ3992uIq0XOqb9AreonueSYphE6oYbpt5+3u06JWklbsPkNv3ZKkP9Bz/r+1MWCaMoSQ28P85+1Yc77w==",
      "dev": true,
      "requires": {
        "inherits": "^2.0.3",
        "readable-stream": "^2.3.6"
      }
    },
    "follow-redirects": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.10.0.tgz",
      "integrity": "sha512-4eyLK6s6lH32nOvLLwlIOnr9zrL8Sm+OvW4pVTJNoXeGzYIkHVf+pADQi+OJ0E67hiuSLezPVPyBcIZO50TmmQ==",
      "dev": true,
      "requires": {
        "debug": "^3.0.0"
      },
      "dependencies": {
        "debug": {
          "version": "3.2.6",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
          "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        }
      }
    },
    "for-in": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/for-in/-/for-in-1.0.2.tgz",
      "integrity": "sha1-gQaNKVqBQuwKxybG4iAMMPttXoA=",
      "dev": true
    },
    "forever-agent": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
      "integrity": "sha1-+8cfDEGt6zf5bFd60e1C2P2sypE="
    },
    "form-data": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
      "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
      "requires": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.6",
        "mime-types": "^2.1.12"
      }
    },
    "forwarded": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.1.2.tgz",
      "integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ="
    },
    "fragment-cache": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/fragment-cache/-/fragment-cache-0.2.1.tgz",
      "integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
      "dev": true,
      "requires": {
        "map-cache": "^0.2.2"
      }
    },
    "fresh": {
      "version": "0.5.2",
      "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
      "integrity": "sha1-PYyt2Q2XZWn6g1qx+OSyOhBWBac="
    },
    "from2": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/from2/-/from2-2.3.0.tgz",
      "integrity": "sha1-i/tVAr3kpNNs/e6gB/zKIdfjgq8=",
      "dev": true,
      "requires": {
        "inherits": "^2.0.1",
        "readable-stream": "^2.0.0"
      }
    },
    "fs": {
      "version": "0.0.1-security",
      "resolved": "https://registry.npmjs.org/fs/-/fs-0.0.1-security.tgz",
      "integrity": "sha1-invTcYa23d84E/I4WLV+yq9eQdQ="
    },
    "fs-constants": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs-constants/-/fs-constants-1.0.0.tgz",
      "integrity": "sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow=="
    },
    "fs-extra": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-4.0.2.tgz",
      "integrity": "sha1-+RcExT0bRh+JNFKwwwfZmXZHq2s=",
      "requires": {
        "graceful-fs": "^4.1.2",
        "jsonfile": "^4.0.0",
        "universalify": "^0.1.0"
      }
    },
    "fs-minipass": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-2.1.0.tgz",
      "integrity": "sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==",
      "dev": true,
      "requires": {
        "minipass": "^3.0.0"
      }
    },
    "fs-write-stream-atomic": {
      "version": "1.0.10",
      "resolved": "https://registry.npmjs.org/fs-write-stream-atomic/-/fs-write-stream-atomic-1.0.10.tgz",
      "integrity": "sha1-tH31NJPvkR33VzHnCp3tAYnbQMk=",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.2",
        "iferr": "^0.1.5",
        "imurmurhash": "^0.1.4",
        "readable-stream": "1 || 2"
      }
    },
    "fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8=",
      "dev": true
    },
    "fsevents": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.1.2.tgz",
      "integrity": "sha512-R4wDiBwZ0KzpgOWetKDug1FZcYhqYnUYKtfZYt4mD5SBz76q0KR4Q9o7GIPamsVPGmW3EYPPJ0dOOjvx32ldZA==",
      "dev": true,
      "optional": true
    },
    "function-bind": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",
      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==",
      "dev": true
    },
    "genfun": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/genfun/-/genfun-5.0.0.tgz",
      "integrity": "sha512-KGDOARWVga7+rnB3z9Sd2Letx515owfk0hSxHGuqjANb1M+x2bGZGqHLiozPsYMdM2OubeMni/Hpwmjq6qIUhA==",
      "dev": true
    },
    "get-caller-file": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-1.0.3.tgz",
      "integrity": "sha512-3t6rVToeoZfYSGd8YoLFR2DJkiQrIiUrGcjvFX2mDw3bn6k2OtwHN0TNCLbBO+w8qTvimhDkv+LSscbJY1vE6w==",
      "dev": true
    },
    "get-func-name": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/get-func-name/-/get-func-name-2.0.0.tgz",
      "integrity": "sha1-6td0q+5y4gQJQzoGY2YCPdaIekE="
    },
    "get-stream": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-4.1.0.tgz",
      "integrity": "sha512-GMat4EJ5161kIy2HevLlr4luNjBgvmj413KaQA7jt4V8B4RDsfpHk7WQ9GVqfYyyx8OS/L66Kox+rJRNklLK7w==",
      "requires": {
        "pump": "^3.0.0"
      }
    },
    "get-value": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/get-value/-/get-value-2.0.6.tgz",
      "integrity": "sha1-3BXKHGcjh8p2vTesCjlbogQqLCg=",
      "dev": true
    },
    "getpass": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
      "integrity": "sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=",
      "requires": {
        "assert-plus": "^1.0.0"
      }
    },
    "glob": {
      "version": "7.1.5",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.5.tgz",
      "integrity": "sha512-J9dlskqUXK1OeTOYBEn5s8aMukWMwWfs+rPTn/jn50Ux4MNXVhubL1wu/j2t+H4NVI+cXEcCaYellqaPVGXNqQ==",
      "dev": true,
      "requires": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.0.4",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      }
    },
    "glob-parent": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz",
      "integrity": "sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=",
      "dev": true,
      "requires": {
        "is-glob": "^3.1.0",
        "path-dirname": "^1.0.0"
      },
      "dependencies": {
        "is-glob": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",
          "integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",
          "dev": true,
          "requires": {
            "is-extglob": "^2.1.0"
          }
        }
      }
    },
    "global": {
      "version": "4.3.2",
      "resolved": "https://registry.npmjs.org/global/-/global-4.3.2.tgz",
      "integrity": "sha1-52mJJopsdMOJCLEwWxD8DjlOnQ8=",
      "requires": {
        "min-document": "^2.19.0",
        "process": "~0.5.1"
      },
      "dependencies": {
        "process": {
          "version": "0.5.2",
          "resolved": "https://registry.npmjs.org/process/-/process-0.5.2.tgz",
          "integrity": "sha1-FjjYqONML0QKkduVq5rrZ3/Bhc8="
        }
      }
    },
    "globals": {
      "version": "11.12.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
      "dev": true
    },
    "globby": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/globby/-/globby-7.1.1.tgz",
      "integrity": "sha1-+yzP+UAfhgCUXfral0QMypcrhoA=",
      "dev": true,
      "requires": {
        "array-union": "^1.0.1",
        "dir-glob": "^2.0.0",
        "glob": "^7.1.2",
        "ignore": "^3.3.5",
        "pify": "^3.0.0",
        "slash": "^1.0.0"
      },
      "dependencies": {
        "pify": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
          "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
          "dev": true
        }
      }
    },
    "got": {
      "version": "9.6.0",
      "resolved": "https://registry.npmjs.org/got/-/got-9.6.0.tgz",
      "integrity": "sha512-R7eWptXuGYxwijs0eV+v3o6+XH1IqVK8dJOEecQfTmkncw9AV4dcw/Dhxi8MdlqPthxxpZyizMzyg8RTmEsG+Q==",
      "requires": {
        "@sindresorhus/is": "^0.14.0",
        "@szmarczak/http-timer": "^1.1.2",
        "cacheable-request": "^6.0.0",
        "decompress-response": "^3.3.0",
        "duplexer3": "^0.1.4",
        "get-stream": "^4.1.0",
        "lowercase-keys": "^1.0.1",
        "mimic-response": "^1.0.1",
        "p-cancelable": "^1.0.0",
        "to-readable-stream": "^1.0.0",
        "url-parse-lax": "^3.0.0"
      }
    },
    "graceful-fs": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.3.tgz",
      "integrity": "sha512-a30VEBm4PEdx1dRB7MFK7BejejvCvBronbLjht+sHuGYj8PHs7M/5Z+rt5lw551vZ7yfTCj4Vuyy3mSJytDWRQ=="
    },
    "graceful-readlink": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/graceful-readlink/-/graceful-readlink-1.0.1.tgz",
      "integrity": "sha1-TK+tdrxi8C+gObL5Tpo906ORpyU="
    },
    "grpc": {
      "version": "1.24.2",
      "resolved": "https://registry.npmjs.org/grpc/-/grpc-1.24.2.tgz",
      "integrity": "sha512-EG3WH6AWMVvAiV15d+lr+K77HJ/KV/3FvMpjKjulXHbTwgDZkhkcWbwhxFAoTdxTkQvy0WFcO3Nog50QBbHZWw==",
      "requires": {
        "@types/bytebuffer": "^5.0.40",
        "lodash.camelcase": "^4.3.0",
        "lodash.clone": "^4.5.0",
        "nan": "^2.13.2",
        "node-pre-gyp": "^0.14.0",
        "protobufjs": "^5.0.3"
      },
      "dependencies": {
        "abbrev": {
          "version": "1.1.1",
          "bundled": true
        },
        "ansi-regex": {
          "version": "2.1.1",
          "bundled": true
        },
        "aproba": {
          "version": "1.2.0",
          "bundled": true
        },
        "are-we-there-yet": {
          "version": "1.1.5",
          "bundled": true,
          "requires": {
            "delegates": "^1.0.0",
            "readable-stream": "^2.0.6"
          }
        },
        "balanced-match": {
          "version": "1.0.0",
          "bundled": true
        },
        "brace-expansion": {
          "version": "1.1.11",
          "bundled": true,
          "requires": {
            "balanced-match": "^1.0.0",
            "concat-map": "0.0.1"
          }
        },
        "camelcase": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-2.1.1.tgz",
          "integrity": "sha1-fB0W1nmhu+WcoCys7PsBHiAfWh8="
        },
        "chownr": {
          "version": "1.1.3",
          "bundled": true
        },
        "cliui": {
          "version": "3.2.0",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-3.2.0.tgz",
          "integrity": "sha1-EgYBU3qRbSmUD5NNo7SNWFo5IT0=",
          "requires": {
            "string-width": "^1.0.1",
            "strip-ansi": "^3.0.1",
            "wrap-ansi": "^2.0.0"
          }
        },
        "code-point-at": {
          "version": "1.1.0",
          "bundled": true
        },
        "concat-map": {
          "version": "0.0.1",
          "bundled": true
        },
        "console-control-strings": {
          "version": "1.1.0",
          "bundled": true
        },
        "core-util-is": {
          "version": "1.0.2",
          "bundled": true
        },
        "debug": {
          "version": "3.2.6",
          "bundled": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "deep-extend": {
          "version": "0.6.0",
          "bundled": true
        },
        "delegates": {
          "version": "1.0.0",
          "bundled": true
        },
        "detect-libc": {
          "version": "1.0.3",
          "bundled": true
        },
        "fs-minipass": {
          "version": "1.2.7",
          "bundled": true,
          "requires": {
            "minipass": "^2.6.0"
          }
        },
        "fs.realpath": {
          "version": "1.0.0",
          "bundled": true
        },
        "gauge": {
          "version": "2.7.4",
          "bundled": true,
          "requires": {
            "aproba": "^1.0.3",
            "console-control-strings": "^1.0.0",
            "has-unicode": "^2.0.0",
            "object-assign": "^4.1.0",
            "signal-exit": "^3.0.0",
            "string-width": "^1.0.1",
            "strip-ansi": "^3.0.1",
            "wide-align": "^1.1.0"
          }
        },
        "glob": {
          "version": "7.1.4",
          "bundled": true,
          "requires": {
            "fs.realpath": "^1.0.0",
            "inflight": "^1.0.4",
            "inherits": "2",
            "minimatch": "^3.0.4",
            "once": "^1.3.0",
            "path-is-absolute": "^1.0.0"
          }
        },
        "has-unicode": {
          "version": "2.0.1",
          "bundled": true
        },
        "iconv-lite": {
          "version": "0.4.24",
          "bundled": true,
          "requires": {
            "safer-buffer": ">= 2.1.2 < 3"
          }
        },
        "ignore-walk": {
          "version": "3.0.3",
          "bundled": true,
          "requires": {
            "minimatch": "^3.0.4"
          }
        },
        "inflight": {
          "version": "1.0.6",
          "bundled": true,
          "requires": {
            "once": "^1.3.0",
            "wrappy": "1"
          }
        },
        "inherits": {
          "version": "2.0.4",
          "bundled": true
        },
        "ini": {
          "version": "1.3.5",
          "bundled": true
        },
        "invert-kv": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/invert-kv/-/invert-kv-1.0.0.tgz",
          "integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY="
        },
        "is-fullwidth-code-point": {
          "version": "1.0.0",
          "bundled": true,
          "requires": {
            "number-is-nan": "^1.0.0"
          }
        },
        "isarray": {
          "version": "1.0.0",
          "bundled": true
        },
        "lcid": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/lcid/-/lcid-1.0.0.tgz",
          "integrity": "sha1-MIrMr6C8SDo4Z7S28rlQYlHRuDU=",
          "requires": {
            "invert-kv": "^1.0.0"
          }
        },
        "minimatch": {
          "version": "3.0.4",
          "bundled": true,
          "requires": {
            "brace-expansion": "^1.1.7"
          }
        },
        "minimist": {
          "version": "1.2.0",
          "bundled": true
        },
        "minipass": {
          "version": "2.9.0",
          "bundled": true,
          "requires": {
            "safe-buffer": "^5.1.2",
            "yallist": "^3.0.0"
          }
        },
        "minizlib": {
          "version": "1.3.3",
          "bundled": true,
          "requires": {
            "minipass": "^2.9.0"
          }
        },
        "mkdirp": {
          "version": "0.5.1",
          "bundled": true,
          "requires": {
            "minimist": "0.0.8"
          },
          "dependencies": {
            "minimist": {
              "version": "0.0.8",
              "bundled": true
            }
          }
        },
        "ms": {
          "version": "2.1.2",
          "bundled": true
        },
        "needle": {
          "version": "2.4.0",
          "bundled": true,
          "requires": {
            "debug": "^3.2.6",
            "iconv-lite": "^0.4.4",
            "sax": "^1.2.4"
          }
        },
        "node-pre-gyp": {
          "version": "0.14.0",
          "bundled": true,
          "requires": {
            "detect-libc": "^1.0.2",
            "mkdirp": "^0.5.1",
            "needle": "^2.2.1",
            "nopt": "^4.0.1",
            "npm-packlist": "^1.1.6",
            "npmlog": "^4.0.2",
            "rc": "^1.2.7",
            "rimraf": "^2.6.1",
            "semver": "^5.3.0",
            "tar": "^4.4.2"
          }
        },
        "nopt": {
          "version": "4.0.1",
          "bundled": true,
          "requires": {
            "abbrev": "1",
            "osenv": "^0.1.4"
          }
        },
        "npm-bundled": {
          "version": "1.0.6",
          "bundled": true
        },
        "npm-packlist": {
          "version": "1.4.6",
          "bundled": true,
          "requires": {
            "ignore-walk": "^3.0.1",
            "npm-bundled": "^1.0.1"
          }
        },
        "npmlog": {
          "version": "4.1.2",
          "bundled": true,
          "requires": {
            "are-we-there-yet": "~1.1.2",
            "console-control-strings": "~1.1.0",
            "gauge": "~2.7.3",
            "set-blocking": "~2.0.0"
          }
        },
        "number-is-nan": {
          "version": "1.0.1",
          "bundled": true
        },
        "object-assign": {
          "version": "4.1.1",
          "bundled": true
        },
        "once": {
          "version": "1.4.0",
          "bundled": true,
          "requires": {
            "wrappy": "1"
          }
        },
        "os-homedir": {
          "version": "1.0.2",
          "bundled": true
        },
        "os-locale": {
          "version": "1.4.0",
          "resolved": "https://registry.npmjs.org/os-locale/-/os-locale-1.4.0.tgz",
          "integrity": "sha1-IPnxeuKe00XoveWDsT0gCYA8FNk=",
          "requires": {
            "lcid": "^1.0.0"
          }
        },
        "os-tmpdir": {
          "version": "1.0.2",
          "bundled": true
        },
        "osenv": {
          "version": "0.1.5",
          "bundled": true,
          "requires": {
            "os-homedir": "^1.0.0",
            "os-tmpdir": "^1.0.0"
          }
        },
        "path-is-absolute": {
          "version": "1.0.1",
          "bundled": true
        },
        "process-nextick-args": {
          "version": "2.0.1",
          "bundled": true
        },
        "protobufjs": {
          "version": "5.0.3",
          "resolved": "https://registry.npmjs.org/protobufjs/-/protobufjs-5.0.3.tgz",
          "integrity": "sha512-55Kcx1MhPZX0zTbVosMQEO5R6/rikNXd9b6RQK4KSPcrSIIwoXTtebIczUrXlwaSrbz4x8XUVThGPob1n8I4QA==",
          "requires": {
            "ascli": "~1",
            "bytebuffer": "~5",
            "glob": "^7.0.5",
            "yargs": "^3.10.0"
          }
        },
        "rc": {
          "version": "1.2.8",
          "bundled": true,
          "requires": {
            "deep-extend": "^0.6.0",
            "ini": "~1.3.0",
            "minimist": "^1.2.0",
            "strip-json-comments": "~2.0.1"
          }
        },
        "readable-stream": {
          "version": "2.3.6",
          "bundled": true,
          "requires": {
            "core-util-is": "~1.0.0",
            "inherits": "~2.0.3",
            "isarray": "~1.0.0",
            "process-nextick-args": "~2.0.0",
            "safe-buffer": "~5.1.1",
            "string_decoder": "~1.1.1",
            "util-deprecate": "~1.0.1"
          }
        },
        "rimraf": {
          "version": "2.7.1",
          "bundled": true,
          "requires": {
            "glob": "^7.1.3"
          }
        },
        "safe-buffer": {
          "version": "5.1.2",
          "bundled": true
        },
        "safer-buffer": {
          "version": "2.1.2",
          "bundled": true
        },
        "sax": {
          "version": "1.2.4",
          "bundled": true
        },
        "semver": {
          "version": "5.7.1",
          "bundled": true
        },
        "set-blocking": {
          "version": "2.0.0",
          "bundled": true
        },
        "signal-exit": {
          "version": "3.0.2",
          "bundled": true
        },
        "string-width": {
          "version": "1.0.2",
          "bundled": true,
          "requires": {
            "code-point-at": "^1.0.0",
            "is-fullwidth-code-point": "^1.0.0",
            "strip-ansi": "^3.0.0"
          }
        },
        "string_decoder": {
          "version": "1.1.1",
          "bundled": true,
          "requires": {
            "safe-buffer": "~5.1.0"
          }
        },
        "strip-ansi": {
          "version": "3.0.1",
          "bundled": true,
          "requires": {
            "ansi-regex": "^2.0.0"
          }
        },
        "strip-json-comments": {
          "version": "2.0.1",
          "bundled": true
        },
        "tar": {
          "version": "4.4.13",
          "bundled": true,
          "requires": {
            "chownr": "^1.1.1",
            "fs-minipass": "^1.2.5",
            "minipass": "^2.8.6",
            "minizlib": "^1.2.1",
            "mkdirp": "^0.5.0",
            "safe-buffer": "^5.1.2",
            "yallist": "^3.0.3"
          }
        },
        "util-deprecate": {
          "version": "1.0.2",
          "bundled": true
        },
        "wide-align": {
          "version": "1.1.3",
          "bundled": true,
          "requires": {
            "string-width": "^1.0.2 || 2"
          }
        },
        "window-size": {
          "version": "0.1.4",
          "resolved": "https://registry.npmjs.org/window-size/-/window-size-0.1.4.tgz",
          "integrity": "sha1-+OGqHuWlPsW/FR/6CXQqatdpeHY="
        },
        "wrappy": {
          "version": "1.0.2",
          "bundled": true
        },
        "y18n": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/y18n/-/y18n-3.2.1.tgz",
          "integrity": "sha1-bRX7qITAhnnA136I53WegR4H+kE="
        },
        "yallist": {
          "version": "3.1.1",
          "bundled": true
        },
        "yargs": {
          "version": "3.32.0",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-3.32.0.tgz",
          "integrity": "sha1-AwiOnr+edWtpdRYR0qXvWRSCyZU=",
          "requires": {
            "camelcase": "^2.0.1",
            "cliui": "^3.0.3",
            "decamelize": "^1.1.1",
            "os-locale": "^1.4.0",
            "string-width": "^1.0.1",
            "window-size": "^0.1.4",
            "y18n": "^3.2.0"
          }
        }
      }
    },
    "handle-thing": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/handle-thing/-/handle-thing-2.0.1.tgz",
      "integrity": "sha512-9Qn4yBxelxoh2Ow62nP+Ka/kMnOXRi8BXnRaUwezLNhqelnN49xKz4F/dPP8OYLxLxq6JDtZb2i9XznUQbNPTg==",
      "dev": true
    },
    "har-schema": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
      "integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI="
    },
    "har-validator": {
      "version": "5.1.3",
      "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.3.tgz",
      "integrity": "sha512-sNvOCzEQNr/qrvJgc3UG/kD4QtlHycrzwS+6mfTrrSq97BvaYcPZZI1ZSqGSPR73Cxn4LKTD4PttRwfU7jWq5g==",
      "requires": {
        "ajv": "^6.5.5",
        "har-schema": "^2.0.0"
      }
    },
    "has": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",
      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",
      "dev": true,
      "requires": {
        "function-bind": "^1.1.1"
      }
    },
    "has-ansi": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz",
      "integrity": "sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=",
      "dev": true,
      "requires": {
        "ansi-regex": "^2.0.0"
      }
    },
    "has-binary2": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/has-binary2/-/has-binary2-1.0.3.tgz",
      "integrity": "sha512-G1LWKhDSvhGeAQ8mPVQlqNcOB2sJdwATtZKl2pDKKHfpf/rYj24lkinxf69blJbnsvtqqNU+L3SL50vzZhXOnw==",
      "dev": true,
      "requires": {
        "isarray": "2.0.1"
      },
      "dependencies": {
        "isarray": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.1.tgz",
          "integrity": "sha1-o32U7ZzaLVmGXJ92/llu4fM4dB4=",
          "dev": true
        }
      }
    },
    "has-cors": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-cors/-/has-cors-1.1.0.tgz",
      "integrity": "sha1-XkdHk/fqmEPRu5nCPu9J/xJv/zk=",
      "dev": true
    },
    "has-flag": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
      "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",
      "dev": true
    },
    "has-symbol-support-x": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/has-symbol-support-x/-/has-symbol-support-x-1.4.2.tgz",
      "integrity": "sha512-3ToOva++HaW+eCpgqZrCfN51IPB+7bJNVT6CUATzueB5Heb8o6Nam0V3HG5dlDvZU1Gn5QLcbahiKw/XVk5JJw=="
    },
    "has-symbols": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.1.tgz",
      "integrity": "sha512-PLcsoqu++dmEIZB+6totNFKq/7Do+Z0u4oT0zKOJNl3lYK6vGwwu2hjHs+68OEZbTjiUE9bgOABXbP/GvrS0Kg==",
      "dev": true
    },
    "has-to-string-tag-x": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/has-to-string-tag-x/-/has-to-string-tag-x-1.4.1.tgz",
      "integrity": "sha512-vdbKfmw+3LoOYVr+mtxHaX5a96+0f3DljYd8JOqvOLsf5mw2Otda2qCDT9qRqLAhrjyQ0h7ual5nOiASpsGNFw==",
      "requires": {
        "has-symbol-support-x": "^1.4.1"
      }
    },
    "has-value": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/has-value/-/has-value-1.0.0.tgz",
      "integrity": "sha1-GLKB2lhbHFxR3vJMkw7SmgvmsXc=",
      "dev": true,
      "requires": {
        "get-value": "^2.0.6",
        "has-values": "^1.0.0",
        "isobject": "^3.0.0"
      }
    },
    "has-values": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/has-values/-/has-values-1.0.0.tgz",
      "integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
      "dev": true,
      "requires": {
        "is-number": "^3.0.0",
        "kind-of": "^4.0.0"
      },
      "dependencies": {
        "is-number": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
          "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
          "dev": true,
          "requires": {
            "kind-of": "^3.0.2"
          },
          "dependencies": {
            "kind-of": {
              "version": "3.2.2",
              "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
              "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
              "dev": true,
              "requires": {
                "is-buffer": "^1.1.5"
              }
            }
          }
        },
        "kind-of": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-4.0.0.tgz",
          "integrity": "sha1-IIE989cSkosgc3hpGkUGb65y3Vc=",
          "dev": true,
          "requires": {
            "is-buffer": "^1.1.5"
          }
        }
      }
    },
    "hash-base": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/hash-base/-/hash-base-3.0.4.tgz",
      "integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",
      "requires": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "hash.js": {
      "version": "1.1.7",
      "resolved": "https://registry.npmjs.org/hash.js/-/hash.js-1.1.7.tgz",
      "integrity": "sha512-taOaskGt4z4SOANNseOviYDvjEJinIkRgmp7LbKP2YTTmVxWBl87s/uzK9r+44BclBSp2X7K1hqeNfz9JbBeXA==",
      "requires": {
        "inherits": "^2.0.3",
        "minimalistic-assert": "^1.0.1"
      }
    },
    "hex-color-regex": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/hex-color-regex/-/hex-color-regex-1.1.0.tgz",
      "integrity": "sha512-l9sfDFsuqtOqKDsQdqrMRk0U85RZc0RtOR9yPI7mRVOa4FsR/BVnZ0shmQRM96Ji99kYZP/7hn1cedc1+ApsTQ==",
      "dev": true
    },
    "hmac-drbg": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/hmac-drbg/-/hmac-drbg-1.0.1.tgz",
      "integrity": "sha1-0nRXAQJabHdabFRXk+1QL8DGSaE=",
      "requires": {
        "hash.js": "^1.0.3",
        "minimalistic-assert": "^1.0.0",
        "minimalistic-crypto-utils": "^1.0.1"
      }
    },
    "hosted-git-info": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-3.0.4.tgz",
      "integrity": "sha512-4oT62d2jwSDBbLLFLZE+1vPuQ1h8p9wjrJ8Mqx5TjsyWmBMV5B13eJqn8pvluqubLf3cJPTfiYCIwNwDNmzScQ==",
      "dev": true,
      "requires": {
        "lru-cache": "^5.1.1"
      }
    },
    "hpack.js": {
      "version": "2.1.6",
      "resolved": "https://registry.npmjs.org/hpack.js/-/hpack.js-2.1.6.tgz",
      "integrity": "sha1-h3dMCUnlE/QuhFdbPEVoH63ioLI=",
      "dev": true,
      "requires": {
        "inherits": "^2.0.1",
        "obuf": "^1.0.0",
        "readable-stream": "^2.0.1",
        "wbuf": "^1.1.0"
      }
    },
    "hsl-regex": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/hsl-regex/-/hsl-regex-1.0.0.tgz",
      "integrity": "sha1-1JMwx4ntgZ4nakwNJy3/owsY/m4=",
      "dev": true
    },
    "hsla-regex": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/hsla-regex/-/hsla-regex-1.0.0.tgz",
      "integrity": "sha1-wc56MWjIxmFAM6S194d/OyJfnDg=",
      "dev": true
    },
    "html-comment-regex": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/html-comment-regex/-/html-comment-regex-1.1.2.tgz",
      "integrity": "sha512-P+M65QY2JQ5Y0G9KKdlDpo0zK+/OHptU5AaBwUfAIDJZk1MYf32Frm84EcOytfJE0t5JvkAnKlmjsXDnWzCJmQ==",
      "dev": true
    },
    "html-entities": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/html-entities/-/html-entities-1.2.1.tgz",
      "integrity": "sha1-DfKTUfByEWNRXfueVUPl9u7VFi8=",
      "dev": true
    },
    "html-escaper": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/html-escaper/-/html-escaper-2.0.0.tgz",
      "integrity": "sha512-a4u9BeERWGu/S8JiWEAQcdrg9v4QArtP9keViQjGMdff20fBdd8waotXaNmODqBe6uZ3Nafi7K/ho4gCQHV3Ig==",
      "dev": true
    },
    "http-cache-semantics": {
      "version": "3.8.1",
      "resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-3.8.1.tgz",
      "integrity": "sha512-5ai2iksyV8ZXmnZhHH4rWPoxxistEexSi5936zIQ1bnNTW5VnA85B6P/VpXiRM017IgRvb2kKo1a//y+0wSp3w==",
      "dev": true
    },
    "http-deceiver": {
      "version": "1.2.7",
      "resolved": "https://registry.npmjs.org/http-deceiver/-/http-deceiver-1.2.7.tgz",
      "integrity": "sha1-+nFolEq5pRnTN8sL7HKE3D5yPYc=",
      "dev": true
    },
    "http-errors": {
      "version": "1.7.2",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.7.2.tgz",
      "integrity": "sha512-uUQBt3H/cSIVfch6i1EuPNy/YsRSOUBXTVfZ+yR7Zjez3qjBz6i9+i4zjNaoqcoFVI4lQJ5plg63TvGfRSDCRg==",
      "requires": {
        "depd": "~1.1.2",
        "inherits": "2.0.3",
        "setprototypeof": "1.1.1",
        "statuses": ">= 1.5.0 < 2",
        "toidentifier": "1.0.0"
      },
      "dependencies": {
        "inherits": {
          "version": "2.0.3",
          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
          "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4="
        }
      }
    },
    "http-https": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/http-https/-/http-https-1.0.0.tgz",
      "integrity": "sha1-L5CN1fHbQGjAWM1ubUzjkskTOJs="
    },
    "http-parser-js": {
      "version": "0.4.10",
      "resolved": "https://registry.npmjs.org/http-parser-js/-/http-parser-js-0.4.10.tgz",
      "integrity": "sha1-ksnBN0w1CF912zWexWzCV8u5P6Q="
    },
    "http-proxy": {
      "version": "1.18.0",
      "resolved": "https://registry.npmjs.org/http-proxy/-/http-proxy-1.18.0.tgz",
      "integrity": "sha512-84I2iJM/n1d4Hdgc6y2+qY5mDaz2PUVjlg9znE9byl+q0uC3DeByqBGReQu5tpLK0TAqTIXScRUV+dg7+bUPpQ==",
      "dev": true,
      "requires": {
        "eventemitter3": "^4.0.0",
        "follow-redirects": "^1.0.0",
        "requires-port": "^1.0.0"
      }
    },
    "http-proxy-agent": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/http-proxy-agent/-/http-proxy-agent-2.1.0.tgz",
      "integrity": "sha512-qwHbBLV7WviBl0rQsOzH6o5lwyOIvwp/BdFnvVxXORldu5TmjFfjzBcWUWS5kWAZhmv+JtiDhSuQCp4sBfbIgg==",
      "dev": true,
      "requires": {
        "agent-base": "4",
        "debug": "3.1.0"
      },
      "dependencies": {
        "debug": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
          "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
          "dev": true
        }
      }
    },
    "http-proxy-middleware": {
      "version": "0.19.1",
      "resolved": "https://registry.npmjs.org/http-proxy-middleware/-/http-proxy-middleware-0.19.1.tgz",
      "integrity": "sha512-yHYTgWMQO8VvwNS22eLLloAkvungsKdKTLO8AJlftYIKNfJr3GK3zK0ZCfzDDGUBttdGc8xFy1mCitvNKQtC3Q==",
      "dev": true,
      "requires": {
        "http-proxy": "^1.17.0",
        "is-glob": "^4.0.0",
        "lodash": "^4.17.11",
        "micromatch": "^3.1.10"
      }
    },
    "http-signature": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
      "integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
      "requires": {
        "assert-plus": "^1.0.0",
        "jsprim": "^1.2.2",
        "sshpk": "^1.7.0"
      }
    },
    "http-status-codes": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/http-status-codes/-/http-status-codes-1.4.0.tgz",
      "integrity": "sha512-JrT3ua+WgH8zBD3HEJYbeEgnuQaAnUeRRko/YojPAJjGmIfGD3KPU/asLdsLwKjfxOmQe5nXMQ0pt/7MyapVbQ=="
    },
    "https-browserify": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/https-browserify/-/https-browserify-1.0.0.tgz",
      "integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM=",
      "dev": true
    },
    "https-proxy-agent": {
      "version": "2.2.4",
      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-2.2.4.tgz",
      "integrity": "sha512-OmvfoQ53WLjtA9HeYP9RNrWMJzzAz1JGaSFr1nijg0PVR1JaD/xbJq1mdEIIlxGpXp9eSe/O2LgU9DJmTPd0Eg==",
      "dev": true,
      "requires": {
        "agent-base": "^4.3.0",
        "debug": "^3.1.0"
      },
      "dependencies": {
        "debug": {
          "version": "3.2.6",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
          "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        }
      }
    },
    "humanize-ms": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/humanize-ms/-/humanize-ms-1.2.1.tgz",
      "integrity": "sha1-xG4xWaKT9riW2ikxbYtv6Lt5u+0=",
      "dev": true,
      "requires": {
        "ms": "^2.0.0"
      }
    },
    "iconv-lite": {
      "version": "0.4.24",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
      "requires": {
        "safer-buffer": ">= 2.1.2 < 3"
      }
    },
    "idb": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/idb/-/idb-3.0.2.tgz",
      "integrity": "sha512-+FLa/0sTXqyux0o6C+i2lOR0VoS60LU/jzUo5xjfY6+7sEEgy4Gz1O7yFBXvjd7N0NyIGWIRg8DcQSLEG+VSPw=="
    },
    "idna-uts46-hx": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/idna-uts46-hx/-/idna-uts46-hx-2.3.1.tgz",
      "integrity": "sha512-PWoF9Keq6laYdIRwwCdhTPl60xRqAloYNMQLiyUnG42VjT53oW07BXIRM+NK7eQjzXjAk2gUvX9caRxlnF9TAA==",
      "requires": {
        "punycode": "2.1.0"
      },
      "dependencies": {
        "punycode": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.0.tgz",
          "integrity": "sha1-X4Y+3Im5bbCQdLrXlHvwkFbKTn0="
        }
      }
    },
    "ieee754": {
      "version": "1.1.13",
      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.1.13.tgz",
      "integrity": "sha512-4vf7I2LYV/HaWerSo3XmlMkp5eZ83i+/CDluXi/IGTs/O1sejBNhTtnxzmRZfvOUqj7lZjqHkeTvpgSFDlWZTg=="
    },
    "iferr": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/iferr/-/iferr-0.1.5.tgz",
      "integrity": "sha1-xg7taebY/bazEEofy8ocGS3FtQE=",
      "dev": true
    },
    "ignore": {
      "version": "3.3.10",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-3.3.10.tgz",
      "integrity": "sha512-Pgs951kaMm5GXP7MOvxERINe3gsaVjUWFm+UZPSq9xYriQAksyhg0csnS0KXSNRD5NmNdapXEpjxG49+AKh/ug==",
      "dev": true
    },
    "ignore-walk": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/ignore-walk/-/ignore-walk-3.0.3.tgz",
      "integrity": "sha512-m7o6xuOaT1aqheYHKf8W6J5pYH85ZI9w077erOzLje3JsB1gkafkAhHHY19dqjulgIZHFm32Cp5uNZgcQqdJKw==",
      "dev": true,
      "requires": {
        "minimatch": "^3.0.4"
      }
    },
    "image-size": {
      "version": "0.5.5",
      "resolved": "https://registry.npmjs.org/image-size/-/image-size-0.5.5.tgz",
      "integrity": "sha1-Cd/Uq50g4p6xw+gLiZA3jfnjy5w=",
      "dev": true,
      "optional": true
    },
    "immediate": {
      "version": "3.0.6",
      "resolved": "https://registry.npmjs.org/immediate/-/immediate-3.0.6.tgz",
      "integrity": "sha1-nbHb0Pr43m++D13V5Wu2BigN5ps=",
      "dev": true
    },
    "immutable": {
      "version": "3.8.2",
      "resolved": "https://registry.npmjs.org/immutable/-/immutable-3.8.2.tgz",
      "integrity": "sha1-wkOZUUVbs5kT2vKBN28VMOEErfM=",
      "dev": true
    },
    "import-cwd": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/import-cwd/-/import-cwd-2.1.0.tgz",
      "integrity": "sha1-qmzzbnInYShcs3HsZRn1PiQ1sKk=",
      "dev": true,
      "requires": {
        "import-from": "^2.1.0"
      }
    },
    "import-fresh": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-2.0.0.tgz",
      "integrity": "sha1-2BNVwVYS04bGH53dOSLUMEgipUY=",
      "dev": true,
      "requires": {
        "caller-path": "^2.0.0",
        "resolve-from": "^3.0.0"
      }
    },
    "import-from": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/import-from/-/import-from-2.1.0.tgz",
      "integrity": "sha1-M1238qev/VOqpHHUuAId7ja387E=",
      "dev": true,
      "requires": {
        "resolve-from": "^3.0.0"
      }
    },
    "import-local": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/import-local/-/import-local-2.0.0.tgz",
      "integrity": "sha512-b6s04m3O+s3CGSbqDIyP4R6aAwAeYlVq9+WUWep6iHa8ETRf9yei1U48C5MmfJmV9AiLYYBKPMq/W+/WRpQmCQ==",
      "dev": true,
      "requires": {
        "pkg-dir": "^3.0.0",
        "resolve-cwd": "^2.0.0"
      }
    },
    "imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o=",
      "dev": true
    },
    "indent-string": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-4.0.0.tgz",
      "integrity": "sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==",
      "dev": true
    },
    "indexes-of": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/indexes-of/-/indexes-of-1.0.1.tgz",
      "integrity": "sha1-8w9xbI4r00bHtn0985FVZqfAVgc=",
      "dev": true
    },
    "indexof": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/indexof/-/indexof-0.0.1.tgz",
      "integrity": "sha1-gtwzbSMrkGIXnQWrMpOmYFn9Q10=",
      "dev": true
    },
    "infer-owner": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/infer-owner/-/infer-owner-1.0.4.tgz",
      "integrity": "sha512-IClj+Xz94+d7irH5qRyfJonOdfTzuDaifE6ZPWfx0N0+/ATZCbuTPq2prFl526urkQd90WyUKIh1DfBQ2hMz9A==",
      "dev": true
    },
    "inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
      "dev": true,
      "requires": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "ini": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/ini/-/ini-1.3.5.tgz",
      "integrity": "sha512-RZY5huIKCMRWDUqZlEi72f/lmXKMvuszcMBduliQ3nnWbx9X/ZBQO7DijMEYS9EhHBb2qacRUMtC7svLwe0lcw==",
      "dev": true
    },
    "inquirer": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-7.0.0.tgz",
      "integrity": "sha512-rSdC7zelHdRQFkWnhsMu2+2SO41mpv2oF2zy4tMhmiLWkcKbOAs87fWAJhVXttKVwhdZvymvnuM95EyEXg2/tQ==",
      "dev": true,
      "requires": {
        "ansi-escapes": "^4.2.1",
        "chalk": "^2.4.2",
        "cli-cursor": "^3.1.0",
        "cli-width": "^2.0.0",
        "external-editor": "^3.0.3",
        "figures": "^3.0.0",
        "lodash": "^4.17.15",
        "mute-stream": "0.0.8",
        "run-async": "^2.2.0",
        "rxjs": "^6.4.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^5.1.0",
        "through": "^2.3.6"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
          "dev": true
        },
        "string-width": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.0.tgz",
          "integrity": "sha512-zUz5JD+tgqtuDjMhwIg5uFVV3dtqZ9yQJlZVfq4I01/K5Paj5UHj7VyrQOJvzawSVlKpObApbfD0Ed6yJc+1eg==",
          "dev": true,
          "requires": {
            "emoji-regex": "^8.0.0",
            "is-fullwidth-code-point": "^3.0.0",
            "strip-ansi": "^6.0.0"
          },
          "dependencies": {
            "strip-ansi": {
              "version": "6.0.0",
              "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
              "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
              "dev": true,
              "requires": {
                "ansi-regex": "^5.0.0"
              }
            }
          }
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          },
          "dependencies": {
            "ansi-regex": {
              "version": "4.1.0",
              "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
              "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
              "dev": true
            }
          }
        }
      }
    },
    "internal-ip": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/internal-ip/-/internal-ip-4.3.0.tgz",
      "integrity": "sha512-S1zBo1D6zcsyuC6PMmY5+55YMILQ9av8lotMx447Bq6SAgo/sDK6y6uUKmuYhW7eacnIhFfsPmCNYdDzsnnDCg==",
      "dev": true,
      "requires": {
        "default-gateway": "^4.2.0",
        "ipaddr.js": "^1.9.0"
      }
    },
    "invariant": {
      "version": "2.2.4",
      "resolved": "https://registry.npmjs.org/invariant/-/invariant-2.2.4.tgz",
      "integrity": "sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==",
      "dev": true,
      "requires": {
        "loose-envify": "^1.0.0"
      }
    },
    "invert-kv": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/invert-kv/-/invert-kv-2.0.0.tgz",
      "integrity": "sha512-wPVv/y/QQ/Uiirj/vh3oP+1Ww+AWehmi1g5fFWGPF6IpCBCDVrhgHRMvrLfdYcwDh3QJbGXDW4JAuzxElLSqKA==",
      "dev": true
    },
    "ip": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/ip/-/ip-1.1.5.tgz",
      "integrity": "sha1-vd7XARQpCCjAoDnnLvJfWq7ENUo=",
      "dev": true
    },
    "ip-regex": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/ip-regex/-/ip-regex-2.1.0.tgz",
      "integrity": "sha1-+ni/XS5pE8kRzp+BnuUUa7bYROk=",
      "dev": true
    },
    "ipaddr.js": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g=="
    },
    "is-absolute-url": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-absolute-url/-/is-absolute-url-2.1.0.tgz",
      "integrity": "sha1-UFMN+4T8yap9vnhS6Do3uTufKqY=",
      "dev": true
    },
    "is-accessor-descriptor": {
      "version": "0.1.6",
      "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-0.1.6.tgz",
      "integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
      "dev": true,
      "requires": {
        "kind-of": "^3.0.2"
      },
      "dependencies": {
        "kind-of": {
          "version": "3.2.2",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
          "dev": true,
          "requires": {
            "is-buffer": "^1.1.5"
          }
        }
      }
    },
    "is-arguments": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/is-arguments/-/is-arguments-1.0.4.tgz",
      "integrity": "sha512-xPh0Rmt8NE65sNzvyUmWgI1tz3mKq74lGA0mL8LYZcoIzKOzDh6HmrYm3d18k60nHerC8A9Km8kYu87zfSFnLA==",
      "dev": true
    },
    "is-arrayish": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",
      "integrity": "sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0=",
      "dev": true
    },
    "is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "dev": true,
      "requires": {
        "binary-extensions": "^2.0.0"
      }
    },
    "is-buffer": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",
      "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
      "dev": true
    },
    "is-callable": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.1.5.tgz",
      "integrity": "sha512-ESKv5sMCJB2jnHTWZ3O5itG+O128Hsus4K4Qh1h2/cgn2vbgnLSVqfV46AeJA9D5EeeLa9w81KUXMtn34zhX+Q==",
      "dev": true
    },
    "is-color-stop": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-color-stop/-/is-color-stop-1.1.0.tgz",
      "integrity": "sha1-z/9HGu5N1cnhWFmPvhKWe1za00U=",
      "dev": true,
      "requires": {
        "css-color-names": "^0.0.4",
        "hex-color-regex": "^1.1.0",
        "hsl-regex": "^1.0.0",
        "hsla-regex": "^1.0.0",
        "rgb-regex": "^1.0.1",
        "rgba-regex": "^1.0.0"
      }
    },
    "is-data-descriptor": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-0.1.4.tgz",
      "integrity": "sha1-C17mSDiOLIYCgueT8YVv7D8wG1Y=",
      "dev": true,
      "requires": {
        "kind-of": "^3.0.2"
      },
      "dependencies": {
        "kind-of": {
          "version": "3.2.2",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
          "dev": true,
          "requires": {
            "is-buffer": "^1.1.5"
          }
        }
      }
    },
    "is-date-object": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.2.tgz",
      "integrity": "sha512-USlDT524woQ08aoZFzh3/Z6ch9Y/EWXEHQ/AaRN0SkKq4t2Jw2R2339tSXmwuVoY7LLlBCbOIlx2myP/L5zk0g==",
      "dev": true
    },
    "is-descriptor": {
      "version": "0.1.6",
      "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-0.1.6.tgz",
      "integrity": "sha512-avDYr0SB3DwO9zsMov0gKCESFYqCnE4hq/4z3TdUlukEy5t9C0YRq7HLrsN52NAcqXKaepeCD0n+B0arnVG3Hg==",
      "dev": true,
      "requires": {
        "is-accessor-descriptor": "^0.1.6",
        "is-data-descriptor": "^0.1.4",
        "kind-of": "^5.0.0"
      },
      "dependencies": {
        "kind-of": {
          "version": "5.1.0",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-5.1.0.tgz",
          "integrity": "sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw==",
          "dev": true
        }
      }
    },
    "is-directory": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/is-directory/-/is-directory-0.3.1.tgz",
      "integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE=",
      "dev": true
    },
    "is-extendable": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-0.1.1.tgz",
      "integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik=",
      "dev": true
    },
    "is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha1-qIwCU1eR8C7TfHahueqXc8gz+MI=",
      "dev": true
    },
    "is-fullwidth-code-point": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
      "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
      "dev": true
    },
    "is-function": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/is-function/-/is-function-1.0.1.tgz",
      "integrity": "sha1-Es+5i2W1fdPRk6MSH19uL0N2ArU="
    },
    "is-glob": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.1.tgz",
      "integrity": "sha512-5G0tKtBTFImOqDnLB2hG6Bp2qcKEFduo4tZu9MT/H6NQv/ghhy30o55ufafxJ/LdH79LLs2Kfrn85TLKyA7BUg==",
      "dev": true,
      "requires": {
        "is-extglob": "^2.1.1"
      }
    },
    "is-hex-prefixed": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-hex-prefixed/-/is-hex-prefixed-1.0.0.tgz",
      "integrity": "sha1-fY035q135dEnFIkTxXPggtd39VQ="
    },
    "is-interactive": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-interactive/-/is-interactive-1.0.0.tgz",
      "integrity": "sha512-2HvIEKRoqS62guEC+qBjpvRubdX910WCMuJTZ+I9yvqKU2/12eSL549HMwtabb4oupdj2sMP50k+XJfB/8JE6w==",
      "dev": true
    },
    "is-natural-number": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/is-natural-number/-/is-natural-number-4.0.1.tgz",
      "integrity": "sha1-q5124dtM7VHjXeDHLr7PCfc0zeg="
    },
    "is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "dev": true
    },
    "is-number-like": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/is-number-like/-/is-number-like-1.0.8.tgz",
      "integrity": "sha512-6rZi3ezCyFcn5L71ywzz2bS5b2Igl1En3eTlZlvKjpz1n3IZLAYMbKYAIQgFmEu0GENg92ziU/faEOA/aixjbA==",
      "dev": true,
      "requires": {
        "lodash.isfinite": "^3.3.2"
      }
    },
    "is-obj": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/is-obj/-/is-obj-2.0.0.tgz",
      "integrity": "sha512-drqDG3cbczxxEJRoOXcOjtdp1J/lyp1mNn0xaznRs8+muBhgQcrnbspox5X5fOw0HnMnbfDzvnEMEtqDEJEo8w==",
      "dev": true
    },
    "is-object": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/is-object/-/is-object-1.0.1.tgz",
      "integrity": "sha1-iVJojF7C/9awPsyF52ngKQMINHA="
    },
    "is-path-cwd": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/is-path-cwd/-/is-path-cwd-2.2.0.tgz",
      "integrity": "sha512-w942bTcih8fdJPJmQHFzkS76NEP8Kzzvmw92cXsazb8intwLqPibPPdXf4ANdKV3rYMuuQYGIWtvz9JilB3NFQ==",
      "dev": true
    },
    "is-path-in-cwd": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-path-in-cwd/-/is-path-in-cwd-2.1.0.tgz",
      "integrity": "sha512-rNocXHgipO+rvnP6dk3zI20RpOtrAM/kzbB258Uw5BWr3TpXi861yzjo16Dn4hUox07iw5AyeMLHWsujkjzvRQ==",
      "dev": true,
      "requires": {
        "is-path-inside": "^2.1.0"
      }
    },
    "is-path-inside": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-2.1.0.tgz",
      "integrity": "sha512-wiyhTzfDWsvwAW53OBWF5zuvaOGlZ6PwYxAbPVDhpm+gM09xKQGjBq/8uYN12aDvMxnAnq3dxTyoSoRNmg5YFg==",
      "dev": true,
      "requires": {
        "path-is-inside": "^1.0.2"
      }
    },
    "is-plain-obj": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-1.1.0.tgz",
      "integrity": "sha1-caUMhCnfync8kqOQpKA7OfzVHT4="
    },
    "is-plain-object": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-2.0.4.tgz",
      "integrity": "sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==",
      "dev": true,
      "requires": {
        "isobject": "^3.0.1"
      }
    },
    "is-promise": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-2.1.0.tgz",
      "integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o=",
      "dev": true
    },
    "is-regex": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.0.5.tgz",
      "integrity": "sha512-vlKW17SNq44owv5AQR3Cq0bQPEb8+kF3UKZ2fiZNOWtztYE5i0CzCZxFDwO58qAOWtxdBRVO/V5Qin1wjCqFYQ==",
      "dev": true,
      "requires": {
        "has": "^1.0.3"
      }
    },
    "is-resolvable": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.1.0.tgz",
      "integrity": "sha512-qgDYXFSR5WvEfuS5dMj6oTMEbrrSaM0CrFk2Yiq/gXnBvD9pMa2jGXxyhGLfvhZpuMZe18CJpFxAt3CRs42NMg==",
      "dev": true
    },
    "is-retry-allowed": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/is-retry-allowed/-/is-retry-allowed-1.2.0.tgz",
      "integrity": "sha512-RUbUeKwvm3XG2VYamhJL1xFktgjvPzL0Hq8C+6yrWIswDy3BIXGqCxhxkc30N9jqK311gVU137K8Ei55/zVJRg=="
    },
    "is-stream": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz",
      "integrity": "sha1-EtSj3U5o4Lec6428hBc66A2RykQ="
    },
    "is-svg": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-svg/-/is-svg-3.0.0.tgz",
      "integrity": "sha512-gi4iHK53LR2ujhLVVj+37Ykh9GLqYHX6JOVXbLAucaG/Cqw9xwdFOjDM2qeifLs1sF1npXXFvDu0r5HNgCMrzQ==",
      "dev": true,
      "requires": {
        "html-comment-regex": "^1.1.0"
      }
    },
    "is-symbol": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.3.tgz",
      "integrity": "sha512-OwijhaRSgqvhm/0ZdAcXNZt9lYdKFpcRDT5ULUuYXPoT794UNOdU+gpT6Rzo7b4V2HUl/op6GqY894AZwv9faQ==",
      "dev": true,
      "requires": {
        "has-symbols": "^1.0.1"
      }
    },
    "is-typedarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
      "integrity": "sha1-5HnICFjfDBsR3dppQPlgEfzaSpo="
    },
    "is-utf8": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/is-utf8/-/is-utf8-0.2.1.tgz",
      "integrity": "sha1-Sw2hRCEE0bM2NA6AeX6GXPOffXI=",
      "dev": true
    },
    "is-windows": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/is-windows/-/is-windows-1.0.2.tgz",
      "integrity": "sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ/pGu6m8TRnBHP9dkXQVsT/COVIA==",
      "dev": true
    },
    "is-wsl": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-2.1.1.tgz",
      "integrity": "sha512-umZHcSrwlDHo2TGMXv0DZ8dIUGunZ2Iv68YZnrmCiBPkZ4aaOhtv7pXJKeki9k3qJ3RJr0cDyitcl5wEH3AYog==",
      "dev": true
    },
    "isarray": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
      "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
    },
    "isbinaryfile": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/isbinaryfile/-/isbinaryfile-3.0.3.tgz",
      "integrity": "sha512-8cJBL5tTd2OS0dM4jz07wQd5g0dCCqIhUxPIGtZfa5L6hWlvV5MHTITy/DBAsF+Oe2LS1X3krBUhNwaGUWpWxw==",
      "dev": true,
      "requires": {
        "buffer-alloc": "^1.2.0"
      }
    },
    "isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=",
      "dev": true
    },
    "isobject": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
      "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",
      "dev": true
    },
    "isomorphic-fetch": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/isomorphic-fetch/-/isomorphic-fetch-2.2.1.tgz",
      "integrity": "sha1-YRrhrPFPXoH3KVB0coGf6XM1WKk=",
      "requires": {
        "node-fetch": "^1.0.1",
        "whatwg-fetch": ">=0.10.0"
      },
      "dependencies": {
        "node-fetch": {
          "version": "1.7.3",
          "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-1.7.3.tgz",
          "integrity": "sha512-NhZ4CsKx7cYm2vSrBAr2PvFOe6sWDf0UYLRqA6svUYg7+/TSfVAu49jYC4BvQ4Sms9SZgdqGBgroqfDhJdTyKQ==",
          "requires": {
            "encoding": "^0.1.11",
            "is-stream": "^1.0.1"
          }
        }
      }
    },
    "isstream": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
      "integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="
    },
    "istanbul-api": {
      "version": "2.1.6",
      "resolved": "https://registry.npmjs.org/istanbul-api/-/istanbul-api-2.1.6.tgz",
      "integrity": "sha512-x0Eicp6KsShG1k1rMgBAi/1GgY7kFGEBwQpw3PXGEmu+rBcBNhqU8g2DgY9mlepAsLPzrzrbqSgCGANnki4POA==",
      "dev": true,
      "requires": {
        "async": "^2.6.2",
        "compare-versions": "^3.4.0",
        "fileset": "^2.0.3",
        "istanbul-lib-coverage": "^2.0.5",
        "istanbul-lib-hook": "^2.0.7",
        "istanbul-lib-instrument": "^3.3.0",
        "istanbul-lib-report": "^2.0.8",
        "istanbul-lib-source-maps": "^3.0.6",
        "istanbul-reports": "^2.2.4",
        "js-yaml": "^3.13.1",
        "make-dir": "^2.1.0",
        "minimatch": "^3.0.4",
        "once": "^1.4.0"
      },
      "dependencies": {
        "istanbul-lib-coverage": {
          "version": "2.0.5",
          "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.5.tgz",
          "integrity": "sha512-8aXznuEPCJvGnMSRft4udDRDtb1V3pkQkMMI5LI+6HuQz5oQ4J2UFn1H82raA3qJtyOLkkwVqICBQkjnGtn5mA==",
          "dev": true
        },
        "istanbul-lib-instrument": {
          "version": "3.3.0",
          "resolved": "https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-3.3.0.tgz",
          "integrity": "sha512-5nnIN4vo5xQZHdXno/YDXJ0G+I3dAm4XgzfSVTPLQpj/zAV2dV6Juy0yaf10/zrJOJeHoN3fraFe+XRq2bFVZA==",
          "dev": true,
          "requires": {
            "@babel/generator": "^7.4.0",
            "@babel/parser": "^7.4.3",
            "@babel/template": "^7.4.0",
            "@babel/traverse": "^7.4.3",
            "@babel/types": "^7.4.0",
            "istanbul-lib-coverage": "^2.0.5",
            "semver": "^6.0.0"
          }
        }
      }
    },
    "istanbul-lib-coverage": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.0.0.tgz",
      "integrity": "sha512-UiUIqxMgRDET6eR+o5HbfRYP1l0hqkWOs7vNxC/mggutCMUIhWMm8gAHb8tHlyfD3/l6rlgNA5cKdDzEAf6hEg==",
      "dev": true
    },
    "istanbul-lib-hook": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/istanbul-lib-hook/-/istanbul-lib-hook-2.0.7.tgz",
      "integrity": "sha512-vrRztU9VRRFDyC+aklfLoeXyNdTfga2EI3udDGn4cZ6fpSXpHLV9X6CHvfoMCPtggg8zvDDmC4b9xfu0z6/llA==",
      "dev": true,
      "requires": {
        "append-transform": "^1.0.0"
      }
    },
    "istanbul-lib-instrument": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-4.0.1.tgz",
      "integrity": "sha512-imIchxnodll7pvQBYOqUu88EufLCU56LMeFPZZM/fJZ1irYcYdqroaV+ACK1Ila8ls09iEYArp+nqyC6lW1Vfg==",
      "dev": true,
      "requires": {
        "@babel/core": "^7.7.5",
        "@babel/parser": "^7.7.5",
        "@babel/template": "^7.7.4",
        "@babel/traverse": "^7.7.4",
        "@istanbuljs/schema": "^0.1.2",
        "istanbul-lib-coverage": "^3.0.0",
        "semver": "^6.3.0"
      }
    },
    "istanbul-lib-report": {
      "version": "2.0.8",
      "resolved": "https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-2.0.8.tgz",
      "integrity": "sha512-fHBeG573EIihhAblwgxrSenp0Dby6tJMFR/HvlerBsrCTD5bkUuoNtn3gVh29ZCS824cGGBPn7Sg7cNk+2xUsQ==",
      "dev": true,
      "requires": {
        "istanbul-lib-coverage": "^2.0.5",
        "make-dir": "^2.1.0",
        "supports-color": "^6.1.0"
      },
      "dependencies": {
        "istanbul-lib-coverage": {
          "version": "2.0.5",
          "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.5.tgz",
          "integrity": "sha512-8aXznuEPCJvGnMSRft4udDRDtb1V3pkQkMMI5LI+6HuQz5oQ4J2UFn1H82raA3qJtyOLkkwVqICBQkjnGtn5mA==",
          "dev": true
        },
        "supports-color": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",
          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "istanbul-lib-source-maps": {
      "version": "3.0.6",
      "resolved": "https://registry.npmjs.org/istanbul-lib-source-maps/-/istanbul-lib-source-maps-3.0.6.tgz",
      "integrity": "sha512-R47KzMtDJH6X4/YW9XTx+jrLnZnscW4VpNN+1PViSYTejLVPWv7oov+Duf8YQSPyVRUvueQqz1TcsC6mooZTXw==",
      "dev": true,
      "requires": {
        "debug": "^4.1.1",
        "istanbul-lib-coverage": "^2.0.5",
        "make-dir": "^2.1.0",
        "rimraf": "^2.6.3",
        "source-map": "^0.6.1"
      },
      "dependencies": {
        "istanbul-lib-coverage": {
          "version": "2.0.5",
          "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.5.tgz",
          "integrity": "sha512-8aXznuEPCJvGnMSRft4udDRDtb1V3pkQkMMI5LI+6HuQz5oQ4J2UFn1H82raA3qJtyOLkkwVqICBQkjnGtn5mA==",
          "dev": true
        },
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "istanbul-reports": {
      "version": "2.2.7",
      "resolved": "https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-2.2.7.tgz",
      "integrity": "sha512-uu1F/L1o5Y6LzPVSVZXNOoD/KXpJue9aeLRd0sM9uMXfZvzomB0WxVamWb5ue8kA2vVWEmW7EG+A5n3f1kqHKg==",
      "dev": true,
      "requires": {
        "html-escaper": "^2.0.0"
      }
    },
    "isurl": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/isurl/-/isurl-1.0.0.tgz",
      "integrity": "sha512-1P/yWsxPlDtn7QeRD+ULKQPaIaN6yF368GZ2vDfv0AL0NwpStafjWCDDdn0k8wgFMWpVAqG7oJhxHnlud42i9w==",
      "requires": {
        "has-to-string-tag-x": "^1.2.0",
        "is-object": "^1.0.1"
      }
    },
    "jasmine": {
      "version": "2.8.0",
      "resolved": "https://registry.npmjs.org/jasmine/-/jasmine-2.8.0.tgz",
      "integrity": "sha1-awicChFXax8W3xG4AUbZHU6Lij4=",
      "dev": true,
      "requires": {
        "exit": "^0.1.2",
        "glob": "^7.0.6",
        "jasmine-core": "~2.8.0"
      },
      "dependencies": {
        "jasmine-core": {
          "version": "2.8.0",
          "resolved": "https://registry.npmjs.org/jasmine-core/-/jasmine-core-2.8.0.tgz",
          "integrity": "sha1-vMl5rh+f0FcB5F5S5l06XWPxok4=",
          "dev": true
        }
      }
    },
    "jasmine-core": {
      "version": "3.5.0",
      "resolved": "https://registry.npmjs.org/jasmine-core/-/jasmine-core-3.5.0.tgz",
      "integrity": "sha512-nCeAiw37MIMA9w9IXso7bRaLl+c/ef3wnxsoSAlYrzS+Ot0zTG6nU8G/cIfGkqpkjX2wNaIW9RFG0TwIFnG6bA==",
      "dev": true
    },
    "jasmine-spec-reporter": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/jasmine-spec-reporter/-/jasmine-spec-reporter-4.2.1.tgz",
      "integrity": "sha512-FZBoZu7VE5nR7Nilzy+Np8KuVIOxF4oXDPDknehCYBDE080EnlPu0afdZNmpGDBRCUBv3mj5qgqCRmk6W/K8vg==",
      "dev": true,
      "requires": {
        "colors": "1.1.2"
      }
    },
    "jasminewd2": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/jasminewd2/-/jasminewd2-2.2.0.tgz",
      "integrity": "sha1-43zwsX8ZnM4jvqcbIDk5Uka07E4=",
      "dev": true
    },
    "jest-worker": {
      "version": "24.9.0",
      "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-24.9.0.tgz",
      "integrity": "sha512-51PE4haMSXcHohnSMdM42anbvZANYTqMrr52tVKPqqsPJMzoP6FYYDVqahX/HrAoKEKz3uUPzSvKs9A3qR4iVw==",
      "dev": true,
      "requires": {
        "merge-stream": "^2.0.0",
        "supports-color": "^6.1.0"
      },
      "dependencies": {
        "supports-color": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",
          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "js-levenshtein": {
      "version": "1.1.6",
      "resolved": "https://registry.npmjs.org/js-levenshtein/-/js-levenshtein-1.1.6.tgz",
      "integrity": "sha512-X2BB11YZtrRqY4EnQcLX5Rh373zbK4alC1FW7D7MBhL2gtcC17cTnr6DmfHZeS0s2rTHjUTMMHfG7gO8SSdw+g==",
      "dev": true
    },
    "js-sha256": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/js-sha256/-/js-sha256-0.9.0.tgz",
      "integrity": "sha512-sga3MHh9sgQN2+pJ9VYZ+1LPwXOxuBJBA5nrR5/ofPfuiJBE2hnjsaN8se8JznOmGLN2p49Pe5U/ttafcs/apA=="
    },
    "js-sha3": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/js-sha3/-/js-sha3-0.8.0.tgz",
      "integrity": "sha512-gF1cRrHhIzNfToc802P800N8PpXS+evLLXfsVpowqmAFR9uwbi89WvXg2QspOmXL8QL86J4T1EpFu+yUkwJY3Q=="
    },
    "js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
      "dev": true
    },
    "js-yaml": {
      "version": "3.13.1",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.13.1.tgz",
      "integrity": "sha512-YfbcO7jXDdyj0DGxYVSlSeQNHbD7XPWvrVWeVUujrQEoZzWJIRrCPoyk6kL6IAjAG2IolMK4T0hNUe0HOUs5Jw==",
      "dev": true,
      "requires": {
        "argparse": "^1.0.7",
        "esprima": "^4.0.0"
      }
    },
    "jsbn": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
      "integrity": "sha1-peZUwuWi3rXyAdls77yoDA7y9RM="
    },
    "jsesc": {
      "version": "2.5.2",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz",
      "integrity": "sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==",
      "dev": true
    },
    "json-buffer": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.0.tgz",
      "integrity": "sha1-Wx85evx11ne96Lz8Dkfh+aPZqJg="
    },
    "json-parse-better-errors": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/json-parse-better-errors/-/json-parse-better-errors-1.0.2.tgz",
      "integrity": "sha512-mrqyZKfX5EhL7hvqcV6WG1yYjnjeuYDzDhhcAAUrq8Po85NBQBJP+ZDUT75qZQ98IkUoBqdkExkukOU7Ts2wrw==",
      "dev": true
    },
    "json-schema": {
      "version": "0.2.3",
      "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz",
      "integrity": "sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM="
    },
    "json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg=="
    },
    "json-stringify-safe": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
      "integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="
    },
    "json3": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/json3/-/json3-3.3.3.tgz",
      "integrity": "sha512-c7/8mbUsKigAbLkD5B010BK4D9LZm7A1pNItkEwiUZRpIN66exu/e7YQWysGun+TRKaJp8MhemM+VkfWv42aCA==",
      "dev": true
    },
    "json5": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json5/-/json5-1.0.1.tgz",
      "integrity": "sha512-aKS4WQjPenRxiQsC93MNfjx+nbF4PAdYzmd/1JIj8HYzqfbu86beTuNgXDzPknWk0n0uARlyewZo4s++ES36Ow==",
      "dev": true,
      "requires": {
        "minimist": "^1.2.0"
      }
    },
    "jsonfile": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz",
      "integrity": "sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=",
      "requires": {
        "graceful-fs": "^4.1.6"
      }
    },
    "jsonparse": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/jsonparse/-/jsonparse-1.3.1.tgz",
      "integrity": "sha1-P02uSpH6wxX3EGL4UhzCOfE2YoA=",
      "dev": true
    },
    "jsprim": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz",
      "integrity": "sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=",
      "requires": {
        "assert-plus": "1.0.0",
        "extsprintf": "1.3.0",
        "json-schema": "0.2.3",
        "verror": "1.10.0"
      }
    },
    "jszip": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/jszip/-/jszip-3.2.2.tgz",
      "integrity": "sha512-NmKajvAFQpbg3taXQXr/ccS2wcucR1AZ+NtyWp2Nq7HHVsXhcJFR8p0Baf32C2yVvBylFWVeKf+WI2AnvlPhpA==",
      "dev": true,
      "requires": {
        "lie": "~3.3.0",
        "pako": "~1.0.2",
        "readable-stream": "~2.3.6",
        "set-immediate-shim": "~1.0.1"
      }
    },
    "karma": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/karma/-/karma-4.3.0.tgz",
      "integrity": "sha512-NSPViHOt+RW38oJklvYxQC4BSQsv737oQlr/r06pCM+slDOr4myuI1ivkRmp+3dVpJDfZt2DmaPJ2wkx+ZZuMQ==",
      "dev": true,
      "requires": {
        "bluebird": "^3.3.0",
        "body-parser": "^1.16.1",
        "braces": "^3.0.2",
        "chokidar": "^3.0.0",
        "colors": "^1.1.0",
        "connect": "^3.6.0",
        "core-js": "^3.1.3",
        "di": "^0.0.1",
        "dom-serialize": "^2.2.0",
        "flatted": "^2.0.0",
        "glob": "^7.1.1",
        "graceful-fs": "^4.1.2",
        "http-proxy": "^1.13.0",
        "isbinaryfile": "^3.0.0",
        "lodash": "^4.17.14",
        "log4js": "^4.0.0",
        "mime": "^2.3.1",
        "minimatch": "^3.0.2",
        "optimist": "^0.6.1",
        "qjobs": "^1.1.4",
        "range-parser": "^1.2.0",
        "rimraf": "^2.6.0",
        "safe-buffer": "^5.0.1",
        "socket.io": "2.1.1",
        "source-map": "^0.6.1",
        "tmp": "0.0.33",
        "useragent": "2.3.0"
      },
      "dependencies": {
        "mime": {
          "version": "2.4.4",
          "resolved": "https://registry.npmjs.org/mime/-/mime-2.4.4.tgz",
          "integrity": "sha512-LRxmNwziLPT828z+4YkNzloCFC2YM4wrB99k+AV5ZbEyfGNWfG8SO1FUXLmLDBSo89NrJZ4DIWeLjy1CHGhMGA==",
          "dev": true
        },
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "karma-chrome-launcher": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/karma-chrome-launcher/-/karma-chrome-launcher-3.1.0.tgz",
      "integrity": "sha512-3dPs/n7vgz1rxxtynpzZTvb9y/GIaW8xjAwcIGttLbycqoFtI7yo1NGnQi6oFTherRE+GIhCAHZC4vEqWGhNvg==",
      "dev": true,
      "requires": {
        "which": "^1.2.1"
      }
    },
    "karma-coverage-istanbul-reporter": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/karma-coverage-istanbul-reporter/-/karma-coverage-istanbul-reporter-2.1.1.tgz",
      "integrity": "sha512-CH8lTi8+kKXGvrhy94+EkEMldLCiUA0xMOiL31vvli9qK0T+qcXJAwWBRVJWnVWxYkTmyWar8lPz63dxX6/z1A==",
      "dev": true,
      "requires": {
        "istanbul-api": "^2.1.6",
        "minimatch": "^3.0.4"
      }
    },
    "karma-jasmine": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/karma-jasmine/-/karma-jasmine-2.0.1.tgz",
      "integrity": "sha512-iuC0hmr9b+SNn1DaUD2QEYtUxkS1J+bSJSn7ejdEexs7P8EYvA1CWkEdrDQ+8jVH3AgWlCNwjYsT1chjcNW9lA==",
      "dev": true,
      "requires": {
        "jasmine-core": "^3.3"
      }
    },
    "karma-jasmine-html-reporter": {
      "version": "1.5.2",
      "resolved": "https://registry.npmjs.org/karma-jasmine-html-reporter/-/karma-jasmine-html-reporter-1.5.2.tgz",
      "integrity": "sha512-ILBPsXqQ3eomq+oaQsM311/jxsypw5/d0LnZXj26XkfThwq7jZ55A2CFSKJVA5VekbbOGvMyv7d3juZj0SeTxA==",
      "dev": true
    },
    "karma-source-map-support": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/karma-source-map-support/-/karma-source-map-support-1.4.0.tgz",
      "integrity": "sha512-RsBECncGO17KAoJCYXjv+ckIz+Ii9NCi+9enk+rq6XC81ezYkb4/RHE6CTXdA7IOJqoF3wcaLfVG0CPmE5ca6A==",
      "dev": true,
      "requires": {
        "source-map-support": "^0.5.5"
      }
    },
    "keccak": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/keccak/-/keccak-2.1.0.tgz",
      "integrity": "sha512-m1wbJRTo+gWbctZWay9i26v5fFnYkOn7D5PCxJ3fZUGUEb49dE1Pm4BREUYCt/aoO6di7jeoGmhvqN9Nzylm3Q==",
      "requires": {
        "bindings": "^1.5.0",
        "inherits": "^2.0.4",
        "nan": "^2.14.0",
        "safe-buffer": "^5.2.0"
      },
      "dependencies": {
        "safe-buffer": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.0.tgz",
          "integrity": "sha512-fZEwUGbVl7kouZs1jCdMLdt95hdIv0ZeHg6L7qPeciMZhZ+/gdesW4wgTARkrFWEpspjEATAzUGPG8N2jJiwbg=="
        }
      }
    },
    "keyv": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-3.1.0.tgz",
      "integrity": "sha512-9ykJ/46SN/9KPM/sichzQ7OvXyGDYKGTaDlKMGCAlg2UK8KRy4jb0d8sFc+0Tt0YYnThq8X2RZgCg74RPxgcVA==",
      "requires": {
        "json-buffer": "3.0.0"
      }
    },
    "killable": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/killable/-/killable-1.0.1.tgz",
      "integrity": "sha512-LzqtLKlUwirEUyl/nicirVmNiPvYs7l5n8wOPP7fyJVpUPkvCnW/vuiXGpylGUlnPDnB7311rARzAt3Mhswpjg==",
      "dev": true
    },
    "kind-of": {
      "version": "6.0.3",
      "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz",
      "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==",
      "dev": true
    },
    "lcid": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/lcid/-/lcid-2.0.0.tgz",
      "integrity": "sha512-avPEb8P8EGnwXKClwsNUgryVjllcRqtMYa49NTsbQagYuT1DcXnl1915oxWjoyGrXR6zH/Y0Zc96xWsPcoDKeA==",
      "dev": true,
      "requires": {
        "invert-kv": "^2.0.0"
      }
    },
    "less": {
      "version": "3.10.3",
      "resolved": "https://registry.npmjs.org/less/-/less-3.10.3.tgz",
      "integrity": "sha512-vz32vqfgmoxF1h3K4J+yKCtajH0PWmjkIFgbs5d78E/c/e+UQTnI+lWK+1eQRE95PXM2mC3rJlLSSP9VQHnaow==",
      "dev": true,
      "requires": {
        "clone": "^2.1.2",
        "errno": "^0.1.1",
        "graceful-fs": "^4.1.2",
        "image-size": "~0.5.0",
        "mime": "^1.4.1",
        "mkdirp": "^0.5.0",
        "promise": "^7.1.1",
        "request": "^2.83.0",
        "source-map": "~0.6.0"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true,
          "optional": true
        }
      }
    },
    "less-loader": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/less-loader/-/less-loader-5.0.0.tgz",
      "integrity": "sha512-bquCU89mO/yWLaUq0Clk7qCsKhsF/TZpJUzETRvJa9KSVEL9SO3ovCvdEHISBhrC81OwC8QSVX7E0bzElZj9cg==",
      "dev": true,
      "requires": {
        "clone": "^2.1.1",
        "loader-utils": "^1.1.0",
        "pify": "^4.0.1"
      }
    },
    "license-webpack-plugin": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/license-webpack-plugin/-/license-webpack-plugin-2.1.3.tgz",
      "integrity": "sha512-vTSY5r9HOq4sxR2BIxdIXWKI+9n3b+DoQkhKHedB3TdSxTfXUDRxKXdAj5iejR+qNXprXsxvEu9W+zOhgGIkAw==",
      "dev": true,
      "requires": {
        "@types/webpack-sources": "^0.1.5",
        "webpack-sources": "^1.2.0"
      }
    },
    "lie": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/lie/-/lie-3.3.0.tgz",
      "integrity": "sha512-UaiMJzeWRlEujzAuw5LokY1L5ecNQYZKfmyZ9L7wDHb/p5etKaxXhohBcrw0EYby+G/NA52vRSN4N39dxHAIwQ==",
      "dev": true,
      "requires": {
        "immediate": "~3.0.5"
      }
    },
    "limiter": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/limiter/-/limiter-1.1.5.tgz",
      "integrity": "sha512-FWWMIEOxz3GwUI4Ts/IvgVy6LPvoMPgjMdQ185nN6psJyBJ4yOpzqm695/h5umdLJg2vW3GR5iG11MAkR2AzJA==",
      "dev": true
    },
    "lite-server": {
      "version": "2.5.4",
      "resolved": "https://registry.npmjs.org/lite-server/-/lite-server-2.5.4.tgz",
      "integrity": "sha512-57SverS67UqRFiRm0ktdzEG5yZeyzkywRJ9Q8PHVSGuLm9K97Mr6jF43XTu5v9lVe8g0WHJ4eKlIeGSd1Bq/sw==",
      "dev": true,
      "requires": {
        "browser-sync": "^2.26.7",
        "connect-history-api-fallback": "^1.2.0",
        "connect-logger": "0.0.1",
        "lodash": "^4.17.15",
        "minimist": "1.2.0"
      },
      "dependencies": {
        "minimist": {
          "version": "1.2.0",
          "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz",
          "integrity": "sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ=",
          "dev": true
        }
      }
    },
    "load-json-file": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-1.1.0.tgz",
      "integrity": "sha1-lWkFcI1YtLq0wiYbBPWfMcmTdMA=",
      "dev": true,
      "requires": {
        "graceful-fs": "^4.1.2",
        "parse-json": "^2.2.0",
        "pify": "^2.0.0",
        "pinkie-promise": "^2.0.0",
        "strip-bom": "^2.0.0"
      },
      "dependencies": {
        "parse-json": {
          "version": "2.2.0",
          "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz",
          "integrity": "sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=",
          "dev": true,
          "requires": {
            "error-ex": "^1.2.0"
          }
        },
        "pify": {
          "version": "2.3.0",
          "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
          "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
          "dev": true
        },
        "strip-bom": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",
          "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",
          "dev": true,
          "requires": {
            "is-utf8": "^0.2.0"
          }
        }
      }
    },
    "loader-runner": {
      "version": "2.4.0",
      "resolved": "https://registry.npmjs.org/loader-runner/-/loader-runner-2.4.0.tgz",
      "integrity": "sha512-Jsmr89RcXGIwivFY21FcRrisYZfvLMTWx5kOLc+JTxtpBOG6xML0vzbc6SEQG2FO9/4Fc3wW4LVcB5DmGflaRw==",
      "dev": true
    },
    "loader-utils": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/loader-utils/-/loader-utils-1.2.3.tgz",
      "integrity": "sha512-fkpz8ejdnEMG3s37wGL07iSBDg99O9D5yflE9RGNH3hRdx9SOwYfnGYdZOUIZitN8E+E2vkq3MUMYMvPYl5ZZA==",
      "dev": true,
      "requires": {
        "big.js": "^5.2.2",
        "emojis-list": "^2.0.0",
        "json5": "^1.0.1"
      }
    },
    "localtunnel": {
      "version": "1.9.2",
      "resolved": "https://registry.npmjs.org/localtunnel/-/localtunnel-1.9.2.tgz",
      "integrity": "sha512-NEKF7bDJE9U3xzJu3kbayF0WTvng6Pww7tzqNb/XtEARYwqw7CKEX7BvOMg98FtE9es2CRizl61gkV3hS8dqYg==",
      "dev": true,
      "requires": {
        "axios": "0.19.0",
        "debug": "4.1.1",
        "openurl": "1.1.1",
        "yargs": "6.6.0"
      },
      "dependencies": {
        "axios": {
          "version": "0.19.0",
          "resolved": "https://registry.npmjs.org/axios/-/axios-0.19.0.tgz",
          "integrity": "sha512-1uvKqKQta3KBxIz14F2v06AEHZ/dIoeKfbTRkK1E5oqjDnuEerLmYTgJB5AiQZHJcljpg1TuRzdjDR06qNk0DQ==",
          "dev": true,
          "requires": {
            "follow-redirects": "1.5.10",
            "is-buffer": "^2.0.2"
          }
        },
        "camelcase": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-3.0.0.tgz",
          "integrity": "sha1-MvxLn82vhF/N9+c7uXysImHwqwo=",
          "dev": true
        },
        "cliui": {
          "version": "3.2.0",
          "resolved": "https://registry.npmjs.org/cliui/-/cliui-3.2.0.tgz",
          "integrity": "sha1-EgYBU3qRbSmUD5NNo7SNWFo5IT0=",
          "dev": true,
          "requires": {
            "string-width": "^1.0.1",
            "strip-ansi": "^3.0.1",
            "wrap-ansi": "^2.0.0"
          }
        },
        "follow-redirects": {
          "version": "1.5.10",
          "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.5.10.tgz",
          "integrity": "sha512-0V5l4Cizzvqt5D44aTXbFZz+FtyXV1vrDN6qrelxtfYQKW0KO0W2T/hkE8xvGa/540LkZlkaUjO4ailYTFtHVQ==",
          "dev": true,
          "requires": {
            "debug": "=3.1.0"
          },
          "dependencies": {
            "debug": {
              "version": "3.1.0",
              "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
              "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
              "dev": true,
              "requires": {
                "ms": "2.0.0"
              }
            }
          }
        },
        "invert-kv": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/invert-kv/-/invert-kv-1.0.0.tgz",
          "integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY=",
          "dev": true
        },
        "is-buffer": {
          "version": "2.0.4",
          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-2.0.4.tgz",
          "integrity": "sha512-Kq1rokWXOPXWuaMAqZiJW4XxsmD9zGx9q4aePabbn3qCRGedtH7Cm+zV8WETitMfu1wdh+Rvd6w5egwSngUX2A==",
          "dev": true
        },
        "is-fullwidth-code-point": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
          "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
          "dev": true,
          "requires": {
            "number-is-nan": "^1.0.0"
          }
        },
        "lcid": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/lcid/-/lcid-1.0.0.tgz",
          "integrity": "sha1-MIrMr6C8SDo4Z7S28rlQYlHRuDU=",
          "dev": true,
          "requires": {
            "invert-kv": "^1.0.0"
          }
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
          "dev": true
        },
        "os-locale": {
          "version": "1.4.0",
          "resolved": "https://registry.npmjs.org/os-locale/-/os-locale-1.4.0.tgz",
          "integrity": "sha1-IPnxeuKe00XoveWDsT0gCYA8FNk=",
          "dev": true,
          "requires": {
            "lcid": "^1.0.0"
          }
        },
        "string-width": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
          "integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",
          "dev": true,
          "requires": {
            "code-point-at": "^1.0.0",
            "is-fullwidth-code-point": "^1.0.0",
            "strip-ansi": "^3.0.0"
          }
        },
        "which-module": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/which-module/-/which-module-1.0.0.tgz",
          "integrity": "sha1-u6Y8qGGUiZT/MHc2CJ47lgJsKk8=",
          "dev": true
        },
        "y18n": {
          "version": "3.2.1",
          "resolved": "https://registry.npmjs.org/y18n/-/y18n-3.2.1.tgz",
          "integrity": "sha1-bRX7qITAhnnA136I53WegR4H+kE=",
          "dev": true
        },
        "yargs": {
          "version": "6.6.0",
          "resolved": "https://registry.npmjs.org/yargs/-/yargs-6.6.0.tgz",
          "integrity": "sha1-eC7CHvQDNF+DCoCMo9UTr1YGUgg=",
          "dev": true,
          "requires": {
            "camelcase": "^3.0.0",
            "cliui": "^3.2.0",
            "decamelize": "^1.1.1",
            "get-caller-file": "^1.0.1",
            "os-locale": "^1.4.0",
            "read-pkg-up": "^1.0.1",
            "require-directory": "^2.1.1",
            "require-main-filename": "^1.0.1",
            "set-blocking": "^2.0.0",
            "string-width": "^1.0.2",
            "which-module": "^1.0.0",
            "y18n": "^3.2.1",
            "yargs-parser": "^4.2.0"
          }
        },
        "yargs-parser": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-4.2.1.tgz",
          "integrity": "sha1-KczqwNxPA8bIe0qfIX3RjJ90hxw=",
          "dev": true,
          "requires": {
            "camelcase": "^3.0.0"
          }
        }
      }
    },
    "locate-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",
      "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",
      "dev": true,
      "requires": {
        "p-locate": "^3.0.0",
        "path-exists": "^3.0.0"
      }
    },
    "lodash": {
      "version": "4.17.15",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.15.tgz",
      "integrity": "sha512-8xOcRHvCjnocdS5cpwXQXVzmmh5e5+saE2QGoeQmbKmRS6J3VQppPOIt0MnmE+4xlZoumy0GPG0D0MVIQbNA1A==",
      "dev": true
    },
    "lodash.camelcase": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/lodash.camelcase/-/lodash.camelcase-4.3.0.tgz",
      "integrity": "sha1-soqmKIorn8ZRA1x3EfZathkDMaY="
    },
    "lodash.clone": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/lodash.clone/-/lodash.clone-4.5.0.tgz",
      "integrity": "sha1-GVhwRQ9aExkkeN9Lw9I9LeoZB7Y="
    },
    "lodash.clonedeep": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/lodash.clonedeep/-/lodash.clonedeep-4.5.0.tgz",
      "integrity": "sha1-4j8/nE+Pvd6HJSnBBxhXoIblzO8=",
      "dev": true
    },
    "lodash.isfinite": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/lodash.isfinite/-/lodash.isfinite-3.3.2.tgz",
      "integrity": "sha1-+4m2WpqAKBgz8LdHizpRBPiY67M=",
      "dev": true
    },
    "lodash.memoize": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/lodash.memoize/-/lodash.memoize-4.1.2.tgz",
      "integrity": "sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4=",
      "dev": true
    },
    "lodash.uniq": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/lodash.uniq/-/lodash.uniq-4.5.0.tgz",
      "integrity": "sha1-0CJTc662Uq3BvILklFM5qEJ1R3M=",
      "dev": true
    },
    "log-symbols": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/log-symbols/-/log-symbols-3.0.0.tgz",
      "integrity": "sha512-dSkNGuI7iG3mfvDzUuYZyvk5dD9ocYCYzNU6CYDE6+Xqd+gwme6Z00NS3dUh8mq/73HaEtT7m6W+yUPtU6BZnQ==",
      "dev": true,
      "requires": {
        "chalk": "^2.4.2"
      }
    },
    "log4js": {
      "version": "4.5.1",
      "resolved": "https://registry.npmjs.org/log4js/-/log4js-4.5.1.tgz",
      "integrity": "sha512-EEEgFcE9bLgaYUKuozyFfytQM2wDHtXn4tAN41pkaxpNjAykv11GVdeI4tHtmPWW4Xrgh9R/2d7XYghDVjbKKw==",
      "dev": true,
      "requires": {
        "date-format": "^2.0.0",
        "debug": "^4.1.1",
        "flatted": "^2.0.0",
        "rfdc": "^1.1.4",
        "streamroller": "^1.0.6"
      }
    },
    "loglevel": {
      "version": "1.6.7",
      "resolved": "https://registry.npmjs.org/loglevel/-/loglevel-1.6.7.tgz",
      "integrity": "sha512-cY2eLFrQSAfVPhCgH1s7JI73tMbg9YC3v3+ZHVW67sBS7UxWzNEk/ZBbSfLykBWHp33dqqtOv82gjhKEi81T/A==",
      "dev": true
    },
    "long": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/long/-/long-4.0.0.tgz",
      "integrity": "sha512-XsP+KhQif4bjX1kbuSiySJFNAehNxgLb6hPRGJ9QsUr8ajHkuXGdrHmFUTUUXhDwVX2R5bY4JNZEwbUiMhV+MA=="
    },
    "loose-envify": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
      "dev": true,
      "requires": {
        "js-tokens": "^3.0.0 || ^4.0.0"
      }
    },
    "lowercase-keys": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-1.0.1.tgz",
      "integrity": "sha512-G2Lj61tXDnVFFOi8VZds+SoQjtQC3dgokKdDG2mTm1tx4m50NUHBOZSBwQQHyy0V12A0JTG4icfZQH+xPyh8VA=="
    },
    "lru-cache": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
      "dev": true,
      "requires": {
        "yallist": "^3.0.2"
      },
      "dependencies": {
        "yallist": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
          "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
          "dev": true
        }
      }
    },
    "magic-string": {
      "version": "0.25.4",
      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.25.4.tgz",
      "integrity": "sha512-oycWO9nEVAP2RVPbIoDoA4Y7LFIJ3xRYov93gAyJhZkET1tNuB0u7uWkZS2LpBWTJUWnmau/To8ECWRC+jKNfw==",
      "dev": true,
      "requires": {
        "sourcemap-codec": "^1.4.4"
      }
    },
    "make-dir": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-2.1.0.tgz",
      "integrity": "sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==",
      "dev": true,
      "requires": {
        "pify": "^4.0.1",
        "semver": "^5.6.0"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "make-error": {
      "version": "1.3.6",
      "resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.6.tgz",
      "integrity": "sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==",
      "dev": true
    },
    "make-fetch-happen": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/make-fetch-happen/-/make-fetch-happen-5.0.2.tgz",
      "integrity": "sha512-07JHC0r1ykIoruKO8ifMXu+xEU8qOXDFETylktdug6vJDACnP+HKevOu3PXyNPzFyTSlz8vrBYlBO1JZRe8Cag==",
      "dev": true,
      "requires": {
        "agentkeepalive": "^3.4.1",
        "cacache": "^12.0.0",
        "http-cache-semantics": "^3.8.1",
        "http-proxy-agent": "^2.1.0",
        "https-proxy-agent": "^2.2.3",
        "lru-cache": "^5.1.1",
        "mississippi": "^3.0.0",
        "node-fetch-npm": "^2.0.2",
        "promise-retry": "^1.1.1",
        "socks-proxy-agent": "^4.0.0",
        "ssri": "^6.0.0"
      },
      "dependencies": {
        "cacache": {
          "version": "12.0.3",
          "resolved": "https://registry.npmjs.org/cacache/-/cacache-12.0.3.tgz",
          "integrity": "sha512-kqdmfXEGFepesTuROHMs3MpFLWrPkSSpRqOw80RCflZXy/khxaArvFrQ7uJxSUduzAufc6G0g1VUCOZXxWavPw==",
          "dev": true,
          "requires": {
            "bluebird": "^3.5.5",
            "chownr": "^1.1.1",
            "figgy-pudding": "^3.5.1",
            "glob": "^7.1.4",
            "graceful-fs": "^4.1.15",
            "infer-owner": "^1.0.3",
            "lru-cache": "^5.1.1",
            "mississippi": "^3.0.0",
            "mkdirp": "^0.5.1",
            "move-concurrently": "^1.0.1",
            "promise-inflight": "^1.0.1",
            "rimraf": "^2.6.3",
            "ssri": "^6.0.1",
            "unique-filename": "^1.1.1",
            "y18n": "^4.0.0"
          }
        },
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        },
        "ssri": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/ssri/-/ssri-6.0.1.tgz",
          "integrity": "sha512-3Wge10hNcT1Kur4PDFwEieXSCMCJs/7WvSACcrMYrNp+b8kDL1/0wJch5Ni2WrtwEa2IO8OsVfeKIciKCDx/QA==",
          "dev": true,
          "requires": {
            "figgy-pudding": "^3.5.1"
          }
        }
      }
    },
    "mamacro": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/mamacro/-/mamacro-0.0.3.tgz",
      "integrity": "sha512-qMEwh+UujcQ+kbz3T6V+wAmO2U8veoq2w+3wY8MquqwVA3jChfwY+Tk52GZKDfACEPjuZ7r2oJLejwpt8jtwTA==",
      "dev": true
    },
    "map-age-cleaner": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/map-age-cleaner/-/map-age-cleaner-0.1.3.tgz",
      "integrity": "sha512-bJzx6nMoP6PDLPBFmg7+xRKeFZvFboMrGlxmNj9ClvX53KrmvM5bXFXEWjbz4cz1AFn+jWJ9z/DJSz7hrs0w3w==",
      "dev": true,
      "requires": {
        "p-defer": "^1.0.0"
      }
    },
    "map-cache": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/map-cache/-/map-cache-0.2.2.tgz",
      "integrity": "sha1-wyq9C9ZSXZsFFkW7TyasXcmKDb8=",
      "dev": true
    },
    "map-visit": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/map-visit/-/map-visit-1.0.0.tgz",
      "integrity": "sha1-7Nyo8TFE5mDxtb1B8S80edmN+48=",
      "dev": true,
      "requires": {
        "object-visit": "^1.0.0"
      }
    },
    "md5.js": {
      "version": "1.3.5",
      "resolved": "https://registry.npmjs.org/md5.js/-/md5.js-1.3.5.tgz",
      "integrity": "sha512-xitP+WxNPcTTOgnTJcrhM0xvdPepipPSf3I8EIpGKeFLjt3PlJLIDG3u8EX53ZIubkb+5U2+3rELYpEhHhzdkg==",
      "requires": {
        "hash-base": "^3.0.0",
        "inherits": "^2.0.1",
        "safe-buffer": "^5.1.2"
      }
    },
    "mdn-data": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/mdn-data/-/mdn-data-2.0.4.tgz",
      "integrity": "sha512-iV3XNKw06j5Q7mi6h+9vbx23Tv7JkjEVgKHW4pimwyDGWm0OIQntJJ+u1C6mg6mK1EaTv42XQ7w76yuzH7M2cA==",
      "dev": true
    },
    "media-typer": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
      "integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g="
    },
    "mem": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/mem/-/mem-4.3.0.tgz",
      "integrity": "sha512-qX2bG48pTqYRVmDB37rn/6PT7LcR8T7oAX3bf99u1Tt1nzxYfxkgqDwUwolPlXweM0XzBOBFzSx4kfp7KP1s/w==",
      "dev": true,
      "requires": {
        "map-age-cleaner": "^0.1.1",
        "mimic-fn": "^2.0.0",
        "p-is-promise": "^2.0.0"
      }
    },
    "memory-fs": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/memory-fs/-/memory-fs-0.5.0.tgz",
      "integrity": "sha512-jA0rdU5KoQMC0e6ppoNRtpp6vjFq6+NY7r8hywnC7V+1Xj/MtHwGIbB1QaK/dunyjWteJzmkpd7ooeWg10T7GA==",
      "dev": true,
      "requires": {
        "errno": "^0.1.3",
        "readable-stream": "^2.0.1"
      }
    },
    "merge-descriptors": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz",
      "integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E="
    },
    "merge-source-map": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/merge-source-map/-/merge-source-map-1.1.0.tgz",
      "integrity": "sha512-Qkcp7P2ygktpMPh2mCQZaf3jhN6D3Z/qVZHSdWvQ+2Ef5HgRAPBO57A77+ENm0CPx2+1Ce/MYKi3ymqdfuqibw==",
      "dev": true,
      "requires": {
        "source-map": "^0.6.1"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "merge-stream": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz",
      "integrity": "sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==",
      "dev": true
    },
    "methods": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
      "integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4="
    },
    "micromatch": {
      "version": "3.1.10",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-3.1.10.tgz",
      "integrity": "sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==",
      "dev": true,
      "requires": {
        "arr-diff": "^4.0.0",
        "array-unique": "^0.3.2",
        "braces": "^2.3.1",
        "define-property": "^2.0.2",
        "extend-shallow": "^3.0.2",
        "extglob": "^2.0.4",
        "fragment-cache": "^0.2.1",
        "kind-of": "^6.0.2",
        "nanomatch": "^1.2.9",
        "object.pick": "^1.3.0",
        "regex-not": "^1.0.0",
        "snapdragon": "^0.8.1",
        "to-regex": "^3.0.2"
      },
      "dependencies": {
        "braces": {
          "version": "2.3.2",
          "resolved": "https://registry.npmjs.org/braces/-/braces-2.3.2.tgz",
          "integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",
          "dev": true,
          "requires": {
            "arr-flatten": "^1.1.0",
            "array-unique": "^0.3.2",
            "extend-shallow": "^2.0.1",
            "fill-range": "^4.0.0",
            "isobject": "^3.0.1",
            "repeat-element": "^1.1.2",
            "snapdragon": "^0.8.1",
            "snapdragon-node": "^2.0.1",
            "split-string": "^3.0.2",
            "to-regex": "^3.0.1"
          },
          "dependencies": {
            "extend-shallow": {
              "version": "2.0.1",
              "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
              "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
              "dev": true,
              "requires": {
                "is-extendable": "^0.1.0"
              }
            }
          }
        },
        "fill-range": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz",
          "integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",
          "dev": true,
          "requires": {
            "extend-shallow": "^2.0.1",
            "is-number": "^3.0.0",
            "repeat-string": "^1.6.1",
            "to-regex-range": "^2.1.0"
          },
          "dependencies": {
            "extend-shallow": {
              "version": "2.0.1",
              "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
              "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
              "dev": true,
              "requires": {
                "is-extendable": "^0.1.0"
              }
            }
          }
        },
        "is-number": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
          "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
          "dev": true,
          "requires": {
            "kind-of": "^3.0.2"
          },
          "dependencies": {
            "kind-of": {
              "version": "3.2.2",
              "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
              "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
              "dev": true,
              "requires": {
                "is-buffer": "^1.1.5"
              }
            }
          }
        },
        "to-regex-range": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz",
          "integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",
          "dev": true,
          "requires": {
            "is-number": "^3.0.0",
            "repeat-string": "^1.6.1"
          }
        }
      }
    },
    "miller-rabin": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/miller-rabin/-/miller-rabin-4.0.1.tgz",
      "integrity": "sha512-115fLhvZVqWwHPbClyntxEVfVDfl9DLLTuJvq3g2O/Oxi8AiNouAHvDSzHS0viUJc+V5vm3eq91Xwqn9dp4jRA==",
      "requires": {
        "bn.js": "^4.0.0",
        "brorand": "^1.0.1"
      }
    },
    "mime": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
      "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg=="
    },
    "mime-db": {
      "version": "1.43.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.43.0.tgz",
      "integrity": "sha512-+5dsGEEovYbT8UY9yD7eE4XTc4UwJ1jBYlgaQQF38ENsKR3wj/8q8RFZrF9WIZpB2V1ArTVFUva8sAul1NzRzQ=="
    },
    "mime-types": {
      "version": "2.1.26",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.26.tgz",
      "integrity": "sha512-01paPWYgLrkqAyrlDorC1uDwl2p3qZT7yl806vW7DvDoxwXi46jsjFbg+WdwotBIk6/MbEhO/dh5aZ5sNj/dWQ==",
      "requires": {
        "mime-db": "1.43.0"
      }
    },
    "mimic-fn": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz",
      "integrity": "sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==",
      "dev": true
    },
    "mimic-response": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz",
      "integrity": "sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ=="
    },
    "min-document": {
      "version": "2.19.0",
      "resolved": "https://registry.npmjs.org/min-document/-/min-document-2.19.0.tgz",
      "integrity": "sha1-e9KC4/WELtKVu3SM3Z8f+iyCRoU=",
      "requires": {
        "dom-walk": "^0.1.0"
      }
    },
    "mini-css-extract-plugin": {
      "version": "0.8.0",
      "resolved": "https://registry.npmjs.org/mini-css-extract-plugin/-/mini-css-extract-plugin-0.8.0.tgz",
      "integrity": "sha512-MNpRGbNA52q6U92i0qbVpQNsgk7LExy41MdAlG84FeytfDOtRIf/mCHdEgG8rpTKOaNKiqUnZdlptF469hxqOw==",
      "dev": true,
      "requires": {
        "loader-utils": "^1.1.0",
        "normalize-url": "1.9.1",
        "schema-utils": "^1.0.0",
        "webpack-sources": "^1.1.0"
      },
      "dependencies": {
        "normalize-url": {
          "version": "1.9.1",
          "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-1.9.1.tgz",
          "integrity": "sha1-LMDWazHqIwNkWENuNiDYWVTGbDw=",
          "dev": true,
          "requires": {
            "object-assign": "^4.0.1",
            "prepend-http": "^1.0.0",
            "query-string": "^4.1.0",
            "sort-keys": "^1.0.0"
          }
        }
      }
    },
    "minimalistic-assert": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz",
      "integrity": "sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A=="
    },
    "minimalistic-crypto-utils": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/minimalistic-crypto-utils/-/minimalistic-crypto-utils-1.0.1.tgz",
      "integrity": "sha1-9sAMHAsIIkblxNmd+4x8CDsrWCo="
    },
    "minimatch": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",
      "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",
      "dev": true,
      "requires": {
        "brace-expansion": "^1.1.7"
      }
    },
    "minimist": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.5.tgz",
      "integrity": "sha512-FM9nNUYrRBAELZQT3xeZQ7fmMOBg6nWNmJKTcgsJeaLstP/UODVpGsr5OhXhhXg6f+qtJ8uiZ+PUxkDWcgIXLw==",
      "dev": true
    },
    "minipass": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-3.1.1.tgz",
      "integrity": "sha512-UFqVihv6PQgwj8/yTGvl9kPz7xIAY+R5z6XYjRInD3Gk3qx6QGSD6zEcpeG4Dy/lQnv1J6zv8ejV90hyYIKf3w==",
      "dev": true,
      "requires": {
        "yallist": "^4.0.0"
      }
    },
    "minipass-collect": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/minipass-collect/-/minipass-collect-1.0.2.tgz",
      "integrity": "sha512-6T6lH0H8OG9kITm/Jm6tdooIbogG9e0tLgpY6mphXSm/A9u8Nq1ryBG+Qspiub9LjWlBPsPS3tWQ/Botq4FdxA==",
      "dev": true,
      "requires": {
        "minipass": "^3.0.0"
      }
    },
    "minipass-flush": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/minipass-flush/-/minipass-flush-1.0.5.tgz",
      "integrity": "sha512-JmQSYYpPUqX5Jyn1mXaRwOda1uQ8HP5KAT/oDSLCzt1BYRhQU0/hDtsB1ufZfEEzMZ9aAVmsBw8+FWsIXlClWw==",
      "dev": true,
      "requires": {
        "minipass": "^3.0.0"
      }
    },
    "minipass-pipeline": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/minipass-pipeline/-/minipass-pipeline-1.2.2.tgz",
      "integrity": "sha512-3JS5A2DKhD2g0Gg8x3yamO0pj7YeKGwVlDS90pF++kxptwx/F+B//roxf9SqYil5tQo65bijy+dAuAFZmYOouA==",
      "dev": true,
      "requires": {
        "minipass": "^3.0.0"
      }
    },
    "minizlib": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-1.3.3.tgz",
      "integrity": "sha512-6ZYMOEnmVsdCeTJVE0W9ZD+pVnE8h9Hma/iOwwRDsdQoePpoX56/8B6z3P9VNwppJuBKNRuFDRNRqRWexT9G9Q==",
      "requires": {
        "minipass": "^2.9.0"
      },
      "dependencies": {
        "minipass": {
          "version": "2.9.0",
          "resolved": "https://registry.npmjs.org/minipass/-/minipass-2.9.0.tgz",
          "integrity": "sha512-wxfUjg9WebH+CUDX/CdbRlh5SmfZiy/hpkxaRI16Y9W56Pa75sWgd/rvFilSgrauD9NyFymP/+JFV3KwzIsJeg==",
          "requires": {
            "safe-buffer": "^5.1.2",
            "yallist": "^3.0.0"
          }
        },
        "yallist": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
          "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g=="
        }
      }
    },
    "mississippi": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/mississippi/-/mississippi-3.0.0.tgz",
      "integrity": "sha512-x471SsVjUtBRtcvd4BzKE9kFC+/2TeWgKCgw0bZcw1b9l2X3QX5vCWgF+KaZaYm87Ss//rHnWryupDrgLvmSkA==",
      "dev": true,
      "requires": {
        "concat-stream": "^1.5.0",
        "duplexify": "^3.4.2",
        "end-of-stream": "^1.1.0",
        "flush-write-stream": "^1.0.0",
        "from2": "^2.1.0",
        "parallel-transform": "^1.1.0",
        "pump": "^3.0.0",
        "pumpify": "^1.3.3",
        "stream-each": "^1.1.0",
        "through2": "^2.0.0"
      }
    },
    "mitt": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/mitt/-/mitt-1.2.0.tgz",
      "integrity": "sha512-r6lj77KlwqLhIUku9UWYes7KJtsczvolZkzp8hbaDPPaE24OmWl5s539Mytlj22siEQKosZ26qCBgda2PKwoJw==",
      "dev": true
    },
    "mixin-deep": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/mixin-deep/-/mixin-deep-1.3.2.tgz",
      "integrity": "sha512-WRoDn//mXBiJ1H40rqa3vH0toePwSsGb45iInWlTySa+Uu4k3tYUSxa2v1KqAiLtvlrSzaExqS1gtk96A9zvEA==",
      "dev": true,
      "requires": {
        "for-in": "^1.0.2",
        "is-extendable": "^1.0.1"
      },
      "dependencies": {
        "is-extendable": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz",
          "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",
          "dev": true,
          "requires": {
            "is-plain-object": "^2.0.4"
          }
        }
      }
    },
    "mkdirp": {
      "version": "0.5.1",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz",
      "integrity": "sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=",
      "requires": {
        "minimist": "0.0.8"
      },
      "dependencies": {
        "minimist": {
          "version": "0.0.8",
          "resolved": "https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz",
          "integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0="
        }
      }
    },
    "mkdirp-promise": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/mkdirp-promise/-/mkdirp-promise-5.0.1.tgz",
      "integrity": "sha1-6bj2jlUsaKnBcTuEiD96HdA5uKE=",
      "requires": {
        "mkdirp": "*"
      }
    },
    "mock-fs": {
      "version": "4.11.0",
      "resolved": "https://registry.npmjs.org/mock-fs/-/mock-fs-4.11.0.tgz",
      "integrity": "sha512-Yp4o3/ZA15wsXqJTT+R+9w2AYIkD1i80Lds47wDbuUhOvQvm+O2EfjFZSz0pMgZZSPHRhGxgcd2+GL4+jZMtdw=="
    },
    "moment": {
      "version": "2.24.0",
      "resolved": "https://registry.npmjs.org/moment/-/moment-2.24.0.tgz",
      "integrity": "sha512-bV7f+6l2QigeBBZSM/6yTNq4P2fNpSWj/0e7jQcy87A8e7o2nAfP/34/2ky5Vw4B9S446EtIhodAzkFCcR4dQg==",
      "dev": true
    },
    "move-concurrently": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/move-concurrently/-/move-concurrently-1.0.1.tgz",
      "integrity": "sha1-viwAX9oy4LKa8fBdfEszIUxwH5I=",
      "dev": true,
      "requires": {
        "aproba": "^1.1.1",
        "copy-concurrently": "^1.0.0",
        "fs-write-stream-atomic": "^1.0.8",
        "mkdirp": "^0.5.1",
        "rimraf": "^2.5.4",
        "run-queue": "^1.0.3"
      },
      "dependencies": {
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        }
      }
    },
    "ms": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
      "dev": true
    },
    "multicast-dns": {
      "version": "6.2.3",
      "resolved": "https://registry.npmjs.org/multicast-dns/-/multicast-dns-6.2.3.tgz",
      "integrity": "sha512-ji6J5enbMyGRHIAkAOu3WdV8nggqviKCEKtXcOqfphZZtQrmHKycfynJ2V7eVPUA4NhJ6V7Wf4TmGbTwKE9B6g==",
      "dev": true,
      "requires": {
        "dns-packet": "^1.3.1",
        "thunky": "^1.0.2"
      }
    },
    "multicast-dns-service-types": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/multicast-dns-service-types/-/multicast-dns-service-types-1.1.0.tgz",
      "integrity": "sha1-iZ8R2WhuXgXLkbNdXw5jt3PPyQE=",
      "dev": true
    },
    "mustache": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/mustache/-/mustache-4.0.1.tgz",
      "integrity": "sha512-yL5VE97+OXn4+Er3THSmTdCFCtx5hHWzrolvH+JObZnUYwuaG7XV+Ch4fR2cIrcYI0tFHxS7iyFYl14bW8y2sA=="
    },
    "mute-stream": {
      "version": "0.0.8",
      "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.8.tgz",
      "integrity": "sha512-nnbWWOkoWyUsTjKrhgD0dcz22mdkSnpYqbEjIm2nhwhuxlSkpywJmBo8h0ZqJdkp73mb90SssHkN4rsRaBAfAA==",
      "dev": true
    },
    "nan": {
      "version": "2.14.0",
      "resolved": "https://registry.npmjs.org/nan/-/nan-2.14.0.tgz",
      "integrity": "sha512-INOFj37C7k3AfaNTtX8RhsTw7qRy7eLET14cROi9+5HAVbbHuIWUHEauBv5qT4Av2tWasiTY1Jw6puUNqRJXQg=="
    },
    "nano-json-stream-parser": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/nano-json-stream-parser/-/nano-json-stream-parser-0.1.2.tgz",
      "integrity": "sha1-DMj20OK2IrR5xA1JnEbWS3Vcb18="
    },
    "nanomatch": {
      "version": "1.2.13",
      "resolved": "https://registry.npmjs.org/nanomatch/-/nanomatch-1.2.13.tgz",
      "integrity": "sha512-fpoe2T0RbHwBTBUOftAfBPaDEi06ufaUai0mE6Yn1kacc3SnTErfb/h+X94VXzI64rKFHYImXSvdwGGCmwOqCA==",
      "dev": true,
      "requires": {
        "arr-diff": "^4.0.0",
        "array-unique": "^0.3.2",
        "define-property": "^2.0.2",
        "extend-shallow": "^3.0.2",
        "fragment-cache": "^0.2.1",
        "is-windows": "^1.0.2",
        "kind-of": "^6.0.2",
        "object.pick": "^1.3.0",
        "regex-not": "^1.0.0",
        "snapdragon": "^0.8.1",
        "to-regex": "^3.0.1"
      }
    },
    "nearlib": {
      "version": "0.22.0",
      "resolved": "https://registry.npmjs.org/nearlib/-/nearlib-0.22.0.tgz",
      "integrity": "sha512-6yTc5Ti5oHFak8GSvuzHF7gTRIXRDIs822LiIqJWqoJ5emWktAZqWowS9taAazfG/joU2H0B3WX5Z46oIv4U0w==",
      "requires": {
        "@types/bn.js": "^4.11.5",
        "bn.js": "^5.0.0",
        "bs58": "^4.0.0",
        "error-polyfill": "^0.1.2",
        "http-errors": "^1.7.2",
        "js-sha256": "^0.9.0",
        "mustache": "^4.0.0",
        "node-fetch": "^2.3.0",
        "text-encoding-utf-8": "^1.0.2",
        "tweetnacl": "^1.0.1"
      },
      "dependencies": {
        "bn.js": {
          "version": "5.1.1",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-5.1.1.tgz",
          "integrity": "sha512-IUTD/REb78Z2eodka1QZyyEk66pciRcP6Sroka0aI3tG/iwIdYLrBD62RsubR7vqdt3WyX8p4jxeatzmRSphtA=="
        },
        "tweetnacl": {
          "version": "1.0.3",
          "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-1.0.3.tgz",
          "integrity": "sha512-6rt+RN7aOi1nGMyC4Xa5DdYiukl2UWCbcJft7YhxReBGQD7OAM8Pbxw6YMo4r2diNEA8FEmu32YOn9rhaiE5yw=="
        }
      }
    },
    "negotiator": {
      "version": "0.6.2",
      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.2.tgz",
      "integrity": "sha512-hZXc7K2e+PgeI1eDBe/10Ard4ekbfrrqG8Ep+8Jmf4JID2bNg7NvCPOZN+kfF574pFQI7mum2AUqDidoKqcTOw=="
    },
    "neo-async": {
      "version": "2.6.1",
      "resolved": "https://registry.npmjs.org/neo-async/-/neo-async-2.6.1.tgz",
      "integrity": "sha512-iyam8fBuCUpWeKPGpaNMetEocMt364qkCsfL9JuhjXX6dRnguRVOfk2GZaDpPjcOKiiXCPINZC1GczQ7iTq3Zw==",
      "dev": true
    },
    "next-tick": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/next-tick/-/next-tick-1.0.0.tgz",
      "integrity": "sha1-yobR/ogoFpsBICCOPchCS524NCw="
    },
    "ngx-filesaver": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/ngx-filesaver/-/ngx-filesaver-8.1.0.tgz",
      "integrity": "sha512-xAwThsB/ap9qs7BRgW+mJPWBK60uaqkfPnw3vzbykTdfIvGf62U/6osDCq4TCPl/POWLFui6b3Bu+gfDMqoZhw==",
      "requires": {
        "tslib": "^1.9.0"
      }
    },
    "ngx-material-file-input": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/ngx-material-file-input/-/ngx-material-file-input-2.1.1.tgz",
      "integrity": "sha512-FbaIjiJnL6BZtZYWLvMSn9aSaM62AZaJegloTUphmLz5jopXPzE5W+3aC+dsf9h1IIqHSCLcyv0w+qH0ypBhMA=="
    },
    "nice-try": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/nice-try/-/nice-try-1.0.5.tgz",
      "integrity": "sha512-1nh45deeb5olNY7eX82BkPO7SSxR5SSYJiPTrTdFUVYwAl8CKMA5N9PjTYkHiRjisVcxcQ1HXdLhx2qxxJzLNQ==",
      "dev": true
    },
    "node-fetch": {
      "version": "2.6.0",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.0.tgz",
      "integrity": "sha512-8dG4H5ujfvFiqDmVu9fQ5bOHUC15JMjMY/Zumv26oOvvVJjM67KF8koCWIabKQ1GJIa9r2mMZscBq/TbdOcmNA=="
    },
    "node-fetch-npm": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/node-fetch-npm/-/node-fetch-npm-2.0.3.tgz",
      "integrity": "sha512-DgwoKEsqLnFZtk3ap7GWBHcHwnUhsNmQqEDcdjfQ8GofLEFJ081NAd4Uin3R7RFZBWVJCwHISw1oaEqPgSLloA==",
      "dev": true,
      "requires": {
        "encoding": "^0.1.11",
        "json-parse-better-errors": "^1.0.0",
        "safe-buffer": "^5.1.1"
      }
    },
    "node-forge": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/node-forge/-/node-forge-0.9.0.tgz",
      "integrity": "sha512-7ASaDa3pD+lJ3WvXFsxekJQelBKRpne+GOVbLbtHYdd7pFspyeuJHnWfLplGf3SwKGbfs/aYl5V/JCIaHVUKKQ==",
      "dev": true
    },
    "node-libs-browser": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/node-libs-browser/-/node-libs-browser-2.2.1.tgz",
      "integrity": "sha512-h/zcD8H9kaDZ9ALUWwlBUDo6TKF8a7qBSCSEGfjTVIYeqsioSKaAX+BN7NgiMGp6iSIXZ3PxgCu8KS3b71YK5Q==",
      "dev": true,
      "requires": {
        "assert": "^1.1.1",
        "browserify-zlib": "^0.2.0",
        "buffer": "^4.3.0",
        "console-browserify": "^1.1.0",
        "constants-browserify": "^1.0.0",
        "crypto-browserify": "^3.11.0",
        "domain-browser": "^1.1.1",
        "events": "^3.0.0",
        "https-browserify": "^1.0.0",
        "os-browserify": "^0.3.0",
        "path-browserify": "0.0.1",
        "process": "^0.11.10",
        "punycode": "^1.2.4",
        "querystring-es3": "^0.2.0",
        "readable-stream": "^2.3.3",
        "stream-browserify": "^2.0.1",
        "stream-http": "^2.7.2",
        "string_decoder": "^1.0.0",
        "timers-browserify": "^2.0.4",
        "tty-browserify": "0.0.0",
        "url": "^0.11.0",
        "util": "^0.11.0",
        "vm-browserify": "^1.0.1"
      },
      "dependencies": {
        "punycode": {
          "version": "1.4.1",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz",
          "integrity": "sha1-wNWmOycYgArY4esPpSachN1BhF4=",
          "dev": true
        }
      }
    },
    "node-releases": {
      "version": "1.1.52",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-1.1.52.tgz",
      "integrity": "sha512-snSiT1UypkgGt2wxPqS6ImEUICbNCMb31yaxWrOLXjhlt2z2/IBpaOxzONExqSm4y5oLnAqjjRWu+wsDzK5yNQ==",
      "dev": true,
      "requires": {
        "semver": "^6.3.0"
      }
    },
    "normalize-package-data": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz",
      "integrity": "sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==",
      "dev": true,
      "requires": {
        "hosted-git-info": "^2.1.4",
        "resolve": "^1.10.0",
        "semver": "2 || 3 || 4 || 5",
        "validate-npm-package-license": "^3.0.1"
      },
      "dependencies": {
        "hosted-git-info": {
          "version": "2.8.8",
          "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.8.8.tgz",
          "integrity": "sha512-f/wzC2QaWBs7t9IYqB4T3sR1xviIViXJRJTWBlx2Gf3g0Xi5vI7Yy4koXQ1c9OYDGHN9sBy1DQ2AB8fqZBWhUg==",
          "dev": true
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "dev": true
    },
    "normalize-range": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
      "integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI=",
      "dev": true
    },
    "normalize-url": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-3.3.0.tgz",
      "integrity": "sha512-U+JJi7duF1o+u2pynbp2zXDW2/PADgC30f0GsHZtRh+HOcXHnw137TrNlyxxRvWW5fjKd3bcLHPxofWuCjaeZg==",
      "dev": true
    },
    "npm-bundled": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/npm-bundled/-/npm-bundled-1.1.1.tgz",
      "integrity": "sha512-gqkfgGePhTpAEgUsGEgcq1rqPXA+tv/aVBlgEzfXwA1yiUJF7xtEt3CtVwOjNYQOVknDk0F20w58Fnm3EtG0fA==",
      "dev": true,
      "requires": {
        "npm-normalize-package-bin": "^1.0.1"
      }
    },
    "npm-normalize-package-bin": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/npm-normalize-package-bin/-/npm-normalize-package-bin-1.0.1.tgz",
      "integrity": "sha512-EPfafl6JL5/rU+ot6P3gRSCpPDW5VmIzX959Ob1+ySFUuuYHWHekXpwdUZcKP5C+DS4GEtdJluwBjnsNDl+fSA==",
      "dev": true
    },
    "npm-package-arg": {
      "version": "6.1.1",
      "resolved": "https://registry.npmjs.org/npm-package-arg/-/npm-package-arg-6.1.1.tgz",
      "integrity": "sha512-qBpssaL3IOZWi5vEKUKW0cO7kzLeT+EQO9W8RsLOZf76KF9E/K9+wH0C7t06HXPpaH8WH5xF1MExLuCwbTqRUg==",
      "dev": true,
      "requires": {
        "hosted-git-info": "^2.7.1",
        "osenv": "^0.1.5",
        "semver": "^5.6.0",
        "validate-npm-package-name": "^3.0.0"
      },
      "dependencies": {
        "hosted-git-info": {
          "version": "2.8.8",
          "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.8.8.tgz",
          "integrity": "sha512-f/wzC2QaWBs7t9IYqB4T3sR1xviIViXJRJTWBlx2Gf3g0Xi5vI7Yy4koXQ1c9OYDGHN9sBy1DQ2AB8fqZBWhUg==",
          "dev": true
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "npm-packlist": {
      "version": "1.4.8",
      "resolved": "https://registry.npmjs.org/npm-packlist/-/npm-packlist-1.4.8.tgz",
      "integrity": "sha512-5+AZgwru5IevF5ZdnFglB5wNlHG1AOOuw28WhUq8/8emhBmLv6jX5by4WJCh7lW0uSYZYS6DXqIsyZVIXRZU9A==",
      "dev": true,
      "requires": {
        "ignore-walk": "^3.0.1",
        "npm-bundled": "^1.0.1",
        "npm-normalize-package-bin": "^1.0.1"
      }
    },
    "npm-pick-manifest": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/npm-pick-manifest/-/npm-pick-manifest-3.0.2.tgz",
      "integrity": "sha512-wNprTNg+X5nf+tDi+hbjdHhM4bX+mKqv6XmPh7B5eG+QY9VARfQPfCEH013H5GqfNj6ee8Ij2fg8yk0mzps1Vw==",
      "dev": true,
      "requires": {
        "figgy-pudding": "^3.5.1",
        "npm-package-arg": "^6.0.0",
        "semver": "^5.4.1"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "npm-registry-fetch": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/npm-registry-fetch/-/npm-registry-fetch-4.0.3.tgz",
      "integrity": "sha512-WGvUx0lkKFhu9MbiGFuT9nG2NpfQ+4dCJwRwwtK2HK5izJEvwDxMeUyqbuMS7N/OkpVCqDorV6rO5E4V9F8lJw==",
      "dev": true,
      "requires": {
        "JSONStream": "^1.3.4",
        "bluebird": "^3.5.1",
        "figgy-pudding": "^3.4.1",
        "lru-cache": "^5.1.1",
        "make-fetch-happen": "^5.0.0",
        "npm-package-arg": "^6.1.0",
        "safe-buffer": "^5.2.0"
      },
      "dependencies": {
        "safe-buffer": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.0.tgz",
          "integrity": "sha512-fZEwUGbVl7kouZs1jCdMLdt95hdIv0ZeHg6L7qPeciMZhZ+/gdesW4wgTARkrFWEpspjEATAzUGPG8N2jJiwbg==",
          "dev": true
        }
      }
    },
    "npm-run-path": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-2.0.2.tgz",
      "integrity": "sha1-NakjLfo11wZ7TLLd8jV7GHFTbF8=",
      "dev": true,
      "requires": {
        "path-key": "^2.0.0"
      }
    },
    "nth-check": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/nth-check/-/nth-check-1.0.2.tgz",
      "integrity": "sha512-WeBOdju8SnzPN5vTUJYxYUxLeXpCaVP5i5e0LF8fg7WORF2Wd7wFX/pk0tYZk7s8T+J7VLy0Da6J1+wCT0AtHg==",
      "dev": true,
      "requires": {
        "boolbase": "~1.0.0"
      }
    },
    "num2fraction": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/num2fraction/-/num2fraction-1.2.2.tgz",
      "integrity": "sha1-b2gragJ6Tp3fpFZM0lidHU5mnt4=",
      "dev": true
    },
    "number-is-nan": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",
      "integrity": "sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0="
    },
    "number-to-bn": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/number-to-bn/-/number-to-bn-1.7.0.tgz",
      "integrity": "sha1-uzYjWS9+X54AMLGXe9QaDFP+HqA=",
      "requires": {
        "bn.js": "4.11.6",
        "strip-hex-prefix": "1.0.0"
      },
      "dependencies": {
        "bn.js": {
          "version": "4.11.6",
          "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.6.tgz",
          "integrity": "sha1-UzRK2xRhehP26N0s4okF0cC6MhU="
        }
      }
    },
    "o3": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/o3/-/o3-1.0.3.tgz",
      "integrity": "sha1-GSzod6iC36Z1HwQSqGX6+y2h2sA=",
      "requires": {
        "capability": "^0.2.5"
      }
    },
    "oauth-sign": {
      "version": "0.9.0",
      "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
      "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ=="
    },
    "object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="
    },
    "object-component": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/object-component/-/object-component-0.0.3.tgz",
      "integrity": "sha1-8MaapQ78lbhmwYb0AKM3acsvEpE=",
      "dev": true
    },
    "object-copy": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/object-copy/-/object-copy-0.1.0.tgz",
      "integrity": "sha1-fn2Fi3gb18mRpBupde04EnVOmYw=",
      "dev": true,
      "requires": {
        "copy-descriptor": "^0.1.0",
        "define-property": "^0.2.5",
        "kind-of": "^3.0.3"
      },
      "dependencies": {
        "define-property": {
          "version": "0.2.5",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^0.1.0"
          }
        },
        "kind-of": {
          "version": "3.2.2",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
          "dev": true,
          "requires": {
            "is-buffer": "^1.1.5"
          }
        }
      }
    },
    "object-inspect": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.7.0.tgz",
      "integrity": "sha512-a7pEHdh1xKIAgTySUGgLMx/xwDZskN1Ud6egYYN3EdRW4ZMPNEDUTF+hwy2LUC+Bl+SyLXANnwz/jyh/qutKUw==",
      "dev": true
    },
    "object-is": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/object-is/-/object-is-1.0.2.tgz",
      "integrity": "sha512-Epah+btZd5wrrfjkJZq1AOB9O6OxUQto45hzFd7lXGrpHPGE0W1k+426yrZV+k6NJOzLNNW/nVsmZdIWsAqoOQ==",
      "dev": true
    },
    "object-keys": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
      "dev": true
    },
    "object-path": {
      "version": "0.9.2",
      "resolved": "https://registry.npmjs.org/object-path/-/object-path-0.9.2.tgz",
      "integrity": "sha1-D9mnT8X60a45aLWGvaXGMr1sBaU=",
      "dev": true
    },
    "object-visit": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/object-visit/-/object-visit-1.0.1.tgz",
      "integrity": "sha1-95xEk68MU3e1n+OdOV5BBC3QRbs=",
      "dev": true,
      "requires": {
        "isobject": "^3.0.0"
      }
    },
    "object.assign": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.0.tgz",
      "integrity": "sha512-exHJeq6kBKj58mqGyTQ9DFvrZC/eR6OwxzoM9YRoGBqrXYonaFyGiFMuc9VZrXf7DarreEwMpurG3dd+CNyW5w==",
      "dev": true,
      "requires": {
        "define-properties": "^1.1.2",
        "function-bind": "^1.1.1",
        "has-symbols": "^1.0.0",
        "object-keys": "^1.0.11"
      }
    },
    "object.getownpropertydescriptors": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/object.getownpropertydescriptors/-/object.getownpropertydescriptors-2.1.0.tgz",
      "integrity": "sha512-Z53Oah9A3TdLoblT7VKJaTDdXdT+lQO+cNpKVnya5JDe9uLvzu1YyY1yFDFrcxrlRgWrEFH0jJtD/IbuwjcEVg==",
      "dev": true,
      "requires": {
        "define-properties": "^1.1.3",
        "es-abstract": "^1.17.0-next.1"
      }
    },
    "object.pick": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/object.pick/-/object.pick-1.3.0.tgz",
      "integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
      "dev": true,
      "requires": {
        "isobject": "^3.0.1"
      }
    },
    "object.values": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/object.values/-/object.values-1.1.1.tgz",
      "integrity": "sha512-WTa54g2K8iu0kmS/us18jEmdv1a4Wi//BZ/DTVYEcH0XhLM5NYdpDHja3gt57VrZLcNAO2WGA+KpWsDBaHt6eA==",
      "dev": true,
      "requires": {
        "define-properties": "^1.1.3",
        "es-abstract": "^1.17.0-next.1",
        "function-bind": "^1.1.1",
        "has": "^1.0.3"
      }
    },
    "oboe": {
      "version": "2.1.4",
      "resolved": "https://registry.npmjs.org/oboe/-/oboe-2.1.4.tgz",
      "integrity": "sha1-IMiM2wwVNxuwQRklfU/dNLCqSfY=",
      "requires": {
        "http-https": "^1.0.0"
      }
    },
    "obuf": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/obuf/-/obuf-1.1.2.tgz",
      "integrity": "sha512-PX1wu0AmAdPqOL1mWhqmlOd8kOIZQwGZw6rh7uby9fTc5lhaOWFLX3I6R1hrF9k3zUY40e6igsLGkDXK92LJNg==",
      "dev": true
    },
    "on-finished": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz",
      "integrity": "sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=",
      "requires": {
        "ee-first": "1.1.1"
      }
    },
    "on-headers": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz",
      "integrity": "sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA==",
      "dev": true
    },
    "once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
      "requires": {
        "wrappy": "1"
      }
    },
    "onetime": {
      "version": "5.1.0",
      "resolved": "https://registry.npmjs.org/onetime/-/onetime-5.1.0.tgz",
      "integrity": "sha512-5NcSkPHhwTVFIQN+TUqXoS5+dlElHXdpAWu9I0HP20YOtIi+aZ0Ct82jdlILDxjLEAWwvm+qj1m6aEtsDVmm6Q==",
      "dev": true,
      "requires": {
        "mimic-fn": "^2.1.0"
      }
    },
    "open": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/open/-/open-7.0.0.tgz",
      "integrity": "sha512-K6EKzYqnwQzk+/dzJAQSBORub3xlBTxMz+ntpZpH/LyCa1o6KjXhuN+2npAaI9jaSmU3R1Q8NWf4KUWcyytGsQ==",
      "dev": true,
      "requires": {
        "is-wsl": "^2.1.0"
      }
    },
    "openurl": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/openurl/-/openurl-1.1.1.tgz",
      "integrity": "sha1-OHW0sO96UsFW8NtB1GCduw+Us4c=",
      "dev": true
    },
    "opn": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/opn/-/opn-5.5.0.tgz",
      "integrity": "sha512-PqHpggC9bLV0VeWcdKhkpxY+3JTzetLSqTCWL/z/tFIbI6G8JCjondXklT1JinczLz2Xib62sSp0T/gKT4KksA==",
      "dev": true,
      "requires": {
        "is-wsl": "^1.1.0"
      },
      "dependencies": {
        "is-wsl": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-1.1.0.tgz",
          "integrity": "sha1-HxbkqiKwTRM2tmGIpmrzxgDDpm0=",
          "dev": true
        }
      }
    },
    "optimist": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/optimist/-/optimist-0.6.1.tgz",
      "integrity": "sha1-2j6nRob6IaGaERwybpDrFaAZZoY=",
      "dev": true,
      "requires": {
        "minimist": "~0.0.1",
        "wordwrap": "~0.0.2"
      },
      "dependencies": {
        "minimist": {
          "version": "0.0.10",
          "resolved": "https://registry.npmjs.org/minimist/-/minimist-0.0.10.tgz",
          "integrity": "sha1-3j+YVD2/lggr5IrRoMfNqDYwHc8=",
          "dev": true
        }
      }
    },
    "optjs": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/optjs/-/optjs-3.2.2.tgz",
      "integrity": "sha1-aabOicRCpEQDFBrS+bNwvVu29O4="
    },
    "ora": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/ora/-/ora-4.0.2.tgz",
      "integrity": "sha512-YUOZbamht5mfLxPmk4M35CD/5DuOkAacxlEUbStVXpBAt4fyhBf+vZHI/HRkI++QUp3sNoeA2Gw4C+hi4eGSig==",
      "dev": true,
      "requires": {
        "chalk": "^2.4.2",
        "cli-cursor": "^3.1.0",
        "cli-spinners": "^2.2.0",
        "is-interactive": "^1.0.0",
        "log-symbols": "^3.0.0",
        "strip-ansi": "^5.2.0",
        "wcwidth": "^1.0.1"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",
          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==",
          "dev": true
        },
        "strip-ansi": {
          "version": "5.2.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",
          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",
          "dev": true,
          "requires": {
            "ansi-regex": "^4.1.0"
          }
        }
      }
    },
    "original": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/original/-/original-1.0.2.tgz",
      "integrity": "sha512-hyBVl6iqqUOJ8FqRe+l/gS8H+kKYjrEndd5Pm1MfBtsEKA038HkkdbAl/72EAXGyonD/PFsvmVG+EvcIpliMBg==",
      "dev": true,
      "requires": {
        "url-parse": "^1.4.3"
      }
    },
    "os-browserify": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/os-browserify/-/os-browserify-0.3.0.tgz",
      "integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc=",
      "dev": true
    },
    "os-homedir": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz",
      "integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M=",
      "dev": true
    },
    "os-locale": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/os-locale/-/os-locale-3.1.0.tgz",
      "integrity": "sha512-Z8l3R4wYWM40/52Z+S265okfFj8Kt2cC2MKY+xNi3kFs+XGI7WXu/I309QQQYbRW4ijiZ+yxs9pqEhJh0DqW3Q==",
      "dev": true,
      "requires": {
        "execa": "^1.0.0",
        "lcid": "^2.0.0",
        "mem": "^4.0.0"
      }
    },
    "os-tmpdir": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz",
      "integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=",
      "dev": true
    },
    "osenv": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/osenv/-/osenv-0.1.5.tgz",
      "integrity": "sha512-0CWcCECdMVc2Rw3U5w9ZjqX6ga6ubk1xDVKxtBQPK7wis/0F2r9T6k4ydGYhecl7YUBxBVxhL5oisPsNxAPe2g==",
      "dev": true,
      "requires": {
        "os-homedir": "^1.0.0",
        "os-tmpdir": "^1.0.0"
      }
    },
    "p-cancelable": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-1.1.0.tgz",
      "integrity": "sha512-s73XxOZ4zpt1edZYZzvhqFa6uvQc1vwUa0K0BdtIZgQMAJj9IbebH+JkgKZc9h+B05PKHLOTl4ajG1BmNrVZlw=="
    },
    "p-defer": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/p-defer/-/p-defer-1.0.0.tgz",
      "integrity": "sha1-n26xgvbJqozXQwBKfU+WsZaw+ww=",
      "dev": true
    },
    "p-finally": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/p-finally/-/p-finally-1.0.0.tgz",
      "integrity": "sha1-P7z7FbiZpEEjs0ttzBi3JDNqLK4="
    },
    "p-is-promise": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/p-is-promise/-/p-is-promise-2.1.0.tgz",
      "integrity": "sha512-Y3W0wlRPK8ZMRbNq97l4M5otioeA5lm1z7bkNkxCka8HSPjR0xRWmpCmc9utiaLP9Jb1eD8BgeIxTW4AIF45Pg==",
      "dev": true
    },
    "p-limit": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.2.2.tgz",
      "integrity": "sha512-WGR+xHecKTr7EbUEhyLSh5Dube9JtdiG78ufaeLxTgpudf/20KqyMioIUZJAezlTIi6evxuoUs9YXc11cU+yzQ==",
      "dev": true,
      "requires": {
        "p-try": "^2.0.0"
      }
    },
    "p-locate": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",
      "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",
      "dev": true,
      "requires": {
        "p-limit": "^2.0.0"
      }
    },
    "p-map": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/p-map/-/p-map-3.0.0.tgz",
      "integrity": "sha512-d3qXVTF/s+W+CdJ5A29wywV2n8CQQYahlgz2bFiA+4eVNJbHJodPZ+/gXwPGh0bOqA+j8S+6+ckmvLGPk1QpxQ==",
      "dev": true,
      "requires": {
        "aggregate-error": "^3.0.0"
      }
    },
    "p-retry": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/p-retry/-/p-retry-3.0.1.tgz",
      "integrity": "sha512-XE6G4+YTTkT2a0UWb2kjZe8xNwf8bIbnqpc/IS/idOBVhyves0mK5OJgeocjx7q5pvX/6m23xuzVPYT1uGM73w==",
      "dev": true,
      "requires": {
        "retry": "^0.12.0"
      }
    },
    "p-timeout": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/p-timeout/-/p-timeout-1.2.1.tgz",
      "integrity": "sha1-XrOzU7f86Z8QGhA4iAuwVOu+o4Y=",
      "requires": {
        "p-finally": "^1.0.0"
      }
    },
    "p-try": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",
      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==",
      "dev": true
    },
    "pacote": {
      "version": "9.5.8",
      "resolved": "https://registry.npmjs.org/pacote/-/pacote-9.5.8.tgz",
      "integrity": "sha512-0Tl8Oi/K0Lo4MZmH0/6IsT3gpGf9eEAznLXEQPKgPq7FscnbUOyopnVpwXlnQdIbCUaojWy1Wd7VMyqfVsRrIw==",
      "dev": true,
      "requires": {
        "bluebird": "^3.5.3",
        "cacache": "^12.0.2",
        "chownr": "^1.1.2",
        "figgy-pudding": "^3.5.1",
        "get-stream": "^4.1.0",
        "glob": "^7.1.3",
        "infer-owner": "^1.0.4",
        "lru-cache": "^5.1.1",
        "make-fetch-happen": "^5.0.0",
        "minimatch": "^3.0.4",
        "minipass": "^2.3.5",
        "mississippi": "^3.0.0",
        "mkdirp": "^0.5.1",
        "normalize-package-data": "^2.4.0",
        "npm-package-arg": "^6.1.0",
        "npm-packlist": "^1.1.12",
        "npm-pick-manifest": "^3.0.0",
        "npm-registry-fetch": "^4.0.0",
        "osenv": "^0.1.5",
        "promise-inflight": "^1.0.1",
        "promise-retry": "^1.1.1",
        "protoduck": "^5.0.1",
        "rimraf": "^2.6.2",
        "safe-buffer": "^5.1.2",
        "semver": "^5.6.0",
        "ssri": "^6.0.1",
        "tar": "^4.4.10",
        "unique-filename": "^1.1.1",
        "which": "^1.3.1"
      },
      "dependencies": {
        "cacache": {
          "version": "12.0.3",
          "resolved": "https://registry.npmjs.org/cacache/-/cacache-12.0.3.tgz",
          "integrity": "sha512-kqdmfXEGFepesTuROHMs3MpFLWrPkSSpRqOw80RCflZXy/khxaArvFrQ7uJxSUduzAufc6G0g1VUCOZXxWavPw==",
          "dev": true,
          "requires": {
            "bluebird": "^3.5.5",
            "chownr": "^1.1.1",
            "figgy-pudding": "^3.5.1",
            "glob": "^7.1.4",
            "graceful-fs": "^4.1.15",
            "infer-owner": "^1.0.3",
            "lru-cache": "^5.1.1",
            "mississippi": "^3.0.0",
            "mkdirp": "^0.5.1",
            "move-concurrently": "^1.0.1",
            "promise-inflight": "^1.0.1",
            "rimraf": "^2.6.3",
            "ssri": "^6.0.1",
            "unique-filename": "^1.1.1",
            "y18n": "^4.0.0"
          }
        },
        "minipass": {
          "version": "2.9.0",
          "resolved": "https://registry.npmjs.org/minipass/-/minipass-2.9.0.tgz",
          "integrity": "sha512-wxfUjg9WebH+CUDX/CdbRlh5SmfZiy/hpkxaRI16Y9W56Pa75sWgd/rvFilSgrauD9NyFymP/+JFV3KwzIsJeg==",
          "dev": true,
          "requires": {
            "safe-buffer": "^5.1.2",
            "yallist": "^3.0.0"
          }
        },
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        },
        "ssri": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/ssri/-/ssri-6.0.1.tgz",
          "integrity": "sha512-3Wge10hNcT1Kur4PDFwEieXSCMCJs/7WvSACcrMYrNp+b8kDL1/0wJch5Ni2WrtwEa2IO8OsVfeKIciKCDx/QA==",
          "dev": true,
          "requires": {
            "figgy-pudding": "^3.5.1"
          }
        },
        "yallist": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
          "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
          "dev": true
        }
      }
    },
    "pako": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/pako/-/pako-1.0.11.tgz",
      "integrity": "sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw==",
      "dev": true
    },
    "parallel-transform": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/parallel-transform/-/parallel-transform-1.2.0.tgz",
      "integrity": "sha512-P2vSmIu38uIlvdcU7fDkyrxj33gTUy/ABO5ZUbGowxNCopBq/OoD42bP4UmMrJoPyk4Uqf0mu3mtWBhHCZD8yg==",
      "dev": true,
      "requires": {
        "cyclist": "^1.0.1",
        "inherits": "^2.0.3",
        "readable-stream": "^2.1.5"
      }
    },
    "parse-asn1": {
      "version": "5.1.5",
      "resolved": "https://registry.npmjs.org/parse-asn1/-/parse-asn1-5.1.5.tgz",
      "integrity": "sha512-jkMYn1dcJqF6d5CpU689bq7w/b5ALS9ROVSpQDPrZsqqesUJii9qutvoT5ltGedNXMO2e16YUWIghG9KxaViTQ==",
      "requires": {
        "asn1.js": "^4.0.0",
        "browserify-aes": "^1.0.0",
        "create-hash": "^1.1.0",
        "evp_bytestokey": "^1.0.0",
        "pbkdf2": "^3.0.3",
        "safe-buffer": "^5.1.1"
      }
    },
    "parse-headers": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/parse-headers/-/parse-headers-2.0.3.tgz",
      "integrity": "sha512-QhhZ+DCCit2Coi2vmAKbq5RGTRcQUOE2+REgv8vdyu7MnYx2eZztegqtTx99TZ86GTIwqiy3+4nQTWZ2tgmdCA=="
    },
    "parse-json": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-4.0.0.tgz",
      "integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",
      "dev": true,
      "requires": {
        "error-ex": "^1.3.1",
        "json-parse-better-errors": "^1.0.1"
      }
    },
    "parse5": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/parse5/-/parse5-4.0.0.tgz",
      "integrity": "sha512-VrZ7eOd3T1Fk4XWNXMgiGBK/z0MG48BWG2uQNU4I72fkQuKUTZpl+u9k+CxEG0twMVzSmXEEz12z5Fnw1jIQFA==",
      "dev": true
    },
    "parseqs": {
      "version": "0.0.5",
      "resolved": "https://registry.npmjs.org/parseqs/-/parseqs-0.0.5.tgz",
      "integrity": "sha1-1SCKNzjkZ2bikbouoXNoSSGouJ0=",
      "dev": true,
      "requires": {
        "better-assert": "~1.0.0"
      }
    },
    "parseuri": {
      "version": "0.0.5",
      "resolved": "https://registry.npmjs.org/parseuri/-/parseuri-0.0.5.tgz",
      "integrity": "sha1-gCBKUNTbt3m/3G6+J3jZDkvOMgo=",
      "dev": true,
      "requires": {
        "better-assert": "~1.0.0"
      }
    },
    "parseurl": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ=="
    },
    "pascalcase": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/pascalcase/-/pascalcase-0.1.1.tgz",
      "integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ=",
      "dev": true
    },
    "path-browserify": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/path-browserify/-/path-browserify-0.0.1.tgz",
      "integrity": "sha512-BapA40NHICOS+USX9SN4tyhq+A2RrN/Ws5F0Z5aMHDp98Fl86lX8Oti8B7uN93L4Ifv4fHOEA+pQw87gmMO/lQ==",
      "dev": true
    },
    "path-dirname": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/path-dirname/-/path-dirname-1.0.2.tgz",
      "integrity": "sha1-zDPSTVJeCZpTiMAzbG4yuRYGCeA=",
      "dev": true
    },
    "path-exists": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz",
      "integrity": "sha1-zg6+ql94yxiSXqfYENe1mwEP1RU=",
      "dev": true
    },
    "path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18=",
      "dev": true
    },
    "path-is-inside": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/path-is-inside/-/path-is-inside-1.0.2.tgz",
      "integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM=",
      "dev": true
    },
    "path-key": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-2.0.1.tgz",
      "integrity": "sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A=",
      "dev": true
    },
    "path-parse": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.6.tgz",
      "integrity": "sha512-GSmOT2EbHrINBf9SR7CDELwlJ8AENk3Qn7OikK4nFYAu3Ote2+JYNVvkpAEQm3/TLNEJFD/xZJjzyxg3KBWOzw==",
      "dev": true
    },
    "path-to-regexp": {
      "version": "0.1.7",
      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz",
      "integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w="
    },
    "path-type": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/path-type/-/path-type-3.0.0.tgz",
      "integrity": "sha512-T2ZUsdZFHgA3u4e5PfPbjd7HDDpxPnQb5jN0SrDsjNSuVXHJqtwTnWqG0B1jZrgmJ/7lj1EmVIByWt1gxGkWvg==",
      "dev": true,
      "requires": {
        "pify": "^3.0.0"
      },
      "dependencies": {
        "pify": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",
          "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=",
          "dev": true
        }
      }
    },
    "pathval": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/pathval/-/pathval-1.1.0.tgz",
      "integrity": "sha1-uULm1L3mUwBe9rcTYd74cn0GReA="
    },
    "pbkdf2": {
      "version": "3.0.17",
      "resolved": "https://registry.npmjs.org/pbkdf2/-/pbkdf2-3.0.17.tgz",
      "integrity": "sha512-U/il5MsrZp7mGg3mSQfn742na2T+1/vHDCG5/iTI3X9MKUuYUZVLQhyRsg06mCgDBTd57TxzgZt7P+fYfjRLtA==",
      "requires": {
        "create-hash": "^1.1.2",
        "create-hmac": "^1.1.4",
        "ripemd160": "^2.0.1",
        "safe-buffer": "^5.0.1",
        "sha.js": "^2.4.8"
      }
    },
    "pend": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/pend/-/pend-1.2.0.tgz",
      "integrity": "sha1-elfrVQpng/kRUzH89GY9XI4AelA="
    },
    "performance-now": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
      "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns="
    },
    "picomatch": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.2.1.tgz",
      "integrity": "sha512-ISBaA8xQNmwELC7eOjqFKMESB2VIqt4PPDD0nsS95b/9dZXvVKOlz9keMSnoGGKcOHXfTvDD6WMaRoSc9UuhRA==",
      "dev": true
    },
    "pify": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",
      "integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==",
      "dev": true
    },
    "pinkie": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz",
      "integrity": "sha1-clVrgM+g1IqXToDnckjoDtT3+HA="
    },
    "pinkie-promise": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz",
      "integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
      "requires": {
        "pinkie": "^2.0.0"
      }
    },
    "pkg-dir": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-3.0.0.tgz",
      "integrity": "sha512-/E57AYkoeQ25qkxMj5PBOVgF8Kiu/h7cYS30Z5+R7WaiCCBfLq58ZI/dSeaEKb9WVJV5n/03QwrN3IeWIFllvw==",
      "dev": true,
      "requires": {
        "find-up": "^3.0.0"
      }
    },
    "pkg-up": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/pkg-up/-/pkg-up-3.1.0.tgz",
      "integrity": "sha512-nDywThFk1i4BQK4twPQ6TA4RT8bDY96yeuCVBWL3ePARCiEKDRSrNGbFIgUJpLp+XeIR65v8ra7WuJOFUBtkMA==",
      "dev": true,
      "requires": {
        "find-up": "^3.0.0"
      }
    },
    "portfinder": {
      "version": "1.0.25",
      "resolved": "https://registry.npmjs.org/portfinder/-/portfinder-1.0.25.tgz",
      "integrity": "sha512-6ElJnHBbxVA1XSLgBp7G1FiCkQdlqGzuF7DswL5tcea+E8UpuvPU7beVAjjRwCioTS9ZluNbu+ZyRvgTsmqEBg==",
      "dev": true,
      "requires": {
        "async": "^2.6.2",
        "debug": "^3.1.1",
        "mkdirp": "^0.5.1"
      },
      "dependencies": {
        "debug": {
          "version": "3.2.6",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
          "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        }
      }
    },
    "portscanner": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/portscanner/-/portscanner-2.1.1.tgz",
      "integrity": "sha1-6rtAnk3iSVD1oqUW01rnaTQ/u5Y=",
      "dev": true,
      "requires": {
        "async": "1.5.2",
        "is-number-like": "^1.0.3"
      },
      "dependencies": {
        "async": {
          "version": "1.5.2",
          "resolved": "https://registry.npmjs.org/async/-/async-1.5.2.tgz",
          "integrity": "sha1-7GphrlZIDAw8skHJVhjiCJL5Zyo=",
          "dev": true
        }
      }
    },
    "posix-character-classes": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/posix-character-classes/-/posix-character-classes-0.1.1.tgz",
      "integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs=",
      "dev": true
    },
    "postcss": {
      "version": "7.0.21",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-7.0.21.tgz",
      "integrity": "sha512-uIFtJElxJo29QC753JzhidoAhvp/e/Exezkdhfmt8AymWT6/5B7W1WmponYWkHk2eg6sONyTch0A3nkMPun3SQ==",
      "dev": true,
      "requires": {
        "chalk": "^2.4.2",
        "source-map": "^0.6.1",
        "supports-color": "^6.1.0"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "supports-color": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",
          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "postcss-calc": {
      "version": "7.0.2",
      "resolved": "https://registry.npmjs.org/postcss-calc/-/postcss-calc-7.0.2.tgz",
      "integrity": "sha512-rofZFHUg6ZIrvRwPeFktv06GdbDYLcGqh9EwiMutZg+a0oePCCw1zHOEiji6LCpyRcjTREtPASuUqeAvYlEVvQ==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.27",
        "postcss-selector-parser": "^6.0.2",
        "postcss-value-parser": "^4.0.2"
      },
      "dependencies": {
        "postcss": {
          "version": "7.0.27",
          "resolved": "https://registry.npmjs.org/postcss/-/postcss-7.0.27.tgz",
          "integrity": "sha512-WuQETPMcW9Uf1/22HWUWP9lgsIC+KEHg2kozMflKjbeUtw9ujvFX6QmIfozaErDkmLWS9WEnEdEe6Uo9/BNTdQ==",
          "dev": true,
          "requires": {
            "chalk": "^2.4.2",
            "source-map": "^0.6.1",
            "supports-color": "^6.1.0"
          }
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "supports-color": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",
          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        }
      }
    },
    "postcss-colormin": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/postcss-colormin/-/postcss-colormin-4.0.3.tgz",
      "integrity": "sha512-WyQFAdDZpExQh32j0U0feWisZ0dmOtPl44qYmJKkq9xFWY3p+4qnRzCHeNrkeRhwPHz9bQ3mo0/yVkaply0MNw==",
      "dev": true,
      "requires": {
        "browserslist": "^4.0.0",
        "color": "^3.0.0",
        "has": "^1.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-convert-values": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-convert-values/-/postcss-convert-values-4.0.1.tgz",
      "integrity": "sha512-Kisdo1y77KUC0Jmn0OXU/COOJbzM8cImvw1ZFsBgBgMgb1iL23Zs/LXRe3r+EZqM3vGYKdQ2YJVQ5VkJI+zEJQ==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-discard-comments": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-discard-comments/-/postcss-discard-comments-4.0.2.tgz",
      "integrity": "sha512-RJutN259iuRf3IW7GZyLM5Sw4GLTOH8FmsXBnv8Ab/Tc2k4SR4qbV4DNbyyY4+Sjo362SyDmW2DQ7lBSChrpkg==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.0"
      }
    },
    "postcss-discard-duplicates": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-discard-duplicates/-/postcss-discard-duplicates-4.0.2.tgz",
      "integrity": "sha512-ZNQfR1gPNAiXZhgENFfEglF93pciw0WxMkJeVmw8eF+JZBbMD7jp6C67GqJAXVZP2BWbOztKfbsdmMp/k8c6oQ==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.0"
      }
    },
    "postcss-discard-empty": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-discard-empty/-/postcss-discard-empty-4.0.1.tgz",
      "integrity": "sha512-B9miTzbznhDjTfjvipfHoqbWKwd0Mj+/fL5s1QOz06wufguil+Xheo4XpOnc4NqKYBCNqqEzgPv2aPBIJLox0w==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.0"
      }
    },
    "postcss-discard-overridden": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-discard-overridden/-/postcss-discard-overridden-4.0.1.tgz",
      "integrity": "sha512-IYY2bEDD7g1XM1IDEsUT4//iEYCxAmP5oDSFMVU/JVvT7gh+l4fmjciLqGgwjdWpQIdb0Che2VX00QObS5+cTg==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.0"
      }
    },
    "postcss-import": {
      "version": "12.0.1",
      "resolved": "https://registry.npmjs.org/postcss-import/-/postcss-import-12.0.1.tgz",
      "integrity": "sha512-3Gti33dmCjyKBgimqGxL3vcV8w9+bsHwO5UrBawp796+jdardbcFl4RP5w/76BwNL7aGzpKstIfF9I+kdE8pTw==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.1",
        "postcss-value-parser": "^3.2.3",
        "read-cache": "^1.0.0",
        "resolve": "^1.1.7"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-load-config": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-2.1.0.tgz",
      "integrity": "sha512-4pV3JJVPLd5+RueiVVB+gFOAa7GWc25XQcMp86Zexzke69mKf6Nx9LRcQywdz7yZI9n1udOxmLuAwTBypypF8Q==",
      "dev": true,
      "requires": {
        "cosmiconfig": "^5.0.0",
        "import-cwd": "^2.0.0"
      }
    },
    "postcss-loader": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/postcss-loader/-/postcss-loader-3.0.0.tgz",
      "integrity": "sha512-cLWoDEY5OwHcAjDnkyRQzAXfs2jrKjXpO/HQFcc5b5u/r7aa471wdmChmwfnv7x2u840iat/wi0lQ5nbRgSkUA==",
      "dev": true,
      "requires": {
        "loader-utils": "^1.1.0",
        "postcss": "^7.0.0",
        "postcss-load-config": "^2.0.0",
        "schema-utils": "^1.0.0"
      }
    },
    "postcss-merge-longhand": {
      "version": "4.0.11",
      "resolved": "https://registry.npmjs.org/postcss-merge-longhand/-/postcss-merge-longhand-4.0.11.tgz",
      "integrity": "sha512-alx/zmoeXvJjp7L4mxEMjh8lxVlDFX1gqWHzaaQewwMZiVhLo42TEClKaeHbRf6J7j82ZOdTJ808RtN0ZOZwvw==",
      "dev": true,
      "requires": {
        "css-color-names": "0.0.4",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0",
        "stylehacks": "^4.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-merge-rules": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/postcss-merge-rules/-/postcss-merge-rules-4.0.3.tgz",
      "integrity": "sha512-U7e3r1SbvYzO0Jr3UT/zKBVgYYyhAz0aitvGIYOYK5CPmkNih+WDSsS5tvPrJ8YMQYlEMvsZIiqmn7HdFUaeEQ==",
      "dev": true,
      "requires": {
        "browserslist": "^4.0.0",
        "caniuse-api": "^3.0.0",
        "cssnano-util-same-parent": "^4.0.0",
        "postcss": "^7.0.0",
        "postcss-selector-parser": "^3.0.0",
        "vendors": "^1.0.0"
      },
      "dependencies": {
        "postcss-selector-parser": {
          "version": "3.1.2",
          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-3.1.2.tgz",
          "integrity": "sha512-h7fJ/5uWuRVyOtkO45pnt1Ih40CEleeyCHzipqAZO2e5H20g25Y48uYnFUiShvY4rZWNJ/Bib/KVPmanaCtOhA==",
          "dev": true,
          "requires": {
            "dot-prop": "^5.2.0",
            "indexes-of": "^1.0.1",
            "uniq": "^1.0.1"
          }
        }
      }
    },
    "postcss-minify-font-values": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-minify-font-values/-/postcss-minify-font-values-4.0.2.tgz",
      "integrity": "sha512-j85oO6OnRU9zPf04+PZv1LYIYOprWm6IA6zkXkrJXyRveDEuQggG6tvoy8ir8ZwjLxLuGfNkCZEQG7zan+Hbtg==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-minify-gradients": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-minify-gradients/-/postcss-minify-gradients-4.0.2.tgz",
      "integrity": "sha512-qKPfwlONdcf/AndP1U8SJ/uzIJtowHlMaSioKzebAXSG4iJthlWC9iSWznQcX4f66gIWX44RSA841HTHj3wK+Q==",
      "dev": true,
      "requires": {
        "cssnano-util-get-arguments": "^4.0.0",
        "is-color-stop": "^1.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-minify-params": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-minify-params/-/postcss-minify-params-4.0.2.tgz",
      "integrity": "sha512-G7eWyzEx0xL4/wiBBJxJOz48zAKV2WG3iZOqVhPet/9geefm/Px5uo1fzlHu+DOjT+m0Mmiz3jkQzVHe6wxAWg==",
      "dev": true,
      "requires": {
        "alphanum-sort": "^1.0.0",
        "browserslist": "^4.0.0",
        "cssnano-util-get-arguments": "^4.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0",
        "uniqs": "^2.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-minify-selectors": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-minify-selectors/-/postcss-minify-selectors-4.0.2.tgz",
      "integrity": "sha512-D5S1iViljXBj9kflQo4YutWnJmwm8VvIsU1GeXJGiG9j8CIg9zs4voPMdQDUmIxetUOh60VilsNzCiAFTOqu3g==",
      "dev": true,
      "requires": {
        "alphanum-sort": "^1.0.0",
        "has": "^1.0.0",
        "postcss": "^7.0.0",
        "postcss-selector-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-selector-parser": {
          "version": "3.1.2",
          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-3.1.2.tgz",
          "integrity": "sha512-h7fJ/5uWuRVyOtkO45pnt1Ih40CEleeyCHzipqAZO2e5H20g25Y48uYnFUiShvY4rZWNJ/Bib/KVPmanaCtOhA==",
          "dev": true,
          "requires": {
            "dot-prop": "^5.2.0",
            "indexes-of": "^1.0.1",
            "uniq": "^1.0.1"
          }
        }
      }
    },
    "postcss-normalize-charset": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-normalize-charset/-/postcss-normalize-charset-4.0.1.tgz",
      "integrity": "sha512-gMXCrrlWh6G27U0hF3vNvR3w8I1s2wOBILvA87iNXaPvSNo5uZAMYsZG7XjCUf1eVxuPfyL4TJ7++SGZLc9A3g==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.0"
      }
    },
    "postcss-normalize-display-values": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-normalize-display-values/-/postcss-normalize-display-values-4.0.2.tgz",
      "integrity": "sha512-3F2jcsaMW7+VtRMAqf/3m4cPFhPD3EFRgNs18u+k3lTJJlVe7d0YPO+bnwqo2xg8YiRpDXJI2u8A0wqJxMsQuQ==",
      "dev": true,
      "requires": {
        "cssnano-util-get-match": "^4.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-normalize-positions": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-normalize-positions/-/postcss-normalize-positions-4.0.2.tgz",
      "integrity": "sha512-Dlf3/9AxpxE+NF1fJxYDeggi5WwV35MXGFnnoccP/9qDtFrTArZ0D0R+iKcg5WsUd8nUYMIl8yXDCtcrT8JrdA==",
      "dev": true,
      "requires": {
        "cssnano-util-get-arguments": "^4.0.0",
        "has": "^1.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-normalize-repeat-style": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-normalize-repeat-style/-/postcss-normalize-repeat-style-4.0.2.tgz",
      "integrity": "sha512-qvigdYYMpSuoFs3Is/f5nHdRLJN/ITA7huIoCyqqENJe9PvPmLhNLMu7QTjPdtnVf6OcYYO5SHonx4+fbJE1+Q==",
      "dev": true,
      "requires": {
        "cssnano-util-get-arguments": "^4.0.0",
        "cssnano-util-get-match": "^4.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-normalize-string": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-normalize-string/-/postcss-normalize-string-4.0.2.tgz",
      "integrity": "sha512-RrERod97Dnwqq49WNz8qo66ps0swYZDSb6rM57kN2J+aoyEAJfZ6bMx0sx/F9TIEX0xthPGCmeyiam/jXif0eA==",
      "dev": true,
      "requires": {
        "has": "^1.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-normalize-timing-functions": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-normalize-timing-functions/-/postcss-normalize-timing-functions-4.0.2.tgz",
      "integrity": "sha512-acwJY95edP762e++00Ehq9L4sZCEcOPyaHwoaFOhIwWCDfik6YvqsYNxckee65JHLKzuNSSmAdxwD2Cud1Z54A==",
      "dev": true,
      "requires": {
        "cssnano-util-get-match": "^4.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-normalize-unicode": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-normalize-unicode/-/postcss-normalize-unicode-4.0.1.tgz",
      "integrity": "sha512-od18Uq2wCYn+vZ/qCOeutvHjB5jm57ToxRaMeNuf0nWVHaP9Hua56QyMF6fs/4FSUnVIw0CBPsU0K4LnBPwYwg==",
      "dev": true,
      "requires": {
        "browserslist": "^4.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-normalize-url": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-normalize-url/-/postcss-normalize-url-4.0.1.tgz",
      "integrity": "sha512-p5oVaF4+IHwu7VpMan/SSpmpYxcJMtkGppYf0VbdH5B6hN8YNmVyJLuY9FmLQTzY3fag5ESUUHDqM+heid0UVA==",
      "dev": true,
      "requires": {
        "is-absolute-url": "^2.0.0",
        "normalize-url": "^3.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-normalize-whitespace": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-normalize-whitespace/-/postcss-normalize-whitespace-4.0.2.tgz",
      "integrity": "sha512-tO8QIgrsI3p95r8fyqKV+ufKlSHh9hMJqACqbv2XknufqEDhDvbguXGBBqxw9nsQoXWf0qOqppziKJKHMD4GtA==",
      "dev": true,
      "requires": {
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-ordered-values": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/postcss-ordered-values/-/postcss-ordered-values-4.1.2.tgz",
      "integrity": "sha512-2fCObh5UanxvSxeXrtLtlwVThBvHn6MQcu4ksNT2tsaV2Fg76R2CV98W7wNSlX+5/pFwEyaDwKLLoEV7uRybAw==",
      "dev": true,
      "requires": {
        "cssnano-util-get-arguments": "^4.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-reduce-initial": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/postcss-reduce-initial/-/postcss-reduce-initial-4.0.3.tgz",
      "integrity": "sha512-gKWmR5aUulSjbzOfD9AlJiHCGH6AEVLaM0AV+aSioxUDd16qXP1PCh8d1/BGVvpdWn8k/HiK7n6TjeoXN1F7DA==",
      "dev": true,
      "requires": {
        "browserslist": "^4.0.0",
        "caniuse-api": "^3.0.0",
        "has": "^1.0.0",
        "postcss": "^7.0.0"
      }
    },
    "postcss-reduce-transforms": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-reduce-transforms/-/postcss-reduce-transforms-4.0.2.tgz",
      "integrity": "sha512-EEVig1Q2QJ4ELpJXMZR8Vt5DQx8/mo+dGWSR7vWXqcob2gQLyQGsionYcGKATXvQzMPn6DSN1vTN7yFximdIAg==",
      "dev": true,
      "requires": {
        "cssnano-util-get-match": "^4.0.0",
        "has": "^1.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-selector-parser": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.2.tgz",
      "integrity": "sha512-36P2QR59jDTOAiIkqEprfJDsoNrvwFei3eCqKd1Y0tUsBimsq39BLp7RD+JWny3WgB1zGhJX8XVePwm9k4wdBg==",
      "dev": true,
      "requires": {
        "cssesc": "^3.0.0",
        "indexes-of": "^1.0.1",
        "uniq": "^1.0.1"
      }
    },
    "postcss-svgo": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-svgo/-/postcss-svgo-4.0.2.tgz",
      "integrity": "sha512-C6wyjo3VwFm0QgBy+Fu7gCYOkCmgmClghO+pjcxvrcBKtiKt0uCF+hvbMO1fyv5BMImRK90SMb+dwUnfbGd+jw==",
      "dev": true,
      "requires": {
        "is-svg": "^3.0.0",
        "postcss": "^7.0.0",
        "postcss-value-parser": "^3.0.0",
        "svgo": "^1.0.0"
      },
      "dependencies": {
        "postcss-value-parser": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",
          "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ==",
          "dev": true
        }
      }
    },
    "postcss-unique-selectors": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-unique-selectors/-/postcss-unique-selectors-4.0.1.tgz",
      "integrity": "sha512-+JanVaryLo9QwZjKrmJgkI4Fn8SBgRO6WXQBJi7KiAVPlmxikB5Jzc4EvXMT2H0/m0RjrVVm9rGNhZddm/8Spg==",
      "dev": true,
      "requires": {
        "alphanum-sort": "^1.0.0",
        "postcss": "^7.0.0",
        "uniqs": "^2.0.0"
      }
    },
    "postcss-value-parser": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.0.3.tgz",
      "integrity": "sha512-N7h4pG+Nnu5BEIzyeaaIYWs0LI5XC40OrRh5L60z0QjFsqGWcHcbkBvpe1WYpcIS9yQ8sOi/vIPt1ejQCrMVrg==",
      "dev": true
    },
    "prepend-http": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/prepend-http/-/prepend-http-1.0.4.tgz",
      "integrity": "sha1-1PRWKwzjaW5BrFLQ4ALlemNdxtw="
    },
    "private": {
      "version": "0.1.8",
      "resolved": "https://registry.npmjs.org/private/-/private-0.1.8.tgz",
      "integrity": "sha512-VvivMrbvd2nKkiG38qjULzlc+4Vx4wm/whI9pQD35YrARNnhxeiRktSOhSukRLFNlzg6Br/cJPet5J/u19r/mg==",
      "dev": true
    },
    "process": {
      "version": "0.11.10",
      "resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",
      "integrity": "sha1-czIwDoQBYb2j5podHZGn1LwW8YI=",
      "dev": true
    },
    "process-nextick-args": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag=="
    },
    "promise": {
      "version": "7.3.1",
      "resolved": "https://registry.npmjs.org/promise/-/promise-7.3.1.tgz",
      "integrity": "sha512-nolQXZ/4L+bP/UGlkfaIujX9BKxGwmQ9OT4mOt5yvy8iK1h3wqTEJCijzGANTCCl9nWjY41juyAn2K3Q1hLLTg==",
      "dev": true,
      "optional": true,
      "requires": {
        "asap": "~2.0.3"
      }
    },
    "promise-inflight": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/promise-inflight/-/promise-inflight-1.0.1.tgz",
      "integrity": "sha1-mEcocL8igTL8vdhoEputEsPAKeM=",
      "dev": true
    },
    "promise-polyfill": {
      "version": "8.1.3",
      "resolved": "https://registry.npmjs.org/promise-polyfill/-/promise-polyfill-8.1.3.tgz",
      "integrity": "sha512-MG5r82wBzh7pSKDRa9y+vllNHz3e3d4CNj1PQE4BQYxLme0gKYYBm9YENq+UkEikyZ0XbiGWxYlVw3Rl9O/U8g=="
    },
    "promise-retry": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/promise-retry/-/promise-retry-1.1.1.tgz",
      "integrity": "sha1-ZznpaOMFHaIM5kl/srUPaRHfPW0=",
      "dev": true,
      "requires": {
        "err-code": "^1.0.0",
        "retry": "^0.10.0"
      },
      "dependencies": {
        "retry": {
          "version": "0.10.1",
          "resolved": "https://registry.npmjs.org/retry/-/retry-0.10.1.tgz",
          "integrity": "sha1-52OI0heZLCUnUCQdPTlW/tmNj/Q=",
          "dev": true
        }
      }
    },
    "protobufjs": {
      "version": "6.8.9",
      "resolved": "https://registry.npmjs.org/protobufjs/-/protobufjs-6.8.9.tgz",
      "integrity": "sha512-j2JlRdUeL/f4Z6x4aU4gj9I2LECglC+5qR2TrWb193Tla1qfdaNQTZ8I27Pt7K0Ajmvjjpft7O3KWTGciz4gpw==",
      "requires": {
        "@protobufjs/aspromise": "^1.1.2",
        "@protobufjs/base64": "^1.1.2",
        "@protobufjs/codegen": "^2.0.4",
        "@protobufjs/eventemitter": "^1.1.0",
        "@protobufjs/fetch": "^1.1.0",
        "@protobufjs/float": "^1.0.2",
        "@protobufjs/inquire": "^1.1.0",
        "@protobufjs/path": "^1.1.2",
        "@protobufjs/pool": "^1.1.0",
        "@protobufjs/utf8": "^1.1.0",
        "@types/long": "^4.0.0",
        "@types/node": "^10.1.0",
        "long": "^4.0.0"
      },
      "dependencies": {
        "@types/node": {
          "version": "10.17.17",
          "resolved": "https://registry.npmjs.org/@types/node/-/node-10.17.17.tgz",
          "integrity": "sha512-gpNnRnZP3VWzzj5k3qrpRC6Rk3H/uclhAVo1aIvwzK5p5cOrs9yEyQ8H/HBsBY0u5rrWxXEiVPQ0dEB6pkjE8Q=="
        }
      }
    },
    "protoduck": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/protoduck/-/protoduck-5.0.1.tgz",
      "integrity": "sha512-WxoCeDCoCBY55BMvj4cAEjdVUFGRWed9ZxPlqTKYyw1nDDTQ4pqmnIMAGfJlg7Dx35uB/M+PHJPTmGOvaCaPTg==",
      "dev": true,
      "requires": {
        "genfun": "^5.0.0"
      }
    },
    "protractor": {
      "version": "5.4.3",
      "resolved": "https://registry.npmjs.org/protractor/-/protractor-5.4.3.tgz",
      "integrity": "sha512-7pMAolv8Ah1yJIqaorDTzACtn3gk7BamVKPTeO5lqIGOrfosjPgXFx/z1dqSI+m5EeZc2GMJHPr5DYlodujDNA==",
      "dev": true,
      "requires": {
        "@types/q": "^0.0.32",
        "@types/selenium-webdriver": "^3.0.0",
        "blocking-proxy": "^1.0.0",
        "browserstack": "^1.5.1",
        "chalk": "^1.1.3",
        "glob": "^7.0.3",
        "jasmine": "2.8.0",
        "jasminewd2": "^2.1.0",
        "optimist": "~0.6.0",
        "q": "1.4.1",
        "saucelabs": "^1.5.0",
        "selenium-webdriver": "3.6.0",
        "source-map-support": "~0.4.0",
        "webdriver-js-extender": "2.1.0",
        "webdriver-manager": "^12.0.6"
      },
      "dependencies": {
        "@types/q": {
          "version": "0.0.32",
          "resolved": "https://registry.npmjs.org/@types/q/-/q-0.0.32.tgz",
          "integrity": "sha1-vShOV8hPEyXacCur/IKlMoGQwMU=",
          "dev": true
        },
        "ansi-styles": {
          "version": "2.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
          "dev": true
        },
        "chalk": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
          "dev": true,
          "requires": {
            "ansi-styles": "^2.2.1",
            "escape-string-regexp": "^1.0.2",
            "has-ansi": "^2.0.0",
            "strip-ansi": "^3.0.0",
            "supports-color": "^2.0.0"
          }
        },
        "del": {
          "version": "2.2.2",
          "resolved": "https://registry.npmjs.org/del/-/del-2.2.2.tgz",
          "integrity": "sha1-wSyYHQZ4RshLyvhiz/kw2Qf/0ag=",
          "dev": true,
          "requires": {
            "globby": "^5.0.0",
            "is-path-cwd": "^1.0.0",
            "is-path-in-cwd": "^1.0.0",
            "object-assign": "^4.0.1",
            "pify": "^2.0.0",
            "pinkie-promise": "^2.0.0",
            "rimraf": "^2.2.8"
          }
        },
        "globby": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/globby/-/globby-5.0.0.tgz",
          "integrity": "sha1-69hGZ8oNuzMLmbz8aOrCvFQ3Dg0=",
          "dev": true,
          "requires": {
            "array-union": "^1.0.1",
            "arrify": "^1.0.0",
            "glob": "^7.0.3",
            "object-assign": "^4.0.1",
            "pify": "^2.0.0",
            "pinkie-promise": "^2.0.0"
          }
        },
        "is-path-cwd": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-path-cwd/-/is-path-cwd-1.0.0.tgz",
          "integrity": "sha1-0iXsIxMuie3Tj9p2dHLmLmXxEG0=",
          "dev": true
        },
        "is-path-in-cwd": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/is-path-in-cwd/-/is-path-in-cwd-1.0.1.tgz",
          "integrity": "sha512-FjV1RTW48E7CWM7eE/J2NJvAEEVektecDBVBE5Hh3nM1Jd0kvhHtX68Pr3xsDf857xt3Y4AkwVULK1Vku62aaQ==",
          "dev": true,
          "requires": {
            "is-path-inside": "^1.0.0"
          }
        },
        "is-path-inside": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-1.0.1.tgz",
          "integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",
          "dev": true,
          "requires": {
            "path-is-inside": "^1.0.1"
          }
        },
        "pify": {
          "version": "2.3.0",
          "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
          "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
          "dev": true
        },
        "q": {
          "version": "1.4.1",
          "resolved": "https://registry.npmjs.org/q/-/q-1.4.1.tgz",
          "integrity": "sha1-VXBbzZPF82c1MMLCy8DCs63cKG4=",
          "dev": true
        },
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        },
        "source-map": {
          "version": "0.5.7",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
          "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",
          "dev": true
        },
        "source-map-support": {
          "version": "0.4.18",
          "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.4.18.tgz",
          "integrity": "sha512-try0/JqxPLF9nOjvSta7tVondkP5dwgyLDjVoyMDlmjugT2lRZ1OfsrYTkCd2hkDnJTKRbO/Rl3orm8vlsUzbA==",
          "dev": true,
          "requires": {
            "source-map": "^0.5.6"
          }
        },
        "supports-color": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
          "dev": true
        },
        "webdriver-manager": {
          "version": "12.1.7",
          "resolved": "https://registry.npmjs.org/webdriver-manager/-/webdriver-manager-12.1.7.tgz",
          "integrity": "sha512-XINj6b8CYuUYC93SG3xPkxlyUc3IJbD6Vvo75CVGuG9uzsefDzWQrhz0Lq8vbPxtb4d63CZdYophF8k8Or/YiA==",
          "dev": true,
          "requires": {
            "adm-zip": "^0.4.9",
            "chalk": "^1.1.1",
            "del": "^2.2.0",
            "glob": "^7.0.3",
            "ini": "^1.3.4",
            "minimist": "^1.2.0",
            "q": "^1.4.1",
            "request": "^2.87.0",
            "rimraf": "^2.5.2",
            "semver": "^5.3.0",
            "xml2js": "^0.4.17"
          }
        }
      }
    },
    "proxy-addr": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.6.tgz",
      "integrity": "sha512-dh/frvCBVmSsDYzw6n926jv974gddhkFPfiN8hPOi30Wax25QZyZEGveluCgliBnqmuM+UJmBErbAUFIoDbjOw==",
      "requires": {
        "forwarded": "~0.1.2",
        "ipaddr.js": "1.9.1"
      }
    },
    "prr": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/prr/-/prr-1.0.1.tgz",
      "integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY=",
      "dev": true
    },
    "pseudomap": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz",
      "integrity": "sha1-8FKijacOYYkX7wqKw0wa5aaChrM=",
      "dev": true
    },
    "psl": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/psl/-/psl-1.7.0.tgz",
      "integrity": "sha512-5NsSEDv8zY70ScRnOTn7bK7eanl2MvFrOrS/R6x+dBt5g1ghnj9Zv90kO8GwT8gxcu2ANyFprnFYB85IogIJOQ=="
    },
    "public-encrypt": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/public-encrypt/-/public-encrypt-4.0.3.tgz",
      "integrity": "sha512-zVpa8oKZSz5bTMTFClc1fQOnyyEzpl5ozpi1B5YcvBrdohMjH2rfsBtyXcuNuwjsDIXmBYlF2N5FlJYhR29t8Q==",
      "requires": {
        "bn.js": "^4.1.0",
        "browserify-rsa": "^4.0.0",
        "create-hash": "^1.1.0",
        "parse-asn1": "^5.0.0",
        "randombytes": "^2.0.1",
        "safe-buffer": "^5.1.2"
      }
    },
    "pump": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",
      "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",
      "requires": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "pumpify": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/pumpify/-/pumpify-1.5.1.tgz",
      "integrity": "sha512-oClZI37HvuUJJxSKKrC17bZ9Cu0ZYhEAGPsPUy9KlMUmv9dKX2o77RUmq7f3XjIxbwyGwYzbzQ1L2Ks8sIradQ==",
      "dev": true,
      "requires": {
        "duplexify": "^3.6.0",
        "inherits": "^2.0.3",
        "pump": "^2.0.0"
      },
      "dependencies": {
        "pump": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/pump/-/pump-2.0.1.tgz",
          "integrity": "sha512-ruPMNRkN3MHP1cWJc9OWr+T/xDP0jhXYCLfJcBuX54hhfIBnaQmAUMfDcG4DM5UMWByBbJY69QSphm3jtDKIkA==",
          "dev": true,
          "requires": {
            "end-of-stream": "^1.1.0",
            "once": "^1.3.1"
          }
        }
      }
    },
    "punycode": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
      "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A=="
    },
    "q": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/q/-/q-1.5.1.tgz",
      "integrity": "sha1-fjL3W0E4EpHQRhHxvxQQmsAGUdc=",
      "dev": true
    },
    "qjobs": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/qjobs/-/qjobs-1.2.0.tgz",
      "integrity": "sha512-8YOJEHtxpySA3fFDyCRxA+UUV+fA+rTWnuWvylOK/NCjhY+b4ocCtmu8TtsWb+mYeU+GCHf/S66KZF/AsteKHg==",
      "dev": true
    },
    "qs": {
      "version": "6.5.2",
      "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
      "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA=="
    },
    "query-string": {
      "version": "4.3.4",
      "resolved": "https://registry.npmjs.org/query-string/-/query-string-4.3.4.tgz",
      "integrity": "sha1-u7aTucqRXCMlFbIosaArYJBD2+s=",
      "dev": true,
      "requires": {
        "object-assign": "^4.1.0",
        "strict-uri-encode": "^1.0.0"
      }
    },
    "querystring": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/querystring/-/querystring-0.2.0.tgz",
      "integrity": "sha1-sgmEkgO7Jd+CDadW50cAWHhSFiA=",
      "dev": true
    },
    "querystring-es3": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/querystring-es3/-/querystring-es3-0.2.1.tgz",
      "integrity": "sha1-nsYfeQSYdXB9aUFFlv2Qek1xHnM=",
      "dev": true
    },
    "querystringify": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/querystringify/-/querystringify-2.1.1.tgz",
      "integrity": "sha512-w7fLxIRCRT7U8Qu53jQnJyPkYZIaR4n5151KMfcJlO/A9397Wxb1amJvROTK6TOnp7PfoAmg/qXiNHI+08jRfA==",
      "dev": true
    },
    "randombytes": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz",
      "integrity": "sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==",
      "requires": {
        "safe-buffer": "^5.1.0"
      }
    },
    "randomfill": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/randomfill/-/randomfill-1.0.4.tgz",
      "integrity": "sha512-87lcbR8+MhcWcUiQ+9e+Rwx8MyR2P7qnt15ynUlbm3TU/fjbgz4GsvfSUDTemtCCtVCqb4ZcEFlyPNTh9bBTLw==",
      "requires": {
        "randombytes": "^2.0.5",
        "safe-buffer": "^5.1.0"
      }
    },
    "randomhex": {
      "version": "0.1.5",
      "resolved": "https://registry.npmjs.org/randomhex/-/randomhex-0.1.5.tgz",
      "integrity": "sha1-us7vmCMpCRQA8qKRLGzQLxCU9YU="
    },
    "range-parser": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
      "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg=="
    },
    "raw-body": {
      "version": "2.4.0",
      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.4.0.tgz",
      "integrity": "sha512-4Oz8DUIwdvoa5qMJelxipzi/iJIi40O5cGV1wNYp5hvZP8ZN0T+jiNkL0QepXs+EsQ9XJ8ipEDoiH70ySUJP3Q==",
      "requires": {
        "bytes": "3.1.0",
        "http-errors": "1.7.2",
        "iconv-lite": "0.4.24",
        "unpipe": "1.0.0"
      },
      "dependencies": {
        "bytes": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.0.tgz",
          "integrity": "sha512-zauLjrfCG+xvoyaqLoV8bLVXXNGC4JqlxFCutSDWA6fJrTo2ZuvLYTqZ7aHBLZSMOopbzwv8f+wZcVzfVTI2Dg=="
        }
      }
    },
    "raw-loader": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/raw-loader/-/raw-loader-3.1.0.tgz",
      "integrity": "sha512-lzUVMuJ06HF4rYveaz9Tv0WRlUMxJ0Y1hgSkkgg+50iEdaI0TthyEDe08KIHb0XsF6rn8WYTqPCaGTZg3sX+qA==",
      "dev": true,
      "requires": {
        "loader-utils": "^1.1.0",
        "schema-utils": "^2.0.1"
      },
      "dependencies": {
        "ajv": {
          "version": "6.12.0",
          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.0.tgz",
          "integrity": "sha512-D6gFiFA0RRLyUbvijN74DWAjXSFxWKaWP7mldxkVhyhAV3+SWA9HEJPHQ2c9soIeTFJqcSdFDGFgdqs1iUU2Hw==",
          "dev": true,
          "requires": {
            "fast-deep-equal": "^3.1.1",
            "fast-json-stable-stringify": "^2.0.0",
            "json-schema-traverse": "^0.4.1",
            "uri-js": "^4.2.2"
          }
        },
        "fast-deep-equal": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.1.tgz",
          "integrity": "sha512-8UEa58QDLauDNfpbrX55Q9jrGHThw2ZMdOky5Gl1CDtVeJDPVrG4Jxx1N8jw2gkWaff5UUuX1KJd+9zGe2B+ZA==",
          "dev": true
        },
        "schema-utils": {
          "version": "2.6.5",
          "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-2.6.5.tgz",
          "integrity": "sha512-5KXuwKziQrTVHh8j/Uxz+QUbxkaLW9X/86NBlx/gnKgtsZA2GIVMUn17qWhRFwF8jdYb3Dig5hRO/W5mZqy6SQ==",
          "dev": true,
          "requires": {
            "ajv": "^6.12.0",
            "ajv-keywords": "^3.4.1"
          }
        }
      }
    },
    "read-cache": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz",
      "integrity": "sha1-5mTvMRYRZsl1HNvo28+GtftY93Q=",
      "dev": true,
      "requires": {
        "pify": "^2.3.0"
      },
      "dependencies": {
        "pify": {
          "version": "2.3.0",
          "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
          "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
          "dev": true
        }
      }
    },
    "read-package-json": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/read-package-json/-/read-package-json-2.1.1.tgz",
      "integrity": "sha512-dAiqGtVc/q5doFz6096CcnXhpYk0ZN8dEKVkGLU0CsASt8SrgF6SF7OTKAYubfvFhWaqofl+Y8HK19GR8jwW+A==",
      "dev": true,
      "requires": {
        "glob": "^7.1.1",
        "graceful-fs": "^4.1.2",
        "json-parse-better-errors": "^1.0.1",
        "normalize-package-data": "^2.0.0",
        "npm-normalize-package-bin": "^1.0.0"
      }
    },
    "read-package-tree": {
      "version": "5.3.1",
      "resolved": "https://registry.npmjs.org/read-package-tree/-/read-package-tree-5.3.1.tgz",
      "integrity": "sha512-mLUDsD5JVtlZxjSlPPx1RETkNjjvQYuweKwNVt1Sn8kP5Jh44pvYuUHCp6xSVDZWbNxVxG5lyZJ921aJH61sTw==",
      "dev": true,
      "requires": {
        "read-package-json": "^2.0.0",
        "readdir-scoped-modules": "^1.0.0",
        "util-promisify": "^2.1.0"
      }
    },
    "read-pkg": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-1.1.0.tgz",
      "integrity": "sha1-9f+qXs0pyzHAR0vKfXVra7KePyg=",
      "dev": true,
      "requires": {
        "load-json-file": "^1.0.0",
        "normalize-package-data": "^2.3.2",
        "path-type": "^1.0.0"
      },
      "dependencies": {
        "path-type": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/path-type/-/path-type-1.1.0.tgz",
          "integrity": "sha1-WcRPfuSR2nBNpBXaWkBwuk+P5EE=",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.2",
            "pify": "^2.0.0",
            "pinkie-promise": "^2.0.0"
          }
        },
        "pify": {
          "version": "2.3.0",
          "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
          "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
          "dev": true
        }
      }
    },
    "read-pkg-up": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-1.0.1.tgz",
      "integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",
      "dev": true,
      "requires": {
        "find-up": "^1.0.0",
        "read-pkg": "^1.0.0"
      },
      "dependencies": {
        "find-up": {
          "version": "1.1.2",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-1.1.2.tgz",
          "integrity": "sha1-ay6YIrGizgpgq2TWEOzK1TyyTQ8=",
          "dev": true,
          "requires": {
            "path-exists": "^2.0.0",
            "pinkie-promise": "^2.0.0"
          }
        },
        "path-exists": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-2.1.0.tgz",
          "integrity": "sha1-D+tsZPD8UY2adU3V77YscCJ2H0s=",
          "dev": true,
          "requires": {
            "pinkie-promise": "^2.0.0"
          }
        }
      }
    },
    "readable-stream": {
      "version": "2.3.7",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
      "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
      "requires": {
        "core-util-is": "~1.0.0",
        "inherits": "~2.0.3",
        "isarray": "~1.0.0",
        "process-nextick-args": "~2.0.0",
        "safe-buffer": "~5.1.1",
        "string_decoder": "~1.1.1",
        "util-deprecate": "~1.0.1"
      }
    },
    "readdir-scoped-modules": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/readdir-scoped-modules/-/readdir-scoped-modules-1.1.0.tgz",
      "integrity": "sha512-asaikDeqAQg7JifRsZn1NJZXo9E+VwlyCfbkZhwyISinqk5zNS6266HS5kah6P0SaQKGF6SkNnZVHUzHFYxYDw==",
      "dev": true,
      "requires": {
        "debuglog": "^1.0.1",
        "dezalgo": "^1.0.0",
        "graceful-fs": "^4.1.2",
        "once": "^1.3.0"
      }
    },
    "readdirp": {
      "version": "3.3.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.3.0.tgz",
      "integrity": "sha512-zz0pAkSPOXXm1viEwygWIPSPkcBYjW1xU5j/JBh5t9bGCJwa6f9+BJa6VaB2g+b55yVrmXzqkyLf4xaWYM0IkQ==",
      "dev": true,
      "requires": {
        "picomatch": "^2.0.7"
      }
    },
    "reflect-metadata": {
      "version": "0.1.13",
      "resolved": "https://registry.npmjs.org/reflect-metadata/-/reflect-metadata-0.1.13.tgz",
      "integrity": "sha512-Ts1Y/anZELhSsjMcU605fU9RE4Oi3p5ORujwbIKXfWa+0Zxs510Qrmrce5/Jowq3cHSZSJqBjypxmHarc+vEWg==",
      "dev": true
    },
    "regenerate": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/regenerate/-/regenerate-1.4.0.tgz",
      "integrity": "sha512-1G6jJVDWrt0rK99kBjvEtziZNCICAuvIPkSiUFIQxVP06RCVpq3dmDo2oi6ABpYaDYaTRr67BEhL8r1wgEZZKg==",
      "dev": true
    },
    "regenerate-unicode-properties": {
      "version": "8.2.0",
      "resolved": "https://registry.npmjs.org/regenerate-unicode-properties/-/regenerate-unicode-properties-8.2.0.tgz",
      "integrity": "sha512-F9DjY1vKLo/tPePDycuH3dn9H1OTPIkVD9Kz4LODu+F2C75mgjAJ7x/gwy6ZcSNRAAkhNlJSOHRe8k3p+K9WhA==",
      "dev": true,
      "requires": {
        "regenerate": "^1.4.0"
      }
    },
    "regenerator-runtime": {
      "version": "0.13.3",
      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.3.tgz",
      "integrity": "sha512-naKIZz2GQ8JWh///G7L3X6LaQUAMp2lvb1rvwwsURe/VXwD6VMfr+/1NuNw3ag8v2kY1aQ/go5SNn79O9JU7yw==",
      "dev": true
    },
    "regenerator-transform": {
      "version": "0.14.4",
      "resolved": "https://registry.npmjs.org/regenerator-transform/-/regenerator-transform-0.14.4.tgz",
      "integrity": "sha512-EaJaKPBI9GvKpvUz2mz4fhx7WPgvwRLY9v3hlNHWmAuJHI13T4nwKnNvm5RWJzEdnI5g5UwtOww+S8IdoUC2bw==",
      "dev": true,
      "requires": {
        "@babel/runtime": "^7.8.4",
        "private": "^0.1.8"
      }
    },
    "regex-not": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/regex-not/-/regex-not-1.0.2.tgz",
      "integrity": "sha512-J6SDjUgDxQj5NusnOtdFxDwN/+HWykR8GELwctJ7mdqhcyy1xEc4SRFHUXvxTp661YaVKAjfRLZ9cCqS6tn32A==",
      "dev": true,
      "requires": {
        "extend-shallow": "^3.0.2",
        "safe-regex": "^1.1.0"
      }
    },
    "regexp.prototype.flags": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.3.0.tgz",
      "integrity": "sha512-2+Q0C5g951OlYlJz6yu5/M33IcsESLlLfsyIaLJaG4FA2r4yP8MvVMJUUP/fVBkSpbbbZlS5gynbEWLipiiXiQ==",
      "dev": true,
      "requires": {
        "define-properties": "^1.1.3",
        "es-abstract": "^1.17.0-next.1"
      }
    },
    "regexpu-core": {
      "version": "4.7.0",
      "resolved": "https://registry.npmjs.org/regexpu-core/-/regexpu-core-4.7.0.tgz",
      "integrity": "sha512-TQ4KXRnIn6tz6tjnrXEkD/sshygKH/j5KzK86X8MkeHyZ8qst/LZ89j3X4/8HEIfHANTFIP/AbXakeRhWIl5YQ==",
      "dev": true,
      "requires": {
        "regenerate": "^1.4.0",
        "regenerate-unicode-properties": "^8.2.0",
        "regjsgen": "^0.5.1",
        "regjsparser": "^0.6.4",
        "unicode-match-property-ecmascript": "^1.0.4",
        "unicode-match-property-value-ecmascript": "^1.2.0"
      }
    },
    "regjsgen": {
      "version": "0.5.1",
      "resolved": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.5.1.tgz",
      "integrity": "sha512-5qxzGZjDs9w4tzT3TPhCJqWdCc3RLYwy9J2NB0nm5Lz+S273lvWcpjaTGHsT1dc6Hhfq41uSEOw8wBmxrKOuyg==",
      "dev": true
    },
    "regjsparser": {
      "version": "0.6.4",
      "resolved": "https://registry.npmjs.org/regjsparser/-/regjsparser-0.6.4.tgz",
      "integrity": "sha512-64O87/dPDgfk8/RQqC4gkZoGyyWFIEUTTh80CU6CWuK5vkCGyekIx+oKcEIYtP/RAxSQltCZHCNu/mdd7fqlJw==",
      "dev": true,
      "requires": {
        "jsesc": "~0.5.0"
      },
      "dependencies": {
        "jsesc": {
          "version": "0.5.0",
          "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-0.5.0.tgz",
          "integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0=",
          "dev": true
        }
      }
    },
    "remove-trailing-separator": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/remove-trailing-separator/-/remove-trailing-separator-1.1.0.tgz",
      "integrity": "sha1-wkvOKig62tW8P1jg1IJJuSN52O8=",
      "dev": true
    },
    "repeat-element": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/repeat-element/-/repeat-element-1.1.3.tgz",
      "integrity": "sha512-ahGq0ZnV5m5XtZLMb+vP76kcAM5nkLqk0lpqAuojSKGgQtn4eRi4ZZGm2olo2zKFH+sMsWaqOCW1dqAnOru72g==",
      "dev": true
    },
    "repeat-string": {
      "version": "1.6.1",
      "resolved": "https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz",
      "integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc=",
      "dev": true
    },
    "request": {
      "version": "2.88.2",
      "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
      "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
      "requires": {
        "aws-sign2": "~0.7.0",
        "aws4": "^1.8.0",
        "caseless": "~0.12.0",
        "combined-stream": "~1.0.6",
        "extend": "~3.0.2",
        "forever-agent": "~0.6.1",
        "form-data": "~2.3.2",
        "har-validator": "~5.1.3",
        "http-signature": "~1.2.0",
        "is-typedarray": "~1.0.0",
        "isstream": "~0.1.2",
        "json-stringify-safe": "~5.0.1",
        "mime-types": "~2.1.19",
        "oauth-sign": "~0.9.0",
        "performance-now": "^2.1.0",
        "qs": "~6.5.2",
        "safe-buffer": "^5.1.2",
        "tough-cookie": "~2.5.0",
        "tunnel-agent": "^0.6.0",
        "uuid": "^3.3.2"
      },
      "dependencies": {
        "uuid": {
          "version": "3.4.0",
          "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
          "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A=="
        }
      }
    },
    "require-directory": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
      "integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I=",
      "dev": true
    },
    "require-main-filename": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-1.0.1.tgz",
      "integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE=",
      "dev": true
    },
    "requires-port": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/requires-port/-/requires-port-1.0.0.tgz",
      "integrity": "sha1-kl0mAdOaxIXgkc8NpcbmlNw9yv8=",
      "dev": true
    },
    "resolve": {
      "version": "1.15.1",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.15.1.tgz",
      "integrity": "sha512-84oo6ZTtoTUpjgNEr5SJyzQhzL72gaRodsSfyxC/AXRvwu0Yse9H8eF9IpGo7b8YetZhlI6v7ZQ6bKBFV/6S7w==",
      "dev": true,
      "requires": {
        "path-parse": "^1.0.6"
      }
    },
    "resolve-cwd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-2.0.0.tgz",
      "integrity": "sha1-AKn3OHVW4nA46uIyyqNypqWbZlo=",
      "dev": true,
      "requires": {
        "resolve-from": "^3.0.0"
      }
    },
    "resolve-from": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-3.0.0.tgz",
      "integrity": "sha1-six699nWiBvItuZTM17rywoYh0g=",
      "dev": true
    },
    "resolve-url": {
      "version": "0.2.1",
      "resolved": "https://registry.npmjs.org/resolve-url/-/resolve-url-0.2.1.tgz",
      "integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo=",
      "dev": true
    },
    "resp-modifier": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/resp-modifier/-/resp-modifier-6.0.2.tgz",
      "integrity": "sha1-sSTeXE+6/LpUH0j/pzlw9KpFa08=",
      "dev": true,
      "requires": {
        "debug": "^2.2.0",
        "minimatch": "^3.0.2"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
          "dev": true
        }
      }
    },
    "responselike": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/responselike/-/responselike-1.0.2.tgz",
      "integrity": "sha1-kYcg7ztjHFZCvgaPFa3lpG9Loec=",
      "requires": {
        "lowercase-keys": "^1.0.0"
      }
    },
    "restore-cursor": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-3.1.0.tgz",
      "integrity": "sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==",
      "dev": true,
      "requires": {
        "onetime": "^5.1.0",
        "signal-exit": "^3.0.2"
      }
    },
    "ret": {
      "version": "0.1.15",
      "resolved": "https://registry.npmjs.org/ret/-/ret-0.1.15.tgz",
      "integrity": "sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B/RzEfUlLct7b5G/ytav+wPrplCpVMFuwzXbkecJrb6IYo1iFb0S9v37754mg==",
      "dev": true
    },
    "retry": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/retry/-/retry-0.12.0.tgz",
      "integrity": "sha1-G0KmJmoh8HQh0bC1S33BZ7AcATs=",
      "dev": true
    },
    "rfdc": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/rfdc/-/rfdc-1.1.4.tgz",
      "integrity": "sha512-5C9HXdzK8EAqN7JDif30jqsBzavB7wLpaubisuQIGHWf2gUXSpzy6ArX/+Da8RjFpagWsCn+pIgxTMAmKw9Zug==",
      "dev": true
    },
    "rgb-regex": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/rgb-regex/-/rgb-regex-1.0.1.tgz",
      "integrity": "sha1-wODWiC3w4jviVKR16O3UGRX+rrE=",
      "dev": true
    },
    "rgba-regex": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/rgba-regex/-/rgba-regex-1.0.0.tgz",
      "integrity": "sha1-QzdOLiyglosO8VI0YLfXMP8i7rM=",
      "dev": true
    },
    "rimraf": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.0.tgz",
      "integrity": "sha512-NDGVxTsjqfunkds7CqsOiEnxln4Bo7Nddl3XhS4pXg5OzwkLqJ971ZVAAnB+DDLnF76N+VnDEiBHaVV8I06SUg==",
      "dev": true,
      "requires": {
        "glob": "^7.1.3"
      }
    },
    "ripemd160": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/ripemd160/-/ripemd160-2.0.2.tgz",
      "integrity": "sha512-ii4iagi25WusVoiC4B4lq7pbXfAp3D9v5CwfkY33vffw2+pkDjY1D8GaN7spsxvCSx8dkPqOZCEZyfxcmJG2IA==",
      "requires": {
        "hash-base": "^3.0.0",
        "inherits": "^2.0.1"
      }
    },
    "rlp": {
      "version": "2.2.4",
      "resolved": "https://registry.npmjs.org/rlp/-/rlp-2.2.4.tgz",
      "integrity": "sha512-fdq2yYCWpAQBhwkZv+Z8o/Z4sPmYm1CUq6P7n6lVTOdb949CnqA0sndXal5C1NleSVSZm6q5F3iEbauyVln/iw==",
      "requires": {
        "bn.js": "^4.11.1"
      }
    },
    "rollup": {
      "version": "1.25.2",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-1.25.2.tgz",
      "integrity": "sha512-+7z6Wab/L45QCPcfpuTZKwKiB0tynj05s/+s2U3F2Bi7rOLPr9UcjUwO7/xpjlPNXA/hwnth6jBExFRGyf3tMg==",
      "dev": true,
      "requires": {
        "@types/estree": "*",
        "@types/node": "*",
        "acorn": "^7.1.0"
      }
    },
    "run-async": {
      "version": "2.4.0",
      "resolved": "https://registry.npmjs.org/run-async/-/run-async-2.4.0.tgz",
      "integrity": "sha512-xJTbh/d7Lm7SBhc1tNvTpeCHaEzoyxPrqNlvSdMfBTYwaY++UJFyXUOxAtsRUXjlqOfj8luNaR9vjCh4KeV+pg==",
      "dev": true,
      "requires": {
        "is-promise": "^2.1.0"
      }
    },
    "run-queue": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/run-queue/-/run-queue-1.0.3.tgz",
      "integrity": "sha1-6Eg5bwV9Ij8kOGkkYY4laUFh7Ec=",
      "dev": true,
      "requires": {
        "aproba": "^1.1.1"
      }
    },
    "rx": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/rx/-/rx-4.1.0.tgz",
      "integrity": "sha1-pfE/957zt0D+MKqAP7CfmIBdR4I=",
      "dev": true
    },
    "rxjs": {
      "version": "6.5.4",
      "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.5.4.tgz",
      "integrity": "sha512-naMQXcgEo3csAEGvw/NydRA0fuS2nDZJiw1YUWFKU7aPPAPGZEsD4Iimit96qwCieH6y614MCLYwdkrWx7z/7Q==",
      "requires": {
        "tslib": "^1.9.0"
      }
    },
    "safe-buffer": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
    },
    "safe-regex": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/safe-regex/-/safe-regex-1.1.0.tgz",
      "integrity": "sha1-QKNmnzsHfR6UPURinhV91IAjvy4=",
      "dev": true,
      "requires": {
        "ret": "~0.1.10"
      }
    },
    "safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="
    },
    "sass": {
      "version": "1.23.3",
      "resolved": "https://registry.npmjs.org/sass/-/sass-1.23.3.tgz",
      "integrity": "sha512-1DKRZxJMOh4Bme16AbWTyYeJAjTlrvw2+fWshHHaepeJfGq2soFZTnt0YhWit+bohtDu4LdyPoEj6VFD4APHog==",
      "dev": true,
      "requires": {
        "chokidar": ">=2.0.0 <4.0.0"
      }
    },
    "sass-loader": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/sass-loader/-/sass-loader-8.0.0.tgz",
      "integrity": "sha512-+qeMu563PN7rPdit2+n5uuYVR0SSVwm0JsOUsaJXzgYcClWSlmX0iHDnmeOobPkf5kUglVot3QS6SyLyaQoJ4w==",
      "dev": true,
      "requires": {
        "clone-deep": "^4.0.1",
        "loader-utils": "^1.2.3",
        "neo-async": "^2.6.1",
        "schema-utils": "^2.1.0",
        "semver": "^6.3.0"
      },
      "dependencies": {
        "ajv": {
          "version": "6.12.0",
          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.0.tgz",
          "integrity": "sha512-D6gFiFA0RRLyUbvijN74DWAjXSFxWKaWP7mldxkVhyhAV3+SWA9HEJPHQ2c9soIeTFJqcSdFDGFgdqs1iUU2Hw==",
          "dev": true,
          "requires": {
            "fast-deep-equal": "^3.1.1",
            "fast-json-stable-stringify": "^2.0.0",
            "json-schema-traverse": "^0.4.1",
            "uri-js": "^4.2.2"
          }
        },
        "fast-deep-equal": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.1.tgz",
          "integrity": "sha512-8UEa58QDLauDNfpbrX55Q9jrGHThw2ZMdOky5Gl1CDtVeJDPVrG4Jxx1N8jw2gkWaff5UUuX1KJd+9zGe2B+ZA==",
          "dev": true
        },
        "schema-utils": {
          "version": "2.6.5",
          "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-2.6.5.tgz",
          "integrity": "sha512-5KXuwKziQrTVHh8j/Uxz+QUbxkaLW9X/86NBlx/gnKgtsZA2GIVMUn17qWhRFwF8jdYb3Dig5hRO/W5mZqy6SQ==",
          "dev": true,
          "requires": {
            "ajv": "^6.12.0",
            "ajv-keywords": "^3.4.1"
          }
        }
      }
    },
    "saucelabs": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/saucelabs/-/saucelabs-1.5.0.tgz",
      "integrity": "sha512-jlX3FGdWvYf4Q3LFfFWS1QvPg3IGCGWxIc8QBFdPTbpTJnt/v17FHXYVAn7C8sHf1yUXo2c7yIM0isDryfYtHQ==",
      "dev": true,
      "requires": {
        "https-proxy-agent": "^2.2.1"
      }
    },
    "sax": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/sax/-/sax-1.2.4.tgz",
      "integrity": "sha512-NqVDv9TpANUjFm0N8uM5GxL36UgKi9/atZw+x7YFnQ8ckwFGKrl4xX4yWtrey3UJm5nP1kUbnYgLopqWNSRhWw==",
      "dev": true
    },
    "schema-utils": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-1.0.0.tgz",
      "integrity": "sha512-i27Mic4KovM/lnGsy8whRCHhc7VicJajAjTrYg11K9zfZXnYIt4k5F+kZkwjnrhKzLic/HLU4j11mjsz2G/75g==",
      "dev": true,
      "requires": {
        "ajv": "^6.1.0",
        "ajv-errors": "^1.0.0",
        "ajv-keywords": "^3.1.0"
      }
    },
    "scrypt-js": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/scrypt-js/-/scrypt-js-2.0.3.tgz",
      "integrity": "sha1-uwBAvgMEPamgEqLOqfyfhSz8h9Q="
    },
    "scryptsy": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/scryptsy/-/scryptsy-2.1.0.tgz",
      "integrity": "sha512-1CdSqHQowJBnMAFyPEBRfqag/YP9OF394FV+4YREIJX4ljD7OxvQRDayyoyyCk+senRjSkP6VnUNQmVQqB6g7w=="
    },
    "secp256k1": {
      "version": "3.8.0",
      "resolved": "https://registry.npmjs.org/secp256k1/-/secp256k1-3.8.0.tgz",
      "integrity": "sha512-k5ke5avRZbtl9Tqx/SA7CbY3NF6Ro+Sj9cZxezFzuBlLDmyqPiL8hJJ+EmzD8Ig4LUDByHJ3/iPOVoRixs/hmw==",
      "requires": {
        "bindings": "^1.5.0",
        "bip66": "^1.1.5",
        "bn.js": "^4.11.8",
        "create-hash": "^1.2.0",
        "drbg.js": "^1.0.1",
        "elliptic": "^6.5.2",
        "nan": "^2.14.0",
        "safe-buffer": "^5.1.2"
      }
    },
    "seek-bzip": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/seek-bzip/-/seek-bzip-1.0.5.tgz",
      "integrity": "sha1-z+kXyz0nS8/6x5J1ivUxc+sfq9w=",
      "requires": {
        "commander": "~2.8.1"
      },
      "dependencies": {
        "commander": {
          "version": "2.8.1",
          "resolved": "https://registry.npmjs.org/commander/-/commander-2.8.1.tgz",
          "integrity": "sha1-Br42f+v9oMMwqh4qBy09yXYkJdQ=",
          "requires": {
            "graceful-readlink": ">= 1.0.0"
          }
        }
      }
    },
    "select-hose": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/select-hose/-/select-hose-2.0.0.tgz",
      "integrity": "sha1-Yl2GWPhlr0Psliv8N2o3NZpJlMo=",
      "dev": true
    },
    "selenium-webdriver": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/selenium-webdriver/-/selenium-webdriver-3.6.0.tgz",
      "integrity": "sha512-WH7Aldse+2P5bbFBO4Gle/nuQOdVwpHMTL6raL3uuBj/vPG07k6uzt3aiahu352ONBr5xXh0hDlM3LhtXPOC4Q==",
      "dev": true,
      "requires": {
        "jszip": "^3.1.3",
        "rimraf": "^2.5.4",
        "tmp": "0.0.30",
        "xml2js": "^0.4.17"
      },
      "dependencies": {
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        },
        "tmp": {
          "version": "0.0.30",
          "resolved": "https://registry.npmjs.org/tmp/-/tmp-0.0.30.tgz",
          "integrity": "sha1-ckGdSovn1s51FI/YsyTlk6cRwu0=",
          "dev": true,
          "requires": {
            "os-tmpdir": "~1.0.1"
          }
        }
      }
    },
    "selfsigned": {
      "version": "1.10.7",
      "resolved": "https://registry.npmjs.org/selfsigned/-/selfsigned-1.10.7.tgz",
      "integrity": "sha512-8M3wBCzeWIJnQfl43IKwOmC4H/RAp50S8DF60znzjW5GVqTcSe2vWclt7hmYVPkKPlHWOu5EaWOMZ2Y6W8ZXTA==",
      "dev": true,
      "requires": {
        "node-forge": "0.9.0"
      }
    },
    "semver": {
      "version": "6.3.0",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
      "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw=="
    },
    "semver-dsl": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/semver-dsl/-/semver-dsl-1.0.1.tgz",
      "integrity": "sha1-02eN5VVeimH2Ke7QJTZq5fJzQKA=",
      "dev": true,
      "requires": {
        "semver": "^5.3.0"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "semver-intersect": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/semver-intersect/-/semver-intersect-1.4.0.tgz",
      "integrity": "sha512-d8fvGg5ycKAq0+I6nfWeCx6ffaWJCsBYU0H2Rq56+/zFePYfT8mXkB3tWBSjR5BerkHNZ5eTPIk1/LBYas35xQ==",
      "dev": true,
      "requires": {
        "semver": "^5.0.0"
      },
      "dependencies": {
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "send": {
      "version": "0.17.1",
      "resolved": "https://registry.npmjs.org/send/-/send-0.17.1.tgz",
      "integrity": "sha512-BsVKsiGcQMFwT8UxypobUKyv7irCNRHk1T0G680vk88yf6LBByGcZJOTJCrTP2xVN6yI+XjPJcNuE3V4fT9sAg==",
      "requires": {
        "debug": "2.6.9",
        "depd": "~1.1.2",
        "destroy": "~1.0.4",
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "etag": "~1.8.1",
        "fresh": "0.5.2",
        "http-errors": "~1.7.2",
        "mime": "1.6.0",
        "ms": "2.1.1",
        "on-finished": "~2.3.0",
        "range-parser": "~1.2.1",
        "statuses": "~1.5.0"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "requires": {
            "ms": "2.0.0"
          },
          "dependencies": {
            "ms": {
              "version": "2.0.0",
              "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
              "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
            }
          }
        },
        "ms": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.1.tgz",
          "integrity": "sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z/EfhWI4gl1Hwq8B/GmY/0oXZ6nF8hDVesS/FpnYaD/kOWhYQvyg=="
        }
      }
    },
    "serialize-javascript": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-2.1.2.tgz",
      "integrity": "sha512-rs9OggEUF0V4jUSecXazOYsLfu7OGK2qIn3c7IPBiffz32XniEp/TX9Xmc9LQfK2nQ2QKHvZ2oygKUGU0lG4jQ==",
      "dev": true
    },
    "serve-index": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/serve-index/-/serve-index-1.9.1.tgz",
      "integrity": "sha1-03aNabHn2C5c4FD/9bRTvqEqkjk=",
      "dev": true,
      "requires": {
        "accepts": "~1.3.4",
        "batch": "0.6.1",
        "debug": "2.6.9",
        "escape-html": "~1.0.3",
        "http-errors": "~1.6.2",
        "mime-types": "~2.1.17",
        "parseurl": "~1.3.2"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "http-errors": {
          "version": "1.6.3",
          "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz",
          "integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",
          "dev": true,
          "requires": {
            "depd": "~1.1.2",
            "inherits": "2.0.3",
            "setprototypeof": "1.1.0",
            "statuses": ">= 1.4.0 < 2"
          }
        },
        "inherits": {
          "version": "2.0.3",
          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
          "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
          "dev": true
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
          "dev": true
        },
        "setprototypeof": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.0.tgz",
          "integrity": "sha512-BvE/TwpZX4FXExxOxZyRGQQv651MSwmWKZGqvmPcRIjDqWub67kTKuIMx43cZZrS/cBBzwBcNDWoFxt2XEFIpQ==",
          "dev": true
        }
      }
    },
    "serve-static": {
      "version": "1.14.1",
      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.14.1.tgz",
      "integrity": "sha512-JMrvUwE54emCYWlTI+hGrGv5I8dEwmco/00EvkzIIsR7MqrHonbD9pO2MOfFnpFntl7ecpZs+3mW+XbQZu9QCg==",
      "requires": {
        "encodeurl": "~1.0.2",
        "escape-html": "~1.0.3",
        "parseurl": "~1.3.3",
        "send": "0.17.1"
      }
    },
    "server-destroy": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/server-destroy/-/server-destroy-1.0.1.tgz",
      "integrity": "sha1-8Tv5KOQrnD55OD5hzDmYtdFObN0=",
      "dev": true
    },
    "servify": {
      "version": "0.1.12",
      "resolved": "https://registry.npmjs.org/servify/-/servify-0.1.12.tgz",
      "integrity": "sha512-/xE6GvsKKqyo1BAY+KxOWXcLpPsUUyji7Qg3bVD7hh1eRze5bR1uYiuDA/k3Gof1s9BTzQZEJK8sNcNGFIzeWw==",
      "requires": {
        "body-parser": "^1.16.0",
        "cors": "^2.8.1",
        "express": "^4.14.0",
        "request": "^2.79.0",
        "xhr": "^2.3.3"
      }
    },
    "set-blocking": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
      "integrity": "sha1-BF+XgtARrppoA93TgrJDkrPYkPc=",
      "dev": true
    },
    "set-immediate-shim": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/set-immediate-shim/-/set-immediate-shim-1.0.1.tgz",
      "integrity": "sha1-SysbJ+uAip+NzEgaWOXlb1mfP2E=",
      "dev": true
    },
    "set-value": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/set-value/-/set-value-2.0.1.tgz",
      "integrity": "sha512-JxHc1weCN68wRY0fhCoXpyK55m/XPHafOmK4UWD7m2CI14GMcFypt4w/0+NV5f/ZMby2F6S2wwA7fgynh9gWSw==",
      "dev": true,
      "requires": {
        "extend-shallow": "^2.0.1",
        "is-extendable": "^0.1.1",
        "is-plain-object": "^2.0.3",
        "split-string": "^3.0.1"
      },
      "dependencies": {
        "extend-shallow": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
          "dev": true,
          "requires": {
            "is-extendable": "^0.1.0"
          }
        }
      }
    },
    "setimmediate": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/setimmediate/-/setimmediate-1.0.5.tgz",
      "integrity": "sha1-KQy7Iy4waULX1+qbg3Mqt4VvgoU="
    },
    "setprototypeof": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.1.tgz",
      "integrity": "sha512-JvdAWfbXeIGaZ9cILp38HntZSFSo3mWg6xGcJJsd+d4aRMOqauag1C63dJfDw7OaMYwEbHMOxEZ1lqVRYP2OAw=="
    },
    "sha.js": {
      "version": "2.4.11",
      "resolved": "https://registry.npmjs.org/sha.js/-/sha.js-2.4.11.tgz",
      "integrity": "sha512-QMEp5B7cftE7APOjk5Y6xgrbWu+WkLVQwk8JNjZ8nKRciZaByEW6MubieAiToS7+dwvrjGhH8jRXz3MVd0AYqQ==",
      "requires": {
        "inherits": "^2.0.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "shallow-clone": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/shallow-clone/-/shallow-clone-3.0.1.tgz",
      "integrity": "sha512-/6KqX+GVUdqPuPPd2LxDDxzX6CAbjJehAAOKlNpqqUpAqPM6HeL8f+o3a+JsyGjn2lv0WY8UsTgUJjU9Ok55NA==",
      "dev": true,
      "requires": {
        "kind-of": "^6.0.2"
      }
    },
    "shebang-command": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-1.2.0.tgz",
      "integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
      "dev": true,
      "requires": {
        "shebang-regex": "^1.0.0"
      }
    },
    "shebang-regex": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-1.0.0.tgz",
      "integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM=",
      "dev": true
    },
    "signal-exit": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz",
      "integrity": "sha1-tf3AjxKH6hF4Yo5BXiUTK3NkbG0=",
      "dev": true
    },
    "simple-concat": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/simple-concat/-/simple-concat-1.0.0.tgz",
      "integrity": "sha1-c0TLuLbib7J9ZrL8hvn21Zl1IcY="
    },
    "simple-get": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/simple-get/-/simple-get-2.8.1.tgz",
      "integrity": "sha512-lSSHRSw3mQNUGPAYRqo7xy9dhKmxFXIjLjp4KHpf99GEH2VH7C3AM+Qfx6du6jhfUi6Vm7XnbEVEf7Wb6N8jRw==",
      "requires": {
        "decompress-response": "^3.3.0",
        "once": "^1.3.1",
        "simple-concat": "^1.0.0"
      }
    },
    "simple-swizzle": {
      "version": "0.2.2",
      "resolved": "https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz",
      "integrity": "sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=",
      "dev": true,
      "requires": {
        "is-arrayish": "^0.3.1"
      },
      "dependencies": {
        "is-arrayish": {
          "version": "0.3.2",
          "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz",
          "integrity": "sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==",
          "dev": true
        }
      }
    },
    "slash": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/slash/-/slash-1.0.0.tgz",
      "integrity": "sha1-xB8vbDn8FtHNF61LXYlhFK5HDVU=",
      "dev": true
    },
    "smart-buffer": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/smart-buffer/-/smart-buffer-4.1.0.tgz",
      "integrity": "sha512-iVICrxOzCynf/SNaBQCw34eM9jROU/s5rzIhpOvzhzuYHfJR/DhZfDkXiZSgKXfgv26HT3Yni3AV/DGw0cGnnw==",
      "dev": true
    },
    "snapdragon": {
      "version": "0.8.2",
      "resolved": "https://registry.npmjs.org/snapdragon/-/snapdragon-0.8.2.tgz",
      "integrity": "sha512-FtyOnWN/wCHTVXOMwvSv26d+ko5vWlIDD6zoUJ7LW8vh+ZBC8QdljveRP+crNrtBwioEUWy/4dMtbBjA4ioNlg==",
      "dev": true,
      "requires": {
        "base": "^0.11.1",
        "debug": "^2.2.0",
        "define-property": "^0.2.5",
        "extend-shallow": "^2.0.1",
        "map-cache": "^0.2.2",
        "source-map": "^0.5.6",
        "source-map-resolve": "^0.5.0",
        "use": "^3.1.0"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "define-property": {
          "version": "0.2.5",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^0.1.0"
          }
        },
        "extend-shallow": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
          "dev": true,
          "requires": {
            "is-extendable": "^0.1.0"
          }
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
          "dev": true
        },
        "source-map": {
          "version": "0.5.7",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
          "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",
          "dev": true
        }
      }
    },
    "snapdragon-node": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/snapdragon-node/-/snapdragon-node-2.1.1.tgz",
      "integrity": "sha512-O27l4xaMYt/RSQ5TR3vpWCAB5Kb/czIcqUFOM/C4fYcLnbZUc1PkjTAMjof2pBWaSTwOUd6qUHcFGVGj7aIwnw==",
      "dev": true,
      "requires": {
        "define-property": "^1.0.0",
        "isobject": "^3.0.0",
        "snapdragon-util": "^3.0.1"
      },
      "dependencies": {
        "define-property": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",
          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^1.0.0"
          }
        },
        "is-accessor-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-data-descriptor": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",
          "dev": true,
          "requires": {
            "kind-of": "^6.0.0"
          }
        },
        "is-descriptor": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",
          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",
          "dev": true,
          "requires": {
            "is-accessor-descriptor": "^1.0.0",
            "is-data-descriptor": "^1.0.0",
            "kind-of": "^6.0.2"
          }
        }
      }
    },
    "snapdragon-util": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/snapdragon-util/-/snapdragon-util-3.0.1.tgz",
      "integrity": "sha512-mbKkMdQKsjX4BAL4bRYTj21edOf8cN7XHdYUJEe+Zn99hVEYcMvKPct1IqNe7+AZPirn8BCDOQBHQZknqmKlZQ==",
      "dev": true,
      "requires": {
        "kind-of": "^3.2.0"
      },
      "dependencies": {
        "kind-of": {
          "version": "3.2.2",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
          "dev": true,
          "requires": {
            "is-buffer": "^1.1.5"
          }
        }
      }
    },
    "socket.io": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/socket.io/-/socket.io-2.1.1.tgz",
      "integrity": "sha512-rORqq9c+7W0DAK3cleWNSyfv/qKXV99hV4tZe+gGLfBECw3XEhBy7x85F3wypA9688LKjtwO9pX9L33/xQI8yA==",
      "dev": true,
      "requires": {
        "debug": "~3.1.0",
        "engine.io": "~3.2.0",
        "has-binary2": "~1.0.2",
        "socket.io-adapter": "~1.1.0",
        "socket.io-client": "2.1.1",
        "socket.io-parser": "~3.2.0"
      },
      "dependencies": {
        "debug": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
          "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
          "dev": true
        }
      }
    },
    "socket.io-adapter": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/socket.io-adapter/-/socket.io-adapter-1.1.2.tgz",
      "integrity": "sha512-WzZRUj1kUjrTIrUKpZLEzFZ1OLj5FwLlAFQs9kuZJzJi5DKdU7FsWc36SNmA8iDOtwBQyT8FkrriRM8vXLYz8g==",
      "dev": true
    },
    "socket.io-client": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/socket.io-client/-/socket.io-client-2.1.1.tgz",
      "integrity": "sha512-jxnFyhAuFxYfjqIgduQlhzqTcOEQSn+OHKVfAxWaNWa7ecP7xSNk2Dx/3UEsDcY7NcFafxvNvKPmmO7HTwTxGQ==",
      "dev": true,
      "requires": {
        "backo2": "1.0.2",
        "base64-arraybuffer": "0.1.5",
        "component-bind": "1.0.0",
        "component-emitter": "1.2.1",
        "debug": "~3.1.0",
        "engine.io-client": "~3.2.0",
        "has-binary2": "~1.0.2",
        "has-cors": "1.1.0",
        "indexof": "0.0.1",
        "object-component": "0.0.3",
        "parseqs": "0.0.5",
        "parseuri": "0.0.5",
        "socket.io-parser": "~3.2.0",
        "to-array": "0.1.4"
      },
      "dependencies": {
        "component-emitter": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/component-emitter/-/component-emitter-1.2.1.tgz",
          "integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY=",
          "dev": true
        },
        "debug": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
          "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
          "dev": true
        }
      }
    },
    "socket.io-parser": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/socket.io-parser/-/socket.io-parser-3.2.0.tgz",
      "integrity": "sha512-FYiBx7rc/KORMJlgsXysflWx/RIvtqZbyGLlHZvjfmPTPeuD/I8MaW7cfFrj5tRltICJdgwflhfZ3NVVbVLFQA==",
      "dev": true,
      "requires": {
        "component-emitter": "1.2.1",
        "debug": "~3.1.0",
        "isarray": "2.0.1"
      },
      "dependencies": {
        "component-emitter": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/component-emitter/-/component-emitter-1.2.1.tgz",
          "integrity": "sha1-E3kY1teCg/ffemt8WmPhQOaUJeY=",
          "dev": true
        },
        "debug": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
          "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "isarray": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.1.tgz",
          "integrity": "sha1-o32U7ZzaLVmGXJ92/llu4fM4dB4=",
          "dev": true
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
          "dev": true
        }
      }
    },
    "sockjs": {
      "version": "0.3.19",
      "resolved": "https://registry.npmjs.org/sockjs/-/sockjs-0.3.19.tgz",
      "integrity": "sha512-V48klKZl8T6MzatbLlzzRNhMepEys9Y4oGFpypBFFn1gLI/QQ9HtLLyWJNbPlwGLelOVOEijUbTTJeLLI59jLw==",
      "dev": true,
      "requires": {
        "faye-websocket": "^0.10.0",
        "uuid": "^3.0.1"
      },
      "dependencies": {
        "uuid": {
          "version": "3.4.0",
          "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
          "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
          "dev": true
        }
      }
    },
    "sockjs-client": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/sockjs-client/-/sockjs-client-1.4.0.tgz",
      "integrity": "sha512-5zaLyO8/nri5cua0VtOrFXBPK1jbL4+1cebT/mmKA1E1ZXOvJrII75bPu0l0k843G/+iAbhEqzyKr0w/eCCj7g==",
      "dev": true,
      "requires": {
        "debug": "^3.2.5",
        "eventsource": "^1.0.7",
        "faye-websocket": "~0.11.1",
        "inherits": "^2.0.3",
        "json3": "^3.3.2",
        "url-parse": "^1.4.3"
      },
      "dependencies": {
        "debug": {
          "version": "3.2.6",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
          "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "faye-websocket": {
          "version": "0.11.3",
          "resolved": "https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.11.3.tgz",
          "integrity": "sha512-D2y4bovYpzziGgbHYtGCMjlJM36vAl/y+xUyn1C+FVx8szd1E+86KwVw6XvYSzOP8iMpm1X0I4xJD+QtUb36OA==",
          "dev": true,
          "requires": {
            "websocket-driver": ">=0.5.1"
          }
        }
      }
    },
    "socks": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/socks/-/socks-2.3.3.tgz",
      "integrity": "sha512-o5t52PCNtVdiOvzMry7wU4aOqYWL0PeCXRWBEiJow4/i/wr+wpsJQ9awEu1EonLIqsfGd5qSgDdxEOvCdmBEpA==",
      "dev": true,
      "requires": {
        "ip": "1.1.5",
        "smart-buffer": "^4.1.0"
      }
    },
    "socks-proxy-agent": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/socks-proxy-agent/-/socks-proxy-agent-4.0.2.tgz",
      "integrity": "sha512-NT6syHhI9LmuEMSK6Kd2V7gNv5KFZoLE7V5udWmn0de+3Mkj3UMA/AJPLyeNUVmElCurSHtUdM3ETpR3z770Wg==",
      "dev": true,
      "requires": {
        "agent-base": "~4.2.1",
        "socks": "~2.3.2"
      },
      "dependencies": {
        "agent-base": {
          "version": "4.2.1",
          "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-4.2.1.tgz",
          "integrity": "sha512-JVwXMr9nHYTUXsBFKUqhJwvlcYU/blreOEUkhNR2eXZIvwd+c+o5V4MgDPKWnMS/56awN3TRzIP+KoPn+roQtg==",
          "dev": true,
          "requires": {
            "es6-promisify": "^5.0.0"
          }
        }
      }
    },
    "sort-keys": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/sort-keys/-/sort-keys-1.1.2.tgz",
      "integrity": "sha1-RBttTTRnmPG05J6JIK37oOVD+a0=",
      "dev": true,
      "requires": {
        "is-plain-obj": "^1.0.0"
      }
    },
    "source-list-map": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/source-list-map/-/source-list-map-2.0.1.tgz",
      "integrity": "sha512-qnQ7gVMxGNxsiL4lEuJwe/To8UnK7fAnmbGEEH8RpLouuKbeEm0lhbQVFIrNSuB+G7tVrAlVsZgETT5nljf+Iw==",
      "dev": true
    },
    "source-map": {
      "version": "0.7.3",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.7.3.tgz",
      "integrity": "sha512-CkCj6giN3S+n9qrYiBTX5gystlENnRW5jZeNLHpe6aue+SrHcG5VYwujhW9s4dY31mEGsxBDrHR6oI69fTXsaQ==",
      "dev": true
    },
    "source-map-loader": {
      "version": "0.2.4",
      "resolved": "https://registry.npmjs.org/source-map-loader/-/source-map-loader-0.2.4.tgz",
      "integrity": "sha512-OU6UJUty+i2JDpTItnizPrlpOIBLmQbWMuBg9q5bVtnHACqw1tn9nNwqJLbv0/00JjnJb/Ee5g5WS5vrRv7zIQ==",
      "dev": true,
      "requires": {
        "async": "^2.5.0",
        "loader-utils": "^1.1.0"
      }
    },
    "source-map-resolve": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/source-map-resolve/-/source-map-resolve-0.5.3.tgz",
      "integrity": "sha512-Htz+RnsXWk5+P2slx5Jh3Q66vhQj1Cllm0zvnaY98+NFx+Dv2CF/f5O/t8x+KaNdrdIAsruNzoh/KpialbqAnw==",
      "dev": true,
      "requires": {
        "atob": "^2.1.2",
        "decode-uri-component": "^0.2.0",
        "resolve-url": "^0.2.1",
        "source-map-url": "^0.4.0",
        "urix": "^0.1.0"
      }
    },
    "source-map-support": {
      "version": "0.5.16",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.16.tgz",
      "integrity": "sha512-efyLRJDr68D9hBBNIPWFjhpFzURh+KJykQwvMyW5UiZzYwoF6l4YMMDIJJEyFWxWCqfyxLzz6tSfUFR+kXXsVQ==",
      "dev": true,
      "requires": {
        "buffer-from": "^1.0.0",
        "source-map": "^0.6.0"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "source-map-url": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/source-map-url/-/source-map-url-0.4.0.tgz",
      "integrity": "sha1-PpNdfd1zYxuXZZlW1VEo6HtQhKM=",
      "dev": true
    },
    "sourcemap-codec": {
      "version": "1.4.8",
      "resolved": "https://registry.npmjs.org/sourcemap-codec/-/sourcemap-codec-1.4.8.tgz",
      "integrity": "sha512-9NykojV5Uih4lgo5So5dtw+f0JgJX30KCNI8gwhz2J9A15wD0Ml6tjHKwf6fTSa6fAdVBdZeNOs9eJ71qCk8vA==",
      "dev": true
    },
    "spdx-correct": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.1.0.tgz",
      "integrity": "sha512-lr2EZCctC2BNR7j7WzJ2FpDznxky1sjfxvvYEyzxNyb6lZXHODmEoJeFu4JupYlkfha1KZpJyoqiJ7pgA1qq8Q==",
      "dev": true,
      "requires": {
        "spdx-expression-parse": "^3.0.0",
        "spdx-license-ids": "^3.0.0"
      }
    },
    "spdx-exceptions": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.2.0.tgz",
      "integrity": "sha512-2XQACfElKi9SlVb1CYadKDXvoajPgBVPn/gOQLrTvHdElaVhr7ZEbqJaRnJLVNeaI4cMEAgVCeBMKF6MWRDCRA==",
      "dev": true
    },
    "spdx-expression-parse": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.0.tgz",
      "integrity": "sha512-Yg6D3XpRD4kkOmTpdgbUiEJFKghJH03fiC1OPll5h/0sO6neh2jqRDVHOQ4o/LMea0tgCkbMgea5ip/e+MkWyg==",
      "dev": true,
      "requires": {
        "spdx-exceptions": "^2.1.0",
        "spdx-license-ids": "^3.0.0"
      }
    },
    "spdx-license-ids": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.5.tgz",
      "integrity": "sha512-J+FWzZoynJEXGphVIS+XEh3kFSjZX/1i9gFBaWQcB+/tmpe2qUsSBABpcxqxnAxFdiUFEgAX1bjYGQvIZmoz9Q==",
      "dev": true
    },
    "spdy": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/spdy/-/spdy-4.0.1.tgz",
      "integrity": "sha512-HeZS3PBdMA+sZSu0qwpCxl3DeALD5ASx8pAX0jZdKXSpPWbQ6SYGnlg3BBmYLx5LtiZrmkAZfErCm2oECBcioA==",
      "dev": true,
      "requires": {
        "debug": "^4.1.0",
        "handle-thing": "^2.0.0",
        "http-deceiver": "^1.2.7",
        "select-hose": "^2.0.0",
        "spdy-transport": "^3.0.0"
      }
    },
    "spdy-transport": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/spdy-transport/-/spdy-transport-3.0.0.tgz",
      "integrity": "sha512-hsLVFE5SjA6TCisWeJXFKniGGOpBgMLmerfO2aCyCU5s7nJ/rpAepqmFifv/GCbSbueEeAJJnmSQ2rKC/g8Fcw==",
      "dev": true,
      "requires": {
        "debug": "^4.1.0",
        "detect-node": "^2.0.4",
        "hpack.js": "^2.1.6",
        "obuf": "^1.1.2",
        "readable-stream": "^3.0.6",
        "wbuf": "^1.7.3"
      },
      "dependencies": {
        "readable-stream": {
          "version": "3.6.0",
          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.0.tgz",
          "integrity": "sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==",
          "dev": true,
          "requires": {
            "inherits": "^2.0.3",
            "string_decoder": "^1.1.1",
            "util-deprecate": "^1.0.1"
          }
        }
      }
    },
    "speed-measure-webpack-plugin": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/speed-measure-webpack-plugin/-/speed-measure-webpack-plugin-1.3.1.tgz",
      "integrity": "sha512-qVIkJvbtS9j/UeZumbdfz0vg+QfG/zxonAjzefZrqzkr7xOncLVXkeGbTpzd1gjCBM4PmVNkWlkeTVhgskAGSQ==",
      "dev": true,
      "requires": {
        "chalk": "^2.0.1"
      }
    },
    "split-string": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/split-string/-/split-string-3.1.0.tgz",
      "integrity": "sha512-NzNVhJDYpwceVVii8/Hu6DKfD2G+NrQHlS/V/qgv763EYudVwEcMQNxd2lh+0VrUByXN/oJkl5grOhYWvQUYiw==",
      "dev": true,
      "requires": {
        "extend-shallow": "^3.0.0"
      }
    },
    "sprintf-js": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
      "integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=",
      "dev": true
    },
    "sshpk": {
      "version": "1.16.1",
      "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.16.1.tgz",
      "integrity": "sha512-HXXqVUq7+pcKeLqqZj6mHFUMvXtOJt1uoUx09pFW6011inTMxqI8BA8PM95myrIyyKwdnzjdFjLiE6KBPVtJIg==",
      "requires": {
        "asn1": "~0.2.3",
        "assert-plus": "^1.0.0",
        "bcrypt-pbkdf": "^1.0.0",
        "dashdash": "^1.12.0",
        "ecc-jsbn": "~0.1.1",
        "getpass": "^0.1.1",
        "jsbn": "~0.1.0",
        "safer-buffer": "^2.0.2",
        "tweetnacl": "~0.14.0"
      }
    },
    "ssri": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/ssri/-/ssri-7.1.0.tgz",
      "integrity": "sha512-77/WrDZUWocK0mvA5NTRQyveUf+wsrIc6vyrxpS8tVvYBcX215QbafrJR3KtkpskIzoFLqqNuuYQvxaMjXJ/0g==",
      "dev": true,
      "requires": {
        "figgy-pudding": "^3.5.1",
        "minipass": "^3.1.1"
      }
    },
    "stable": {
      "version": "0.1.8",
      "resolved": "https://registry.npmjs.org/stable/-/stable-0.1.8.tgz",
      "integrity": "sha512-ji9qxRnOVfcuLDySj9qzhGSEFVobyt1kIOSkj1qZzYLzq7Tos/oUUWvotUPQLlrsidqsK6tBH89Bc9kL5zHA6w==",
      "dev": true
    },
    "static-extend": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/static-extend/-/static-extend-0.1.2.tgz",
      "integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
      "dev": true,
      "requires": {
        "define-property": "^0.2.5",
        "object-copy": "^0.1.0"
      },
      "dependencies": {
        "define-property": {
          "version": "0.2.5",
          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",
          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
          "dev": true,
          "requires": {
            "is-descriptor": "^0.1.0"
          }
        }
      }
    },
    "statuses": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
      "integrity": "sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow="
    },
    "stream-browserify": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/stream-browserify/-/stream-browserify-2.0.2.tgz",
      "integrity": "sha512-nX6hmklHs/gr2FuxYDltq8fJA1GDlxKQCz8O/IM4atRqBH8OORmBNgfvW5gG10GT/qQ9u0CzIvr2X5Pkt6ntqg==",
      "dev": true,
      "requires": {
        "inherits": "~2.0.1",
        "readable-stream": "^2.0.2"
      }
    },
    "stream-each": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/stream-each/-/stream-each-1.2.3.tgz",
      "integrity": "sha512-vlMC2f8I2u/bZGqkdfLQW/13Zihpej/7PmSiMQsbYddxuTsJp8vRe2x2FvVExZg7FaOds43ROAuFJwPR4MTZLw==",
      "dev": true,
      "requires": {
        "end-of-stream": "^1.1.0",
        "stream-shift": "^1.0.0"
      }
    },
    "stream-http": {
      "version": "2.8.3",
      "resolved": "https://registry.npmjs.org/stream-http/-/stream-http-2.8.3.tgz",
      "integrity": "sha512-+TSkfINHDo4J+ZobQLWiMouQYB+UVYFttRA94FpEzzJ7ZdqcL4uUUQ7WkdkI4DSozGmgBUE/a47L+38PenXhUw==",
      "dev": true,
      "requires": {
        "builtin-status-codes": "^3.0.0",
        "inherits": "^2.0.1",
        "readable-stream": "^2.3.6",
        "to-arraybuffer": "^1.0.0",
        "xtend": "^4.0.0"
      }
    },
    "stream-shift": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/stream-shift/-/stream-shift-1.0.1.tgz",
      "integrity": "sha512-AiisoFqQ0vbGcZgQPY1cdP2I76glaVA/RauYR4G4thNFgkTqr90yXTo4LYX60Jl+sIlPNHHdGSwo01AvbKUSVQ==",
      "dev": true
    },
    "stream-throttle": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/stream-throttle/-/stream-throttle-0.1.3.tgz",
      "integrity": "sha1-rdV8jXzHOoFjDTHNVdOWHPr7qcM=",
      "dev": true,
      "requires": {
        "commander": "^2.2.0",
        "limiter": "^1.0.5"
      }
    },
    "streamroller": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/streamroller/-/streamroller-1.0.6.tgz",
      "integrity": "sha512-3QC47Mhv3/aZNFpDDVO44qQb9gwB9QggMEE0sQmkTAwBVYdBRWISdsywlkfm5II1Q5y/pmrHflti/IgmIzdDBg==",
      "dev": true,
      "requires": {
        "async": "^2.6.2",
        "date-format": "^2.0.0",
        "debug": "^3.2.6",
        "fs-extra": "^7.0.1",
        "lodash": "^4.17.14"
      },
      "dependencies": {
        "debug": {
          "version": "3.2.6",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
          "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "fs-extra": {
          "version": "7.0.1",
          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-7.0.1.tgz",
          "integrity": "sha512-YJDaCJZEnBmcbw13fvdAM9AwNOJwOzrE4pqMqBq5nFiEqXUqHwlK4B+3pUw6JNvfSPtX05xFHtYy/1ni01eGCw==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.2",
            "jsonfile": "^4.0.0",
            "universalify": "^0.1.0"
          }
        }
      }
    },
    "strict-uri-encode": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/strict-uri-encode/-/strict-uri-encode-1.1.0.tgz",
      "integrity": "sha1-J5siXfHVgrH1TmWt3UNS4Y+qBxM="
    },
    "string-width": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
      "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
      "dev": true,
      "requires": {
        "is-fullwidth-code-point": "^2.0.0",
        "strip-ansi": "^4.0.0"
      },
      "dependencies": {
        "ansi-regex": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
          "dev": true
        },
        "strip-ansi": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
          "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
          "dev": true,
          "requires": {
            "ansi-regex": "^3.0.0"
          }
        }
      }
    },
    "string.prototype.trimleft": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/string.prototype.trimleft/-/string.prototype.trimleft-2.1.1.tgz",
      "integrity": "sha512-iu2AGd3PuP5Rp7x2kEZCrB2Nf41ehzh+goo8TV7z8/XDBbsvc6HQIlUl9RjkZ4oyrW1XM5UwlGl1oVEaDjg6Ag==",
      "dev": true,
      "requires": {
        "define-properties": "^1.1.3",
        "function-bind": "^1.1.1"
      }
    },
    "string.prototype.trimright": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/string.prototype.trimright/-/string.prototype.trimright-2.1.1.tgz",
      "integrity": "sha512-qFvWL3/+QIgZXVmJBfpHmxLB7xsUXz6HsUmP8+5dRaC3Q7oKUv9Vo6aMCRZC1smrtyECFsIT30PqBJ1gTjAs+g==",
      "dev": true,
      "requires": {
        "define-properties": "^1.1.3",
        "function-bind": "^1.1.1"
      }
    },
    "string_decoder": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
      "requires": {
        "safe-buffer": "~5.1.0"
      }
    },
    "strip-ansi": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
      "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
      "requires": {
        "ansi-regex": "^2.0.0"
      }
    },
    "strip-bom": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
      "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=",
      "dev": true
    },
    "strip-dirs": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/strip-dirs/-/strip-dirs-2.1.0.tgz",
      "integrity": "sha512-JOCxOeKLm2CAS73y/U4ZeZPTkE+gNVCzKt7Eox84Iej1LT/2pTWYpZKJuxwQpvX1LiZb1xokNR7RLfuBAa7T3g==",
      "requires": {
        "is-natural-number": "^4.0.1"
      }
    },
    "strip-eof": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/strip-eof/-/strip-eof-1.0.0.tgz",
      "integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8=",
      "dev": true
    },
    "strip-hex-prefix": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/strip-hex-prefix/-/strip-hex-prefix-1.0.0.tgz",
      "integrity": "sha1-DF8VX+8RUTczd96du1iNoFUA428=",
      "requires": {
        "is-hex-prefixed": "1.0.0"
      }
    },
    "style-loader": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/style-loader/-/style-loader-1.0.0.tgz",
      "integrity": "sha512-B0dOCFwv7/eY31a5PCieNwMgMhVGFe9w+rh7s/Bx8kfFkrth9zfTZquoYvdw8URgiqxObQKcpW51Ugz1HjfdZw==",
      "dev": true,
      "requires": {
        "loader-utils": "^1.2.3",
        "schema-utils": "^2.0.1"
      },
      "dependencies": {
        "ajv": {
          "version": "6.12.0",
          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.0.tgz",
          "integrity": "sha512-D6gFiFA0RRLyUbvijN74DWAjXSFxWKaWP7mldxkVhyhAV3+SWA9HEJPHQ2c9soIeTFJqcSdFDGFgdqs1iUU2Hw==",
          "dev": true,
          "requires": {
            "fast-deep-equal": "^3.1.1",
            "fast-json-stable-stringify": "^2.0.0",
            "json-schema-traverse": "^0.4.1",
            "uri-js": "^4.2.2"
          }
        },
        "fast-deep-equal": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.1.tgz",
          "integrity": "sha512-8UEa58QDLauDNfpbrX55Q9jrGHThw2ZMdOky5Gl1CDtVeJDPVrG4Jxx1N8jw2gkWaff5UUuX1KJd+9zGe2B+ZA==",
          "dev": true
        },
        "schema-utils": {
          "version": "2.6.5",
          "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-2.6.5.tgz",
          "integrity": "sha512-5KXuwKziQrTVHh8j/Uxz+QUbxkaLW9X/86NBlx/gnKgtsZA2GIVMUn17qWhRFwF8jdYb3Dig5hRO/W5mZqy6SQ==",
          "dev": true,
          "requires": {
            "ajv": "^6.12.0",
            "ajv-keywords": "^3.4.1"
          }
        }
      }
    },
    "stylehacks": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/stylehacks/-/stylehacks-4.0.3.tgz",
      "integrity": "sha512-7GlLk9JwlElY4Y6a/rmbH2MhVlTyVmiJd1PfTCqFaIBEGMYNsrO/v3SeGTdhBThLg4Z+NbOk/qFMwCa+J+3p/g==",
      "dev": true,
      "requires": {
        "browserslist": "^4.0.0",
        "postcss": "^7.0.0",
        "postcss-selector-parser": "^3.0.0"
      },
      "dependencies": {
        "postcss-selector-parser": {
          "version": "3.1.2",
          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-3.1.2.tgz",
          "integrity": "sha512-h7fJ/5uWuRVyOtkO45pnt1Ih40CEleeyCHzipqAZO2e5H20g25Y48uYnFUiShvY4rZWNJ/Bib/KVPmanaCtOhA==",
          "dev": true,
          "requires": {
            "dot-prop": "^5.2.0",
            "indexes-of": "^1.0.1",
            "uniq": "^1.0.1"
          }
        }
      }
    },
    "stylus": {
      "version": "0.54.7",
      "resolved": "https://registry.npmjs.org/stylus/-/stylus-0.54.7.tgz",
      "integrity": "sha512-Yw3WMTzVwevT6ZTrLCYNHAFmanMxdylelL3hkWNgPMeTCpMwpV3nXjpOHuBXtFv7aiO2xRuQS6OoAdgkNcSNug==",
      "dev": true,
      "requires": {
        "css-parse": "~2.0.0",
        "debug": "~3.1.0",
        "glob": "^7.1.3",
        "mkdirp": "~0.5.x",
        "safer-buffer": "^2.1.2",
        "sax": "~1.2.4",
        "semver": "^6.0.0",
        "source-map": "^0.7.3"
      },
      "dependencies": {
        "debug": {
          "version": "3.1.0",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.1.0.tgz",
          "integrity": "sha512-OX8XqP7/1a9cqkxYw2yXss15f26NKWBpDXQd0/uK/KPqdQhxbPa994hnzjcE2VqQpDslf55723cKPUOGSmMY3g==",
          "dev": true,
          "requires": {
            "ms": "2.0.0"
          }
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
          "dev": true
        }
      }
    },
    "stylus-loader": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/stylus-loader/-/stylus-loader-3.0.2.tgz",
      "integrity": "sha512-+VomPdZ6a0razP+zinir61yZgpw2NfljeSsdUF5kJuEzlo3khXhY19Fn6l8QQz1GRJGtMCo8nG5C04ePyV7SUA==",
      "dev": true,
      "requires": {
        "loader-utils": "^1.0.2",
        "lodash.clonedeep": "^4.5.0",
        "when": "~3.6.x"
      }
    },
    "supports-color": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
      "dev": true,
      "requires": {
        "has-flag": "^3.0.0"
      }
    },
    "svgo": {
      "version": "1.3.2",
      "resolved": "https://registry.npmjs.org/svgo/-/svgo-1.3.2.tgz",
      "integrity": "sha512-yhy/sQYxR5BkC98CY7o31VGsg014AKLEPxdfhora76l36hD9Rdy5NZA/Ocn6yayNPgSamYdtX2rFJdcv07AYVw==",
      "dev": true,
      "requires": {
        "chalk": "^2.4.1",
        "coa": "^2.0.2",
        "css-select": "^2.0.0",
        "css-select-base-adapter": "^0.1.1",
        "css-tree": "1.0.0-alpha.37",
        "csso": "^4.0.2",
        "js-yaml": "^3.13.1",
        "mkdirp": "~0.5.1",
        "object.values": "^1.1.0",
        "sax": "~1.2.4",
        "stable": "^0.1.8",
        "unquote": "~1.1.1",
        "util.promisify": "~1.0.0"
      }
    },
    "swarm-js": {
      "version": "0.1.39",
      "resolved": "https://registry.npmjs.org/swarm-js/-/swarm-js-0.1.39.tgz",
      "integrity": "sha512-QLMqL2rzF6n5s50BptyD6Oi0R1aWlJC5Y17SRIVXRj6OR1DRIPM7nepvrxxkjA1zNzFz6mUOMjfeqeDaWB7OOg==",
      "requires": {
        "bluebird": "^3.5.0",
        "buffer": "^5.0.5",
        "decompress": "^4.0.0",
        "eth-lib": "^0.1.26",
        "fs-extra": "^4.0.2",
        "got": "^7.1.0",
        "mime-types": "^2.1.16",
        "mkdirp-promise": "^5.0.1",
        "mock-fs": "^4.1.0",
        "setimmediate": "^1.0.5",
        "tar": "^4.0.2",
        "xhr-request-promise": "^0.1.2"
      },
      "dependencies": {
        "buffer": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.5.0.tgz",
          "integrity": "sha512-9FTEDjLjwoAkEwyMGDjYJQN2gfRgOKBKRfiglhvibGbpeeU/pQn1bJxQqm32OD/AIeEuHxU9roxXxg34Byp/Ww==",
          "requires": {
            "base64-js": "^1.0.2",
            "ieee754": "^1.1.4"
          }
        },
        "get-stream": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-3.0.0.tgz",
          "integrity": "sha1-jpQ9E1jcN1VQVOy+LtsFqhdO3hQ="
        },
        "got": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/got/-/got-7.1.0.tgz",
          "integrity": "sha512-Y5WMo7xKKq1muPsxD+KmrR8DH5auG7fBdDVueZwETwV6VytKyU9OX/ddpq2/1hp1vIPvVb4T81dKQz3BivkNLw==",
          "requires": {
            "decompress-response": "^3.2.0",
            "duplexer3": "^0.1.4",
            "get-stream": "^3.0.0",
            "is-plain-obj": "^1.1.0",
            "is-retry-allowed": "^1.0.0",
            "is-stream": "^1.0.0",
            "isurl": "^1.0.0-alpha5",
            "lowercase-keys": "^1.0.0",
            "p-cancelable": "^0.3.0",
            "p-timeout": "^1.1.1",
            "safe-buffer": "^5.0.1",
            "timed-out": "^4.0.0",
            "url-parse-lax": "^1.0.0",
            "url-to-options": "^1.0.1"
          }
        },
        "p-cancelable": {
          "version": "0.3.0",
          "resolved": "https://registry.npmjs.org/p-cancelable/-/p-cancelable-0.3.0.tgz",
          "integrity": "sha512-RVbZPLso8+jFeq1MfNvgXtCRED2raz/dKpacfTNxsx6pLEpEomM7gah6VeHSYV3+vo0OAi4MkArtQcWWXuQoyw=="
        },
        "url-parse-lax": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/url-parse-lax/-/url-parse-lax-1.0.0.tgz",
          "integrity": "sha1-evjzA2Rem9eaJy56FKxovAYJ2nM=",
          "requires": {
            "prepend-http": "^1.0.1"
          }
        }
      }
    },
    "symbol-observable": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/symbol-observable/-/symbol-observable-1.2.0.tgz",
      "integrity": "sha512-e900nM8RRtGhlV36KGEU9k65K3mPb1WV70OdjfxlG2EAuM1noi/E/BaW/uMhL7bPEssK8QV57vN3esixjUvcXQ==",
      "dev": true
    },
    "tapable": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/tapable/-/tapable-1.1.3.tgz",
      "integrity": "sha512-4WK/bYZmj8xLr+HUCODHGF1ZFzsYffasLUgEiMBY4fgtltdO6B4WJtlSbPaDTLpYTcGVwM2qLnFTICEcNxs3kA==",
      "dev": true
    },
    "tar": {
      "version": "4.4.13",
      "resolved": "https://registry.npmjs.org/tar/-/tar-4.4.13.tgz",
      "integrity": "sha512-w2VwSrBoHa5BsSyH+KxEqeQBAllHhccyMFVHtGtdMpF4W7IRWfZjFiQceJPChOeTsSDVUpER2T8FA93pr0L+QA==",
      "requires": {
        "chownr": "^1.1.1",
        "fs-minipass": "^1.2.5",
        "minipass": "^2.8.6",
        "minizlib": "^1.2.1",
        "mkdirp": "^0.5.0",
        "safe-buffer": "^5.1.2",
        "yallist": "^3.0.3"
      },
      "dependencies": {
        "fs-minipass": {
          "version": "1.2.7",
          "resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-1.2.7.tgz",
          "integrity": "sha512-GWSSJGFy4e9GUeCcbIkED+bgAoFyj7XF1mV8rma3QW4NIqX9Kyx79N/PF61H5udOV3aY1IaMLs6pGbH71nlCTA==",
          "requires": {
            "minipass": "^2.6.0"
          }
        },
        "minipass": {
          "version": "2.9.0",
          "resolved": "https://registry.npmjs.org/minipass/-/minipass-2.9.0.tgz",
          "integrity": "sha512-wxfUjg9WebH+CUDX/CdbRlh5SmfZiy/hpkxaRI16Y9W56Pa75sWgd/rvFilSgrauD9NyFymP/+JFV3KwzIsJeg==",
          "requires": {
            "safe-buffer": "^5.1.2",
            "yallist": "^3.0.0"
          }
        },
        "yallist": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
          "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g=="
        }
      }
    },
    "tar-stream": {
      "version": "1.6.2",
      "resolved": "https://registry.npmjs.org/tar-stream/-/tar-stream-1.6.2.tgz",
      "integrity": "sha512-rzS0heiNf8Xn7/mpdSVVSMAWAoy9bfb1WOTYC78Z0UQKeKa/CWS8FOq0lKGNa8DWKAn9gxjCvMLYc5PGXYlK2A==",
      "requires": {
        "bl": "^1.0.0",
        "buffer-alloc": "^1.2.0",
        "end-of-stream": "^1.0.0",
        "fs-constants": "^1.0.0",
        "readable-stream": "^2.3.0",
        "to-buffer": "^1.1.1",
        "xtend": "^4.0.0"
      }
    },
    "terser": {
      "version": "4.5.1",
      "resolved": "https://registry.npmjs.org/terser/-/terser-4.5.1.tgz",
      "integrity": "sha512-lH9zLIbX8PRBEFCTvfHGCy0s9HEKnNso1Dx9swSopF3VUnFLB8DpQ61tHxoofovNC/sG0spajJM3EIIRSTByiQ==",
      "dev": true,
      "requires": {
        "commander": "^2.20.0",
        "source-map": "~0.6.1",
        "source-map-support": "~0.5.12"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "terser-webpack-plugin": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/terser-webpack-plugin/-/terser-webpack-plugin-2.3.3.tgz",
      "integrity": "sha512-gWHkaGzGYjmDoYxksFZynWTzvXOAjQ5dd7xuTMYlv4zpWlLSb6v0QLSZjELzP5dMs1ox30O1BIPs9dgqlMHuLQ==",
      "dev": true,
      "requires": {
        "cacache": "^13.0.1",
        "find-cache-dir": "^3.2.0",
        "jest-worker": "^25.1.0",
        "p-limit": "^2.2.2",
        "schema-utils": "^2.6.4",
        "serialize-javascript": "^2.1.2",
        "source-map": "^0.6.1",
        "terser": "^4.4.3",
        "webpack-sources": "^1.4.3"
      },
      "dependencies": {
        "ajv": {
          "version": "6.12.0",
          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.0.tgz",
          "integrity": "sha512-D6gFiFA0RRLyUbvijN74DWAjXSFxWKaWP7mldxkVhyhAV3+SWA9HEJPHQ2c9soIeTFJqcSdFDGFgdqs1iUU2Hw==",
          "dev": true,
          "requires": {
            "fast-deep-equal": "^3.1.1",
            "fast-json-stable-stringify": "^2.0.0",
            "json-schema-traverse": "^0.4.1",
            "uri-js": "^4.2.2"
          }
        },
        "fast-deep-equal": {
          "version": "3.1.1",
          "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.1.tgz",
          "integrity": "sha512-8UEa58QDLauDNfpbrX55Q9jrGHThw2ZMdOky5Gl1CDtVeJDPVrG4Jxx1N8jw2gkWaff5UUuX1KJd+9zGe2B+ZA==",
          "dev": true
        },
        "find-cache-dir": {
          "version": "3.3.1",
          "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-3.3.1.tgz",
          "integrity": "sha512-t2GDMt3oGC/v+BMwzmllWDuJF/xcDtE5j/fCGbqDD7OLuJkj0cfh1YSA5VKPvwMeLFLNDBkwOKZ2X85jGLVftQ==",
          "dev": true,
          "requires": {
            "commondir": "^1.0.1",
            "make-dir": "^3.0.2",
            "pkg-dir": "^4.1.0"
          }
        },
        "find-up": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz",
          "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
          "dev": true,
          "requires": {
            "locate-path": "^5.0.0",
            "path-exists": "^4.0.0"
          }
        },
        "has-flag": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
          "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
          "dev": true
        },
        "jest-worker": {
          "version": "25.2.1",
          "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-25.2.1.tgz",
          "integrity": "sha512-IHnpekk8H/hCUbBlfeaPZzU6v75bqwJp3n4dUrQuQOAgOneI4tx3jV2o8pvlXnDfcRsfkFIUD//HWXpCmR+evQ==",
          "dev": true,
          "requires": {
            "merge-stream": "^2.0.0",
            "supports-color": "^7.0.0"
          }
        },
        "locate-path": {
          "version": "5.0.0",
          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz",
          "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
          "dev": true,
          "requires": {
            "p-locate": "^4.1.0"
          }
        },
        "make-dir": {
          "version": "3.0.2",
          "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.0.2.tgz",
          "integrity": "sha512-rYKABKutXa6vXTXhoV18cBE7PaewPXHe/Bdq4v+ZLMhxbWApkFFplT0LcbMW+6BbjnQXzZ/sAvSE/JdguApG5w==",
          "dev": true,
          "requires": {
            "semver": "^6.0.0"
          }
        },
        "p-locate": {
          "version": "4.1.0",
          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz",
          "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
          "dev": true,
          "requires": {
            "p-limit": "^2.2.0"
          }
        },
        "path-exists": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
          "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
          "dev": true
        },
        "pkg-dir": {
          "version": "4.2.0",
          "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-4.2.0.tgz",
          "integrity": "sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==",
          "dev": true,
          "requires": {
            "find-up": "^4.0.0"
          }
        },
        "schema-utils": {
          "version": "2.6.5",
          "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-2.6.5.tgz",
          "integrity": "sha512-5KXuwKziQrTVHh8j/Uxz+QUbxkaLW9X/86NBlx/gnKgtsZA2GIVMUn17qWhRFwF8jdYb3Dig5hRO/W5mZqy6SQ==",
          "dev": true,
          "requires": {
            "ajv": "^6.12.0",
            "ajv-keywords": "^3.4.1"
          }
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "supports-color": {
          "version": "7.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.1.0.tgz",
          "integrity": "sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==",
          "dev": true,
          "requires": {
            "has-flag": "^4.0.0"
          }
        }
      }
    },
    "text-encoding-utf-8": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/text-encoding-utf-8/-/text-encoding-utf-8-1.0.2.tgz",
      "integrity": "sha512-8bw4MY9WjdsD2aMtO0OzOCY3pXGYNx2d2FfHRVUKkiCPDWjKuOlhLVASS+pD7VkLTVjW268LYJHwsnPFlBpbAg=="
    },
    "tfunk": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/tfunk/-/tfunk-3.1.0.tgz",
      "integrity": "sha1-OORBT8ZJd9h6/apy+sttKfgve1s=",
      "dev": true,
      "requires": {
        "chalk": "^1.1.1",
        "object-path": "^0.9.0"
      },
      "dependencies": {
        "ansi-styles": {
          "version": "2.2.1",
          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
          "dev": true
        },
        "chalk": {
          "version": "1.1.3",
          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
          "dev": true,
          "requires": {
            "ansi-styles": "^2.2.1",
            "escape-string-regexp": "^1.0.2",
            "has-ansi": "^2.0.0",
            "strip-ansi": "^3.0.0",
            "supports-color": "^2.0.0"
          }
        },
        "supports-color": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
          "dev": true
        }
      }
    },
    "through": {
      "version": "2.3.8",
      "resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",
      "integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU="
    },
    "through2": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",
      "integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",
      "dev": true,
      "requires": {
        "readable-stream": "~2.3.6",
        "xtend": "~4.0.1"
      }
    },
    "thunky": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/thunky/-/thunky-1.1.0.tgz",
      "integrity": "sha512-eHY7nBftgThBqOyHGVN+l8gF0BucP09fMo0oO/Lb0w1OF80dJv+lDVpXG60WMQvkcxAkNybKsrEIE3ZtKGmPrA==",
      "dev": true
    },
    "timed-out": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/timed-out/-/timed-out-4.0.1.tgz",
      "integrity": "sha1-8y6srFoXW+ol1/q1Zas+2HQe9W8="
    },
    "timers-browserify": {
      "version": "2.0.11",
      "resolved": "https://registry.npmjs.org/timers-browserify/-/timers-browserify-2.0.11.tgz",
      "integrity": "sha512-60aV6sgJ5YEbzUdn9c8kYGIqOubPoUdqQCul3SBAsRCZ40s6Y5cMcrW4dt3/k/EsbLVJNl9n6Vz3fTc+k2GeKQ==",
      "dev": true,
      "requires": {
        "setimmediate": "^1.0.4"
      }
    },
    "timsort": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/timsort/-/timsort-0.3.0.tgz",
      "integrity": "sha1-QFQRqOfmM5/mTbmiNN4R3DHgK9Q=",
      "dev": true
    },
    "tmp": {
      "version": "0.0.33",
      "resolved": "https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz",
      "integrity": "sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==",
      "dev": true,
      "requires": {
        "os-tmpdir": "~1.0.2"
      }
    },
    "to-array": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/to-array/-/to-array-0.1.4.tgz",
      "integrity": "sha1-F+bBH3PdTz10zaek/zI46a2b+JA=",
      "dev": true
    },
    "to-arraybuffer": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/to-arraybuffer/-/to-arraybuffer-1.0.1.tgz",
      "integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M=",
      "dev": true
    },
    "to-buffer": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/to-buffer/-/to-buffer-1.1.1.tgz",
      "integrity": "sha512-lx9B5iv7msuFYE3dytT+KE5tap+rNYw+K4jVkb9R/asAb+pbBSM17jtunHplhBe6RRJdZx3Pn2Jph24O32mOVg=="
    },
    "to-fast-properties": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
      "integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4=",
      "dev": true
    },
    "to-object-path": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/to-object-path/-/to-object-path-0.3.0.tgz",
      "integrity": "sha1-KXWIt7Dn4KwI4E5nL4XB9JmeF68=",
      "dev": true,
      "requires": {
        "kind-of": "^3.0.2"
      },
      "dependencies": {
        "kind-of": {
          "version": "3.2.2",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
          "dev": true,
          "requires": {
            "is-buffer": "^1.1.5"
          }
        }
      }
    },
    "to-readable-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/to-readable-stream/-/to-readable-stream-1.0.0.tgz",
      "integrity": "sha512-Iq25XBt6zD5npPhlLVXGFN3/gyR2/qODcKNNyTMd4vbm39HUaOiAM4PMq0eMVC/Tkxz+Zjdsc55g9yyz+Yq00Q=="
    },
    "to-regex": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/to-regex/-/to-regex-3.0.2.tgz",
      "integrity": "sha512-FWtleNAtZ/Ki2qtqej2CXTOayOH9bHDQF+Q48VpWyDXjbYxA4Yz8iDB31zXOBUlOHHKidDbqGVrTUvQMPmBGBw==",
      "dev": true,
      "requires": {
        "define-property": "^2.0.2",
        "extend-shallow": "^3.0.2",
        "regex-not": "^1.0.2",
        "safe-regex": "^1.1.0"
      }
    },
    "to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dev": true,
      "requires": {
        "is-number": "^7.0.0"
      }
    },
    "toidentifier": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.0.tgz",
      "integrity": "sha512-yaOH/Pk/VEhBWWTlhI+qXxDFXlejDGcQipMlyxda9nthulaxLZUNcUqFxokp0vcYnvteJln5FNQDRrxj3YcbVw=="
    },
    "tough-cookie": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
      "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
      "requires": {
        "psl": "^1.1.28",
        "punycode": "^2.1.1"
      }
    },
    "tree-kill": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/tree-kill/-/tree-kill-1.2.2.tgz",
      "integrity": "sha512-L0Orpi8qGpRG//Nd+H90vFB+3iHnue1zSSGmNOOCh1GLJ7rUKVwV2HvijphGQS2UmhUZewS9VgvxYIdgr+fG1A==",
      "dev": true
    },
    "truffle-hdwallet-provider": {
      "version": "1.0.17",
      "resolved": "https://registry.npmjs.org/truffle-hdwallet-provider/-/truffle-hdwallet-provider-1.0.17.tgz",
      "integrity": "sha512-s6DvSP83jiIAc6TUcpr7Uqnja1+sLGJ8og3X7n41vfyC4OCaKmBtXL5HOHf+SsU3iblOvnbFDgmN6Y1VBL/fsg==",
      "requires": {
        "any-promise": "^1.3.0",
        "bindings": "^1.3.1",
        "web3": "1.2.1",
        "websocket": "^1.0.28"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "requires": {
            "ms": "2.0.0"
          }
        },
        "eth-lib": {
          "version": "0.2.7",
          "resolved": "https://registry.npmjs.org/eth-lib/-/eth-lib-0.2.7.tgz",
          "integrity": "sha1-L5Pxex4jrsN1nNSj/iDBKGo/wco=",
          "requires": {
            "bn.js": "^4.11.6",
            "elliptic": "^6.4.0",
            "xhr-request-promise": "^0.1.2"
          }
        },
        "eventemitter3": {
          "version": "3.1.2",
          "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-3.1.2.tgz",
          "integrity": "sha512-tvtQIeLVHjDkJYnzf2dgVMxfuSGJeM/7UCG17TT4EumTfNtF+0nebF/4zWOIkCreAbtNqhGEboB6BWrwqNaw4Q=="
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
        },
        "semver": {
          "version": "6.2.0",
          "resolved": "https://registry.npmjs.org/semver/-/semver-6.2.0.tgz",
          "integrity": "sha512-jdFC1VdUGT/2Scgbimf7FSx9iJLXoqfglSF+gJeuNWVpiE37OIbc1jywR/GJyFdz3mnkz2/id0L0J/cr0izR5A=="
        },
        "uuid": {
          "version": "3.3.2",
          "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.3.2.tgz",
          "integrity": "sha512-yXJmeNaw3DnnKAOKJE51sL/ZaYfWJRl1pK9dr19YFCu0ObS231AB1/LbqTKRAQ5kw8A90rA6fr4riOUpTZvQZA=="
        },
        "web3": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3/-/web3-1.2.1.tgz",
          "integrity": "sha512-nNMzeCK0agb5i/oTWNdQ1aGtwYfXzHottFP2Dz0oGIzavPMGSKyVlr8ibVb1yK5sJBjrWVnTdGaOC2zKDFuFRw==",
          "requires": {
            "web3-bzz": "1.2.1",
            "web3-core": "1.2.1",
            "web3-eth": "1.2.1",
            "web3-eth-personal": "1.2.1",
            "web3-net": "1.2.1",
            "web3-shh": "1.2.1",
            "web3-utils": "1.2.1"
          }
        },
        "web3-bzz": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-bzz/-/web3-bzz-1.2.1.tgz",
          "integrity": "sha512-LdOO44TuYbGIPfL4ilkuS89GQovxUpmLz6C1UC7VYVVRILeZS740FVB3j9V4P4FHUk1RenaDfKhcntqgVCHtjw==",
          "requires": {
            "got": "9.6.0",
            "swarm-js": "0.1.39",
            "underscore": "1.9.1"
          }
        },
        "web3-core": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-core/-/web3-core-1.2.1.tgz",
          "integrity": "sha512-5ODwIqgl8oIg/0+Ai4jsLxkKFWJYE0uLuE1yUKHNVCL4zL6n3rFjRMpKPokd6id6nJCNgeA64KdWQ4XfpnjdMg==",
          "requires": {
            "web3-core-helpers": "1.2.1",
            "web3-core-method": "1.2.1",
            "web3-core-requestmanager": "1.2.1",
            "web3-utils": "1.2.1"
          }
        },
        "web3-core-helpers": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-core-helpers/-/web3-core-helpers-1.2.1.tgz",
          "integrity": "sha512-Gx3sTEajD5r96bJgfuW377PZVFmXIH4TdqDhgGwd2lZQCcMi+DA4TgxJNJGxn0R3aUVzyyE76j4LBrh412mXrw==",
          "requires": {
            "underscore": "1.9.1",
            "web3-eth-iban": "1.2.1",
            "web3-utils": "1.2.1"
          }
        },
        "web3-core-method": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-core-method/-/web3-core-method-1.2.1.tgz",
          "integrity": "sha512-Ghg2WS23qi6Xj8Od3VCzaImLHseEA7/usvnOItluiIc5cKs00WYWsNy2YRStzU9a2+z8lwQywPYp0nTzR/QXdQ==",
          "requires": {
            "underscore": "1.9.1",
            "web3-core-helpers": "1.2.1",
            "web3-core-promievent": "1.2.1",
            "web3-core-subscriptions": "1.2.1",
            "web3-utils": "1.2.1"
          }
        },
        "web3-core-promievent": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-core-promievent/-/web3-core-promievent-1.2.1.tgz",
          "integrity": "sha512-IVUqgpIKoeOYblwpex4Hye6npM0aMR+kU49VP06secPeN0rHMyhGF0ZGveWBrGvf8WDPI7jhqPBFIC6Jf3Q3zw==",
          "requires": {
            "any-promise": "1.3.0",
            "eventemitter3": "3.1.2"
          }
        },
        "web3-core-requestmanager": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-core-requestmanager/-/web3-core-requestmanager-1.2.1.tgz",
          "integrity": "sha512-xfknTC69RfYmLKC+83Jz73IC3/sS2ZLhGtX33D4Q5nQ8yc39ElyAolxr9sJQS8kihOcM6u4J+8gyGMqsLcpIBg==",
          "requires": {
            "underscore": "1.9.1",
            "web3-core-helpers": "1.2.1",
            "web3-providers-http": "1.2.1",
            "web3-providers-ipc": "1.2.1",
            "web3-providers-ws": "1.2.1"
          }
        },
        "web3-core-subscriptions": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-core-subscriptions/-/web3-core-subscriptions-1.2.1.tgz",
          "integrity": "sha512-nmOwe3NsB8V8UFsY1r+sW6KjdOS68h8nuh7NzlWxBQT/19QSUGiERRTaZXWu5BYvo1EoZRMxCKyCQpSSXLc08g==",
          "requires": {
            "eventemitter3": "3.1.2",
            "underscore": "1.9.1",
            "web3-core-helpers": "1.2.1"
          }
        },
        "web3-eth": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-eth/-/web3-eth-1.2.1.tgz",
          "integrity": "sha512-/2xly4Yry5FW1i+uygPjhfvgUP/MS/Dk+PDqmzp5M88tS86A+j8BzKc23GrlA8sgGs0645cpZK/999LpEF5UdA==",
          "requires": {
            "underscore": "1.9.1",
            "web3-core": "1.2.1",
            "web3-core-helpers": "1.2.1",
            "web3-core-method": "1.2.1",
            "web3-core-subscriptions": "1.2.1",
            "web3-eth-abi": "1.2.1",
            "web3-eth-accounts": "1.2.1",
            "web3-eth-contract": "1.2.1",
            "web3-eth-ens": "1.2.1",
            "web3-eth-iban": "1.2.1",
            "web3-eth-personal": "1.2.1",
            "web3-net": "1.2.1",
            "web3-utils": "1.2.1"
          }
        },
        "web3-eth-abi": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-eth-abi/-/web3-eth-abi-1.2.1.tgz",
          "integrity": "sha512-jI/KhU2a/DQPZXHjo2GW0myEljzfiKOn+h1qxK1+Y9OQfTcBMxrQJyH5AP89O6l6NZ1QvNdq99ThAxBFoy5L+g==",
          "requires": {
            "ethers": "4.0.0-beta.3",
            "underscore": "1.9.1",
            "web3-utils": "1.2.1"
          }
        },
        "web3-eth-accounts": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-eth-accounts/-/web3-eth-accounts-1.2.1.tgz",
          "integrity": "sha512-26I4qq42STQ8IeKUyur3MdQ1NzrzCqPsmzqpux0j6X/XBD7EjZ+Cs0lhGNkSKH5dI3V8CJasnQ5T1mNKeWB7nQ==",
          "requires": {
            "any-promise": "1.3.0",
            "crypto-browserify": "3.12.0",
            "eth-lib": "0.2.7",
            "scryptsy": "2.1.0",
            "semver": "6.2.0",
            "underscore": "1.9.1",
            "uuid": "3.3.2",
            "web3-core": "1.2.1",
            "web3-core-helpers": "1.2.1",
            "web3-core-method": "1.2.1",
            "web3-utils": "1.2.1"
          }
        },
        "web3-eth-contract": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-eth-contract/-/web3-eth-contract-1.2.1.tgz",
          "integrity": "sha512-kYFESbQ3boC9bl2rYVghj7O8UKMiuKaiMkxvRH5cEDHil8V7MGEGZNH0slSdoyeftZVlaWSMqkRP/chfnKND0g==",
          "requires": {
            "underscore": "1.9.1",
            "web3-core": "1.2.1",
            "web3-core-helpers": "1.2.1",
            "web3-core-method": "1.2.1",
            "web3-core-promievent": "1.2.1",
            "web3-core-subscriptions": "1.2.1",
            "web3-eth-abi": "1.2.1",
            "web3-utils": "1.2.1"
          }
        },
        "web3-eth-ens": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-eth-ens/-/web3-eth-ens-1.2.1.tgz",
          "integrity": "sha512-lhP1kFhqZr2nnbu3CGIFFrAnNxk2veXpOXBY48Tub37RtobDyHijHgrj+xTh+mFiPokyrapVjpFsbGa+Xzye4Q==",
          "requires": {
            "eth-ens-namehash": "2.0.8",
            "underscore": "1.9.1",
            "web3-core": "1.2.1",
            "web3-core-helpers": "1.2.1",
            "web3-core-promievent": "1.2.1",
            "web3-eth-abi": "1.2.1",
            "web3-eth-contract": "1.2.1",
            "web3-utils": "1.2.1"
          }
        },
        "web3-eth-iban": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-eth-iban/-/web3-eth-iban-1.2.1.tgz",
          "integrity": "sha512-9gkr4QPl1jCU+wkgmZ8EwODVO3ovVj6d6JKMos52ggdT2YCmlfvFVF6wlGLwi0VvNa/p+0BjJzaqxnnG/JewjQ==",
          "requires": {
            "bn.js": "4.11.8",
            "web3-utils": "1.2.1"
          }
        },
        "web3-eth-personal": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-eth-personal/-/web3-eth-personal-1.2.1.tgz",
          "integrity": "sha512-RNDVSiaSoY4aIp8+Hc7z+X72H7lMb3fmAChuSBADoEc7DsJrY/d0R5qQDK9g9t2BO8oxgLrLNyBP/9ub2Hc6Bg==",
          "requires": {
            "web3-core": "1.2.1",
            "web3-core-helpers": "1.2.1",
            "web3-core-method": "1.2.1",
            "web3-net": "1.2.1",
            "web3-utils": "1.2.1"
          }
        },
        "web3-net": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-net/-/web3-net-1.2.1.tgz",
          "integrity": "sha512-Yt1Bs7WgnLESPe0rri/ZoPWzSy55ovioaP35w1KZydrNtQ5Yq4WcrAdhBzcOW7vAkIwrsLQsvA+hrOCy7mNauw==",
          "requires": {
            "web3-core": "1.2.1",
            "web3-core-method": "1.2.1",
            "web3-utils": "1.2.1"
          }
        },
        "web3-providers-http": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-providers-http/-/web3-providers-http-1.2.1.tgz",
          "integrity": "sha512-BDtVUVolT9b3CAzeGVA/np1hhn7RPUZ6YYGB/sYky+GjeO311Yoq8SRDUSezU92x8yImSC2B+SMReGhd1zL+bQ==",
          "requires": {
            "web3-core-helpers": "1.2.1",
            "xhr2-cookies": "1.1.0"
          }
        },
        "web3-providers-ipc": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-providers-ipc/-/web3-providers-ipc-1.2.1.tgz",
          "integrity": "sha512-oPEuOCwxVx8L4CPD0TUdnlOUZwGBSRKScCz/Ws2YHdr9Ium+whm+0NLmOZjkjQp5wovQbyBzNa6zJz1noFRvFA==",
          "requires": {
            "oboe": "2.1.4",
            "underscore": "1.9.1",
            "web3-core-helpers": "1.2.1"
          }
        },
        "web3-providers-ws": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-providers-ws/-/web3-providers-ws-1.2.1.tgz",
          "integrity": "sha512-oqsQXzu+ejJACVHy864WwIyw+oB21nw/pI65/sD95Zi98+/HQzFfNcIFneF1NC4bVF3VNX4YHTNq2I2o97LAiA==",
          "requires": {
            "underscore": "1.9.1",
            "web3-core-helpers": "1.2.1",
            "websocket": "github:web3-js/WebSocket-Node#polyfill/globalThis"
          },
          "dependencies": {
            "websocket": {
              "version": "github:web3-js/WebSocket-Node#905deb4812572b344f5801f8c9ce8bb02799d82e",
              "from": "github:web3-js/WebSocket-Node#polyfill/globalThis",
              "requires": {
                "debug": "^2.2.0",
                "es5-ext": "^0.10.50",
                "nan": "^2.14.0",
                "typedarray-to-buffer": "^3.1.5",
                "yaeti": "^0.0.6"
              }
            }
          }
        },
        "web3-shh": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-shh/-/web3-shh-1.2.1.tgz",
          "integrity": "sha512-/3Cl04nza5kuFn25bV3FJWa0s3Vafr5BlT933h26xovQ6HIIz61LmvNQlvX1AhFL+SNJOTcQmK1SM59vcyC8bA==",
          "requires": {
            "web3-core": "1.2.1",
            "web3-core-method": "1.2.1",
            "web3-core-subscriptions": "1.2.1",
            "web3-net": "1.2.1"
          }
        },
        "web3-utils": {
          "version": "1.2.1",
          "resolved": "https://registry.npmjs.org/web3-utils/-/web3-utils-1.2.1.tgz",
          "integrity": "sha512-Mrcn3l58L+yCKz3zBryM6JZpNruWuT0OCbag8w+reeNROSGVlXzUQkU+gtAwc9JCZ7tKUyg67+2YUGqUjVcyBA==",
          "requires": {
            "bn.js": "4.11.8",
            "eth-lib": "0.2.7",
            "ethjs-unit": "0.1.6",
            "number-to-bn": "1.7.0",
            "randomhex": "0.1.5",
            "underscore": "1.9.1",
            "utf8": "3.0.0"
          }
        }
      }
    },
    "ts-node": {
      "version": "8.3.0",
      "resolved": "https://registry.npmjs.org/ts-node/-/ts-node-8.3.0.tgz",
      "integrity": "sha512-dyNS/RqyVTDcmNM4NIBAeDMpsAdaQ+ojdf0GOLqE6nwJOgzEkdRNzJywhDfwnuvB10oa6NLVG1rUJQCpRN7qoQ==",
      "dev": true,
      "requires": {
        "arg": "^4.1.0",
        "diff": "^4.0.1",
        "make-error": "^1.1.1",
        "source-map-support": "^0.5.6",
        "yn": "^3.0.0"
      }
    },
    "tslib": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.11.1.tgz",
      "integrity": "sha512-aZW88SY8kQbU7gpV19lN24LtXh/yD4ZZg6qieAJDDg+YBsJcSmLGK9QpnUjAKVG/xefmvJGd1WUmfpT/g6AJGA=="
    },
    "tslint": {
      "version": "5.18.0",
      "resolved": "https://registry.npmjs.org/tslint/-/tslint-5.18.0.tgz",
      "integrity": "sha512-Q3kXkuDEijQ37nXZZLKErssQVnwCV/+23gFEMROi8IlbaBG6tXqLPQJ5Wjcyt/yHPKBC+hD5SzuGaMora+ZS6w==",
      "dev": true,
      "requires": {
        "@babel/code-frame": "^7.0.0",
        "builtin-modules": "^1.1.1",
        "chalk": "^2.3.0",
        "commander": "^2.12.1",
        "diff": "^3.2.0",
        "glob": "^7.1.1",
        "js-yaml": "^3.13.1",
        "minimatch": "^3.0.4",
        "mkdirp": "^0.5.1",
        "resolve": "^1.3.2",
        "semver": "^5.3.0",
        "tslib": "^1.8.0",
        "tsutils": "^2.29.0"
      },
      "dependencies": {
        "diff": {
          "version": "3.5.0",
          "resolved": "https://registry.npmjs.org/diff/-/diff-3.5.0.tgz",
          "integrity": "sha512-A46qtFgd+g7pDZinpnwiRJtxbC1hpgf0uzP3iG89scHk0AUC7A1TGxf5OiiOUv/JMZR8GOt8hL900hV0bOy5xA==",
          "dev": true
        },
        "semver": {
          "version": "5.7.1",
          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
          "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
          "dev": true
        }
      }
    },
    "tsutils": {
      "version": "2.29.0",
      "resolved": "https://registry.npmjs.org/tsutils/-/tsutils-2.29.0.tgz",
      "integrity": "sha512-g5JVHCIJwzfISaXpXE1qvNalca5Jwob6FjI4AoPlqMusJ6ftFE7IkkFoMhVLRgK+4Kx3gkzb8UZK5t5yTTvEmA==",
      "dev": true,
      "requires": {
        "tslib": "^1.8.1"
      }
    },
    "tty-browserify": {
      "version": "0.0.0",
      "resolved": "https://registry.npmjs.org/tty-browserify/-/tty-browserify-0.0.0.tgz",
      "integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY=",
      "dev": true
    },
    "tunnel-agent": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
      "integrity": "sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=",
      "requires": {
        "safe-buffer": "^5.0.1"
      }
    },
    "tweetnacl": {
      "version": "0.14.5",
      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
      "integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q="
    },
    "type": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/type/-/type-1.2.0.tgz",
      "integrity": "sha512-+5nt5AAniqsCnu2cEQQdpzCAh33kVx8n0VoFidKpB1dVVLAN/F+bgVOqOJqOnEnrhp222clB5p3vUlD+1QAnfg=="
    },
    "type-detect": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/type-detect/-/type-detect-4.0.8.tgz",
      "integrity": "sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g=="
    },
    "type-fest": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.11.0.tgz",
      "integrity": "sha512-OdjXJxnCN1AvyLSzeKIgXTXxV+99ZuXl3Hpo9XpJAv9MBcHrrJOQ5kV7ypXOuQie+AmWG25hLbiKdwYTifzcfQ==",
      "dev": true
    },
    "type-is": {
      "version": "1.6.18",
      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
      "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
      "requires": {
        "media-typer": "0.3.0",
        "mime-types": "~2.1.24"
      }
    },
    "typedarray": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",
      "integrity": "sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c=",
      "dev": true
    },
    "typedarray-to-buffer": {
      "version": "3.1.5",
      "resolved": "https://registry.npmjs.org/typedarray-to-buffer/-/typedarray-to-buffer-3.1.5.tgz",
      "integrity": "sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==",
      "requires": {
        "is-typedarray": "^1.0.0"
      }
    },
    "typescript": {
      "version": "3.7.5",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-3.7.5.tgz",
      "integrity": "sha512-/P5lkRXkWHNAbcJIiHPfRoKqyd7bsyCma1hZNUGfn20qm64T6ZBlrzprymeu918H+mB/0rIg2gGK/BXkhhYgBw==",
      "dev": true
    },
    "u3": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/u3/-/u3-0.1.0.tgz",
      "integrity": "sha1-AGCSdmO2g1PFOc2pnpUR1mh+3Z0="
    },
    "ua-parser-js": {
      "version": "0.7.17",
      "resolved": "https://registry.npmjs.org/ua-parser-js/-/ua-parser-js-0.7.17.tgz",
      "integrity": "sha512-uRdSdu1oA1rncCQL7sCj8vSyZkgtL7faaw9Tc9rZ3mGgraQ7+Pdx7w5mnOSF3gw9ZNG6oc+KXfkon3bKuROm0g==",
      "dev": true
    },
    "ultron": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/ultron/-/ultron-1.1.1.tgz",
      "integrity": "sha512-UIEXBNeYmKptWH6z8ZnqTeS8fV74zG0/eRU9VGkpzz+LIJNs8W/zM/L+7ctCkRrgbNnnR0xxw4bKOr0cW0N0Og=="
    },
    "unbzip2-stream": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/unbzip2-stream/-/unbzip2-stream-1.3.3.tgz",
      "integrity": "sha512-fUlAF7U9Ah1Q6EieQ4x4zLNejrRvDWUYmxXUpN3uziFYCHapjWFaCAnreY9bGgxzaMCFAPPpYNng57CypwJVhg==",
      "requires": {
        "buffer": "^5.2.1",
        "through": "^2.3.8"
      },
      "dependencies": {
        "buffer": {
          "version": "5.5.0",
          "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.5.0.tgz",
          "integrity": "sha512-9FTEDjLjwoAkEwyMGDjYJQN2gfRgOKBKRfiglhvibGbpeeU/pQn1bJxQqm32OD/AIeEuHxU9roxXxg34Byp/Ww==",
          "requires": {
            "base64-js": "^1.0.2",
            "ieee754": "^1.1.4"
          }
        }
      }
    },
    "underscore": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/underscore/-/underscore-1.9.1.tgz",
      "integrity": "sha512-5/4etnCkd9c8gwgowi5/om/mYO5ajCaOgdzj/oW+0eQV9WxKBDZw5+ycmKmeaTXjInS/W0BzpGLo2xR2aBwZdg=="
    },
    "unicode-canonical-property-names-ecmascript": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/unicode-canonical-property-names-ecmascript/-/unicode-canonical-property-names-ecmascript-1.0.4.tgz",
      "integrity": "sha512-jDrNnXWHd4oHiTZnx/ZG7gtUTVp+gCcTTKr8L0HjlwphROEW3+Him+IpvC+xcJEFegapiMZyZe02CyuOnRmbnQ==",
      "dev": true
    },
    "unicode-match-property-ecmascript": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/unicode-match-property-ecmascript/-/unicode-match-property-ecmascript-1.0.4.tgz",
      "integrity": "sha512-L4Qoh15vTfntsn4P1zqnHulG0LdXgjSO035fEpdtp6YxXhMT51Q6vgM5lYdG/5X3MjS+k/Y9Xw4SFCY9IkR0rg==",
      "dev": true,
      "requires": {
        "unicode-canonical-property-names-ecmascript": "^1.0.4",
        "unicode-property-aliases-ecmascript": "^1.0.4"
      }
    },
    "unicode-match-property-value-ecmascript": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/unicode-match-property-value-ecmascript/-/unicode-match-property-value-ecmascript-1.2.0.tgz",
      "integrity": "sha512-wjuQHGQVofmSJv1uVISKLE5zO2rNGzM/KCYZch/QQvez7C1hUhBIuZ701fYXExuufJFMPhv2SyL8CyoIfMLbIQ==",
      "dev": true
    },
    "unicode-property-aliases-ecmascript": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/unicode-property-aliases-ecmascript/-/unicode-property-aliases-ecmascript-1.1.0.tgz",
      "integrity": "sha512-PqSoPh/pWetQ2phoj5RLiaqIk4kCNwoV3CI+LfGmWLKI3rE3kl1h59XpX2BjgDrmbxD9ARtQobPGU1SguCYuQg==",
      "dev": true
    },
    "union-value": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/union-value/-/union-value-1.0.1.tgz",
      "integrity": "sha512-tJfXmxMeWYnczCVs7XAEvIV7ieppALdyepWMkHkwciRpZraG/xwT+s2JN8+pr1+8jCRf80FFzvr+MpQeeoF4Xg==",
      "dev": true,
      "requires": {
        "arr-union": "^3.1.0",
        "get-value": "^2.0.6",
        "is-extendable": "^0.1.1",
        "set-value": "^2.0.1"
      }
    },
    "uniq": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/uniq/-/uniq-1.0.1.tgz",
      "integrity": "sha1-sxxa6CVIRKOoKBVBzisEuGWnNP8=",
      "dev": true
    },
    "uniqs": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/uniqs/-/uniqs-2.0.0.tgz",
      "integrity": "sha1-/+3ks2slKQaW5uFl1KWe25mOawI=",
      "dev": true
    },
    "unique-filename": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/unique-filename/-/unique-filename-1.1.1.tgz",
      "integrity": "sha512-Vmp0jIp2ln35UTXuryvjzkjGdRyf9b2lTXuSYUiPmzRcl3FDtYqAwOnTJkAngD9SWhnoJzDbTKwaOrZ+STtxNQ==",
      "dev": true,
      "requires": {
        "unique-slug": "^2.0.0"
      }
    },
    "unique-slug": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/unique-slug/-/unique-slug-2.0.2.tgz",
      "integrity": "sha512-zoWr9ObaxALD3DOPfjPSqxt4fnZiWblxHIgeWqW8x7UqDzEtHEQLzji2cuJYQFCU6KmoJikOYAZlrTHHebjx2w==",
      "dev": true,
      "requires": {
        "imurmurhash": "^0.1.4"
      }
    },
    "universal-analytics": {
      "version": "0.4.20",
      "resolved": "https://registry.npmjs.org/universal-analytics/-/universal-analytics-0.4.20.tgz",
      "integrity": "sha512-gE91dtMvNkjO+kWsPstHRtSwHXz0l2axqptGYp5ceg4MsuurloM0PU3pdOfpb5zBXUvyjT4PwhWK2m39uczZuw==",
      "dev": true,
      "requires": {
        "debug": "^3.0.0",
        "request": "^2.88.0",
        "uuid": "^3.0.0"
      },
      "dependencies": {
        "debug": {
          "version": "3.2.6",
          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",
          "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",
          "dev": true,
          "requires": {
            "ms": "^2.1.1"
          }
        },
        "uuid": {
          "version": "3.4.0",
          "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
          "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
          "dev": true
        }
      }
    },
    "universalify": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",
      "integrity": "sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg=="
    },
    "unpipe": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
      "integrity": "sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw="
    },
    "unquote": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/unquote/-/unquote-1.1.1.tgz",
      "integrity": "sha1-j97XMk7G6IoP+LkF58CYzcCG1UQ=",
      "dev": true
    },
    "unset-value": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/unset-value/-/unset-value-1.0.0.tgz",
      "integrity": "sha1-g3aHP30jNRef+x5vw6jtDfyKtVk=",
      "dev": true,
      "requires": {
        "has-value": "^0.3.1",
        "isobject": "^3.0.0"
      },
      "dependencies": {
        "has-value": {
          "version": "0.3.1",
          "resolved": "https://registry.npmjs.org/has-value/-/has-value-0.3.1.tgz",
          "integrity": "sha1-ex9YutpiyoJ+wKIHgCVlSEWZXh8=",
          "dev": true,
          "requires": {
            "get-value": "^2.0.3",
            "has-values": "^0.1.4",
            "isobject": "^2.0.0"
          },
          "dependencies": {
            "isobject": {
              "version": "2.1.0",
              "resolved": "https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz",
              "integrity": "sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=",
              "dev": true,
              "requires": {
                "isarray": "1.0.0"
              }
            }
          }
        },
        "has-values": {
          "version": "0.1.4",
          "resolved": "https://registry.npmjs.org/has-values/-/has-values-0.1.4.tgz",
          "integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E=",
          "dev": true
        }
      }
    },
    "upath": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/upath/-/upath-1.2.0.tgz",
      "integrity": "sha512-aZwGpamFO61g3OlfT7OQCHqhGnW43ieH9WZeP7QxN/G/jS4jfqUkZxoryvJgVPEcrl5NL/ggHsSmLMHuH64Lhg==",
      "dev": true
    },
    "uri-js": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.2.2.tgz",
      "integrity": "sha512-KY9Frmirql91X2Qgjry0Wd4Y+YTdrdZheS8TFwvkbLWf/G5KNJDCh6pKL5OZctEW4+0Baa5idK2ZQuELRwPznQ==",
      "requires": {
        "punycode": "^2.1.0"
      }
    },
    "urix": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/urix/-/urix-0.1.0.tgz",
      "integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI=",
      "dev": true
    },
    "url": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/url/-/url-0.11.0.tgz",
      "integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
      "dev": true,
      "requires": {
        "punycode": "1.3.2",
        "querystring": "0.2.0"
      },
      "dependencies": {
        "punycode": {
          "version": "1.3.2",
          "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.3.2.tgz",
          "integrity": "sha1-llOgNvt8HuQjQvIyXM7v6jkmxI0=",
          "dev": true
        }
      }
    },
    "url-parse": {
      "version": "1.4.7",
      "resolved": "https://registry.npmjs.org/url-parse/-/url-parse-1.4.7.tgz",
      "integrity": "sha512-d3uaVyzDB9tQoSXFvuSUNFibTd9zxd2bkVrDRvF5TmvWWQwqE4lgYJ5m+x1DbecWkw+LK4RNl2CU1hHuOKPVlg==",
      "dev": true,
      "requires": {
        "querystringify": "^2.1.1",
        "requires-port": "^1.0.0"
      }
    },
    "url-parse-lax": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/url-parse-lax/-/url-parse-lax-3.0.0.tgz",
      "integrity": "sha1-FrXK/Afb42dsGxmZF3gj1lA6yww=",
      "requires": {
        "prepend-http": "^2.0.0"
      },
      "dependencies": {
        "prepend-http": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/prepend-http/-/prepend-http-2.0.0.tgz",
          "integrity": "sha1-6SQ0v6XqjBn0HN/UAddBo8gZ2Jc="
        }
      }
    },
    "url-set-query": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/url-set-query/-/url-set-query-1.0.0.tgz",
      "integrity": "sha1-AW6M/Xwg7gXK/neV6JK9BwL6ozk="
    },
    "url-to-options": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/url-to-options/-/url-to-options-1.0.1.tgz",
      "integrity": "sha1-FQWgOiiaSMvXpDTvuu7FBV9WM6k="
    },
    "use": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/use/-/use-3.1.1.tgz",
      "integrity": "sha512-cwESVXlO3url9YWlFW/TA9cshCEhtu7IKJ/p5soJ/gGpj7vbvFrAY/eIioQ6Dw23KjZhYgiIo8HOs1nQ2vr/oQ==",
      "dev": true
    },
    "useragent": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/useragent/-/useragent-2.3.0.tgz",
      "integrity": "sha512-4AoH4pxuSvHCjqLO04sU6U/uE65BYza8l/KKBS0b0hnUPWi+cQ2BpeTEwejCSx9SPV5/U03nniDTrWx5NrmKdw==",
      "dev": true,
      "requires": {
        "lru-cache": "4.1.x",
        "tmp": "0.0.x"
      },
      "dependencies": {
        "lru-cache": {
          "version": "4.1.5",
          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz",
          "integrity": "sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==",
          "dev": true,
          "requires": {
            "pseudomap": "^1.0.2",
            "yallist": "^2.1.2"
          }
        },
        "yallist": {
          "version": "2.1.2",
          "resolved": "https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz",
          "integrity": "sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI=",
          "dev": true
        }
      }
    },
    "utf8": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/utf8/-/utf8-3.0.0.tgz",
      "integrity": "sha512-E8VjFIQ/TyQgp+TZfS6l8yp/xWppSAHzidGiRrqe4bK4XP9pTRyKFgGJpO3SN7zdX4DeomTrwaseCHovfpFcqQ=="
    },
    "util": {
      "version": "0.11.1",
      "resolved": "https://registry.npmjs.org/util/-/util-0.11.1.tgz",
      "integrity": "sha512-HShAsny+zS2TZfaXxD9tYj4HQGlBezXZMZuM/S5PKLLoZkShZiGk9o5CzukI1LVHZvjdvZ2Sj1aW/Ndn2NB/HQ==",
      "dev": true,
      "requires": {
        "inherits": "2.0.3"
      },
      "dependencies": {
        "inherits": {
          "version": "2.0.3",
          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
          "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
          "dev": true
        }
      }
    },
    "util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8="
    },
    "util-promisify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/util-promisify/-/util-promisify-2.1.0.tgz",
      "integrity": "sha1-PCI2R2xNMsX/PEcAKt18E7moKlM=",
      "dev": true,
      "requires": {
        "object.getownpropertydescriptors": "^2.0.3"
      }
    },
    "util.promisify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/util.promisify/-/util.promisify-1.0.1.tgz",
      "integrity": "sha512-g9JpC/3He3bm38zsLupWryXHoEcS22YHthuPQSJdMy6KNrzIRzWqcsHzD/WUnqe45whVou4VIsPew37DoXWNrA==",
      "dev": true,
      "requires": {
        "define-properties": "^1.1.3",
        "es-abstract": "^1.17.2",
        "has-symbols": "^1.0.1",
        "object.getownpropertydescriptors": "^2.1.0"
      }
    },
    "utils-merge": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
      "integrity": "sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM="
    },
    "uuid": {
      "version": "7.0.2",
      "resolved": "https://registry.npmjs.org/uuid/-/uuid-7.0.2.tgz",
      "integrity": "sha512-vy9V/+pKG+5ZTYKf+VcphF5Oc6EFiu3W8Nv3P3zIh0EqVI80ZxOzuPfe9EHjkFNvf8+xuTHVeei4Drydlx4zjw=="
    },
    "validate-npm-package-license": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz",
      "integrity": "sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==",
      "dev": true,
      "requires": {
        "spdx-correct": "^3.0.0",
        "spdx-expression-parse": "^3.0.0"
      }
    },
    "validate-npm-package-name": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/validate-npm-package-name/-/validate-npm-package-name-3.0.0.tgz",
      "integrity": "sha1-X6kS2B630MdK/BQN5zF/DKffQ34=",
      "dev": true,
      "requires": {
        "builtins": "^1.0.3"
      }
    },
    "vary": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
      "integrity": "sha1-IpnwLG3tMNSllhsLn3RSShj2NPw="
    },
    "vendors": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/vendors/-/vendors-1.0.4.tgz",
      "integrity": "sha512-/juG65kTL4Cy2su4P8HjtkTxk6VmJDiOPBufWniqQ6wknac6jNiXS9vU+hO3wgusiyqWlzTbVHi0dyJqRONg3w==",
      "dev": true
    },
    "verror": {
      "version": "1.10.0",
      "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
      "integrity": "sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=",
      "requires": {
        "assert-plus": "^1.0.0",
        "core-util-is": "1.0.2",
        "extsprintf": "^1.2.0"
      }
    },
    "vm-browserify": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/vm-browserify/-/vm-browserify-1.1.2.tgz",
      "integrity": "sha512-2ham8XPWTONajOR0ohOKOHXkm3+gaBmGut3SRuu75xLd/RRaY6vqgh8NBYYk7+RW3u5AtzPQZG8F10LHkl0lAQ==",
      "dev": true
    },
    "void-elements": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/void-elements/-/void-elements-2.0.1.tgz",
      "integrity": "sha1-wGavtYK7HLQSjWDqkjkulNXp2+w=",
      "dev": true
    },
    "watchpack": {
      "version": "1.6.1",
      "resolved": "https://registry.npmjs.org/watchpack/-/watchpack-1.6.1.tgz",
      "integrity": "sha512-+IF9hfUFOrYOOaKyfaI7h7dquUIOgyEMoQMLA7OP5FxegKA2+XdXThAZ9TU2kucfhDH7rfMHs1oPYziVGWRnZA==",
      "dev": true,
      "requires": {
        "chokidar": "^2.1.8",
        "graceful-fs": "^4.1.2",
        "neo-async": "^2.5.0"
      },
      "dependencies": {
        "anymatch": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-2.0.0.tgz",
          "integrity": "sha512-5teOsQWABXHHBFP9y3skS5P3d/WfWXpv3FUpy+LorMrNYaT9pI4oLMQX7jzQ2KklNpGpWHzdCXTDT2Y3XGlZBw==",
          "dev": true,
          "requires": {
            "micromatch": "^3.1.4",
            "normalize-path": "^2.1.1"
          },
          "dependencies": {
            "normalize-path": {
              "version": "2.1.1",
              "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-2.1.1.tgz",
              "integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
              "dev": true,
              "requires": {
                "remove-trailing-separator": "^1.0.1"
              }
            }
          }
        },
        "binary-extensions": {
          "version": "1.13.1",
          "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-1.13.1.tgz",
          "integrity": "sha512-Un7MIEDdUC5gNpcGDV97op1Ywk748MpHcFTHoYs6qnj1Z3j7I53VG3nwZhKzoBZmbdRNnb6WRdFlwl7tSDuZGw==",
          "dev": true
        },
        "braces": {
          "version": "2.3.2",
          "resolved": "https://registry.npmjs.org/braces/-/braces-2.3.2.tgz",
          "integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",
          "dev": true,
          "requires": {
            "arr-flatten": "^1.1.0",
            "array-unique": "^0.3.2",
            "extend-shallow": "^2.0.1",
            "fill-range": "^4.0.0",
            "isobject": "^3.0.1",
            "repeat-element": "^1.1.2",
            "snapdragon": "^0.8.1",
            "snapdragon-node": "^2.0.1",
            "split-string": "^3.0.2",
            "to-regex": "^3.0.1"
          }
        },
        "chokidar": {
          "version": "2.1.8",
          "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-2.1.8.tgz",
          "integrity": "sha512-ZmZUazfOzf0Nve7duiCKD23PFSCs4JPoYyccjUFF3aQkQadqBhfzhjkwBH2mNOG9cTBwhamM37EIsIkZw3nRgg==",
          "dev": true,
          "requires": {
            "anymatch": "^2.0.0",
            "async-each": "^1.0.1",
            "braces": "^2.3.2",
            "fsevents": "^1.2.7",
            "glob-parent": "^3.1.0",
            "inherits": "^2.0.3",
            "is-binary-path": "^1.0.0",
            "is-glob": "^4.0.0",
            "normalize-path": "^3.0.0",
            "path-is-absolute": "^1.0.0",
            "readdirp": "^2.2.1",
            "upath": "^1.1.1"
          }
        },
        "extend-shallow": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
          "dev": true,
          "requires": {
            "is-extendable": "^0.1.0"
          }
        },
        "fill-range": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz",
          "integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",
          "dev": true,
          "requires": {
            "extend-shallow": "^2.0.1",
            "is-number": "^3.0.0",
            "repeat-string": "^1.6.1",
            "to-regex-range": "^2.1.0"
          }
        },
        "fsevents": {
          "version": "1.2.12",
          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.2.12.tgz",
          "integrity": "sha512-Ggd/Ktt7E7I8pxZRbGIs7vwqAPscSESMrCSkx2FtWeqmheJgCo2R74fTsZFCifr0VTPwqRpPv17+6b8Zp7th0Q==",
          "dev": true,
          "optional": true,
          "requires": {
            "bindings": "^1.5.0",
            "nan": "^2.12.1",
            "node-pre-gyp": "*"
          },
          "dependencies": {
            "abbrev": {
              "version": "1.1.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "ansi-regex": {
              "version": "2.1.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "aproba": {
              "version": "1.2.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "are-we-there-yet": {
              "version": "1.1.5",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "delegates": "^1.0.0",
                "readable-stream": "^2.0.6"
              }
            },
            "balanced-match": {
              "version": "1.0.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "brace-expansion": {
              "version": "1.1.11",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "balanced-match": "^1.0.0",
                "concat-map": "0.0.1"
              }
            },
            "chownr": {
              "version": "1.1.4",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "code-point-at": {
              "version": "1.1.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "concat-map": {
              "version": "0.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "console-control-strings": {
              "version": "1.1.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "core-util-is": {
              "version": "1.0.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "debug": {
              "version": "3.2.6",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "ms": "^2.1.1"
              }
            },
            "deep-extend": {
              "version": "0.6.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "delegates": {
              "version": "1.0.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "detect-libc": {
              "version": "1.0.3",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "fs-minipass": {
              "version": "1.2.7",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "minipass": "^2.6.0"
              }
            },
            "fs.realpath": {
              "version": "1.0.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "gauge": {
              "version": "2.7.4",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "aproba": "^1.0.3",
                "console-control-strings": "^1.0.0",
                "has-unicode": "^2.0.0",
                "object-assign": "^4.1.0",
                "signal-exit": "^3.0.0",
                "string-width": "^1.0.1",
                "strip-ansi": "^3.0.1",
                "wide-align": "^1.1.0"
              }
            },
            "glob": {
              "version": "7.1.6",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "fs.realpath": "^1.0.0",
                "inflight": "^1.0.4",
                "inherits": "2",
                "minimatch": "^3.0.4",
                "once": "^1.3.0",
                "path-is-absolute": "^1.0.0"
              }
            },
            "has-unicode": {
              "version": "2.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "iconv-lite": {
              "version": "0.4.24",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "safer-buffer": ">= 2.1.2 < 3"
              }
            },
            "ignore-walk": {
              "version": "3.0.3",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "minimatch": "^3.0.4"
              }
            },
            "inflight": {
              "version": "1.0.6",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "once": "^1.3.0",
                "wrappy": "1"
              }
            },
            "inherits": {
              "version": "2.0.4",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "ini": {
              "version": "1.3.5",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "is-fullwidth-code-point": {
              "version": "1.0.0",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "number-is-nan": "^1.0.0"
              }
            },
            "isarray": {
              "version": "1.0.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "minimatch": {
              "version": "3.0.4",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "brace-expansion": "^1.1.7"
              }
            },
            "minimist": {
              "version": "1.2.5",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "minipass": {
              "version": "2.9.0",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "safe-buffer": "^5.1.2",
                "yallist": "^3.0.0"
              }
            },
            "minizlib": {
              "version": "1.3.3",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "minipass": "^2.9.0"
              }
            },
            "mkdirp": {
              "version": "0.5.3",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "minimist": "^1.2.5"
              }
            },
            "ms": {
              "version": "2.1.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "needle": {
              "version": "2.3.3",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "debug": "^3.2.6",
                "iconv-lite": "^0.4.4",
                "sax": "^1.2.4"
              }
            },
            "node-pre-gyp": {
              "version": "0.14.0",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "detect-libc": "^1.0.2",
                "mkdirp": "^0.5.1",
                "needle": "^2.2.1",
                "nopt": "^4.0.1",
                "npm-packlist": "^1.1.6",
                "npmlog": "^4.0.2",
                "rc": "^1.2.7",
                "rimraf": "^2.6.1",
                "semver": "^5.3.0",
                "tar": "^4.4.2"
              }
            },
            "nopt": {
              "version": "4.0.3",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "abbrev": "1",
                "osenv": "^0.1.4"
              }
            },
            "npm-bundled": {
              "version": "1.1.1",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "npm-normalize-package-bin": "^1.0.1"
              }
            },
            "npm-normalize-package-bin": {
              "version": "1.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "npm-packlist": {
              "version": "1.4.8",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "ignore-walk": "^3.0.1",
                "npm-bundled": "^1.0.1",
                "npm-normalize-package-bin": "^1.0.1"
              }
            },
            "npmlog": {
              "version": "4.1.2",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "are-we-there-yet": "~1.1.2",
                "console-control-strings": "~1.1.0",
                "gauge": "~2.7.3",
                "set-blocking": "~2.0.0"
              }
            },
            "number-is-nan": {
              "version": "1.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "object-assign": {
              "version": "4.1.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "once": {
              "version": "1.4.0",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "wrappy": "1"
              }
            },
            "os-homedir": {
              "version": "1.0.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "os-tmpdir": {
              "version": "1.0.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "osenv": {
              "version": "0.1.5",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "os-homedir": "^1.0.0",
                "os-tmpdir": "^1.0.0"
              }
            },
            "path-is-absolute": {
              "version": "1.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "process-nextick-args": {
              "version": "2.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "rc": {
              "version": "1.2.8",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "deep-extend": "^0.6.0",
                "ini": "~1.3.0",
                "minimist": "^1.2.0",
                "strip-json-comments": "~2.0.1"
              }
            },
            "readable-stream": {
              "version": "2.3.7",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "core-util-is": "~1.0.0",
                "inherits": "~2.0.3",
                "isarray": "~1.0.0",
                "process-nextick-args": "~2.0.0",
                "safe-buffer": "~5.1.1",
                "string_decoder": "~1.1.1",
                "util-deprecate": "~1.0.1"
              }
            },
            "rimraf": {
              "version": "2.7.1",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "glob": "^7.1.3"
              }
            },
            "safe-buffer": {
              "version": "5.1.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "safer-buffer": {
              "version": "2.1.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "sax": {
              "version": "1.2.4",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "semver": {
              "version": "5.7.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "set-blocking": {
              "version": "2.0.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "signal-exit": {
              "version": "3.0.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "string-width": {
              "version": "1.0.2",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "code-point-at": "^1.0.0",
                "is-fullwidth-code-point": "^1.0.0",
                "strip-ansi": "^3.0.0"
              }
            },
            "string_decoder": {
              "version": "1.1.1",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "safe-buffer": "~5.1.0"
              }
            },
            "strip-ansi": {
              "version": "3.0.1",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "ansi-regex": "^2.0.0"
              }
            },
            "strip-json-comments": {
              "version": "2.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "tar": {
              "version": "4.4.13",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "chownr": "^1.1.1",
                "fs-minipass": "^1.2.5",
                "minipass": "^2.8.6",
                "minizlib": "^1.2.1",
                "mkdirp": "^0.5.0",
                "safe-buffer": "^5.1.2",
                "yallist": "^3.0.3"
              }
            },
            "util-deprecate": {
              "version": "1.0.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "wide-align": {
              "version": "1.1.3",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "string-width": "^1.0.2 || 2"
              }
            },
            "wrappy": {
              "version": "1.0.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "yallist": {
              "version": "3.1.1",
              "bundled": true,
              "dev": true,
              "optional": true
            }
          }
        },
        "is-binary-path": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-1.0.1.tgz",
          "integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
          "dev": true,
          "requires": {
            "binary-extensions": "^1.0.0"
          }
        },
        "is-number": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
          "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
          "dev": true,
          "requires": {
            "kind-of": "^3.0.2"
          }
        },
        "kind-of": {
          "version": "3.2.2",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
          "dev": true,
          "requires": {
            "is-buffer": "^1.1.5"
          }
        },
        "readdirp": {
          "version": "2.2.1",
          "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-2.2.1.tgz",
          "integrity": "sha512-1JU/8q+VgFZyxwrJ+SVIOsh+KywWGpds3NTqikiKpDMZWScmAYyKIgqkO+ARvNWJfXeXR1zxz7aHF4u4CyH6vQ==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.11",
            "micromatch": "^3.1.10",
            "readable-stream": "^2.0.2"
          }
        },
        "to-regex-range": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz",
          "integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",
          "dev": true,
          "requires": {
            "is-number": "^3.0.0",
            "repeat-string": "^1.6.1"
          }
        }
      }
    },
    "wbuf": {
      "version": "1.7.3",
      "resolved": "https://registry.npmjs.org/wbuf/-/wbuf-1.7.3.tgz",
      "integrity": "sha512-O84QOnr0icsbFGLS0O3bI5FswxzRr8/gHwWkDlQFskhSPryQXvrTMxjxGP4+iWYoauLoBvfDpkrOauZ+0iZpDA==",
      "dev": true,
      "requires": {
        "minimalistic-assert": "^1.0.0"
      }
    },
    "wcwidth": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/wcwidth/-/wcwidth-1.0.1.tgz",
      "integrity": "sha1-8LDc+RW8X/FSivrbLA4XtTLaL+g=",
      "dev": true,
      "requires": {
        "defaults": "^1.0.3"
      }
    },
    "web3": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3/-/web3-1.2.6.tgz",
      "integrity": "sha512-tpu9fLIComgxGrFsD8LUtA4s4aCZk7px8UfcdEy6kS2uDi/ZfR07KJqpXZMij7Jvlq+cQrTAhsPSiBVvoMaivA==",
      "requires": {
        "@types/node": "^12.6.1",
        "web3-bzz": "1.2.6",
        "web3-core": "1.2.6",
        "web3-eth": "1.2.6",
        "web3-eth-personal": "1.2.6",
        "web3-net": "1.2.6",
        "web3-shh": "1.2.6",
        "web3-utils": "1.2.6"
      }
    },
    "web3-bzz": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-bzz/-/web3-bzz-1.2.6.tgz",
      "integrity": "sha512-9NiHLlxdI1XeFtbPJAmi2jnnIHVF+GNy517wvOS72P7ZfuJTPwZaSNXfT01vWgPPE9R96/uAHDWHOg+T4WaDQQ==",
      "requires": {
        "@types/node": "^10.12.18",
        "got": "9.6.0",
        "swarm-js": "0.1.39",
        "underscore": "1.9.1"
      },
      "dependencies": {
        "@types/node": {
          "version": "10.17.17",
          "resolved": "https://registry.npmjs.org/@types/node/-/node-10.17.17.tgz",
          "integrity": "sha512-gpNnRnZP3VWzzj5k3qrpRC6Rk3H/uclhAVo1aIvwzK5p5cOrs9yEyQ8H/HBsBY0u5rrWxXEiVPQ0dEB6pkjE8Q=="
        }
      }
    },
    "web3-core": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-core/-/web3-core-1.2.6.tgz",
      "integrity": "sha512-y/QNBFtr5cIR8vxebnotbjWJpOnO8LDYEAzZjeRRUJh2ijmhjoYk7dSNx9ExgC0UCfNFRoNCa9dGRu/GAxwRlw==",
      "requires": {
        "@types/bn.js": "^4.11.4",
        "@types/node": "^12.6.1",
        "web3-core-helpers": "1.2.6",
        "web3-core-method": "1.2.6",
        "web3-core-requestmanager": "1.2.6",
        "web3-utils": "1.2.6"
      }
    },
    "web3-core-helpers": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-core-helpers/-/web3-core-helpers-1.2.6.tgz",
      "integrity": "sha512-gYKWmC2HmO7RcDzpo4L1K8EIoy5L8iubNDuTC6q69UxczwqKF/Io0kbK/1Z10Av++NlzOSiuyGp2gc4t4UOsDw==",
      "requires": {
        "underscore": "1.9.1",
        "web3-eth-iban": "1.2.6",
        "web3-utils": "1.2.6"
      }
    },
    "web3-core-method": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-core-method/-/web3-core-method-1.2.6.tgz",
      "integrity": "sha512-r2dzyPEonqkBg7Mugq5dknhV5PGaZTHBZlS/C+aMxNyQs3T3eaAsCTqlQDitwNUh/sUcYPEGF0Vo7ahYK4k91g==",
      "requires": {
        "underscore": "1.9.1",
        "web3-core-helpers": "1.2.6",
        "web3-core-promievent": "1.2.6",
        "web3-core-subscriptions": "1.2.6",
        "web3-utils": "1.2.6"
      }
    },
    "web3-core-promievent": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-core-promievent/-/web3-core-promievent-1.2.6.tgz",
      "integrity": "sha512-km72kJef/qtQNiSjDJJVHIZvoVOm6ytW3FCYnOcCs7RIkviAb5JYlPiye0o4pJOLzCXYID7DK7Q9bhY8qWb1lw==",
      "requires": {
        "any-promise": "1.3.0",
        "eventemitter3": "3.1.2"
      },
      "dependencies": {
        "eventemitter3": {
          "version": "3.1.2",
          "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-3.1.2.tgz",
          "integrity": "sha512-tvtQIeLVHjDkJYnzf2dgVMxfuSGJeM/7UCG17TT4EumTfNtF+0nebF/4zWOIkCreAbtNqhGEboB6BWrwqNaw4Q=="
        }
      }
    },
    "web3-core-requestmanager": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-core-requestmanager/-/web3-core-requestmanager-1.2.6.tgz",
      "integrity": "sha512-QU2cbsj9Dm0r6om40oSwk8Oqbp3wTa08tXuMpSmeOTkGZ3EMHJ1/4LiJ8shwg1AvPMrKVU0Nri6+uBNCdReZ+g==",
      "requires": {
        "underscore": "1.9.1",
        "web3-core-helpers": "1.2.6",
        "web3-providers-http": "1.2.6",
        "web3-providers-ipc": "1.2.6",
        "web3-providers-ws": "1.2.6"
      }
    },
    "web3-core-subscriptions": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-core-subscriptions/-/web3-core-subscriptions-1.2.6.tgz",
      "integrity": "sha512-M0PzRrP2Ct13x3wPulFtc5kENH4UtnPxO9YxkfQlX2WRKENWjt4Rfq+BCVGYEk3rTutDfWrjfzjmqMRvXqEY5Q==",
      "requires": {
        "eventemitter3": "3.1.2",
        "underscore": "1.9.1",
        "web3-core-helpers": "1.2.6"
      },
      "dependencies": {
        "eventemitter3": {
          "version": "3.1.2",
          "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-3.1.2.tgz",
          "integrity": "sha512-tvtQIeLVHjDkJYnzf2dgVMxfuSGJeM/7UCG17TT4EumTfNtF+0nebF/4zWOIkCreAbtNqhGEboB6BWrwqNaw4Q=="
        }
      }
    },
    "web3-eth": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-eth/-/web3-eth-1.2.6.tgz",
      "integrity": "sha512-ROWlDPzh4QX6tlGGGlAK6X4kA2n0/cNj/4kb0nNVWkRouGmYO0R8k6s47YxYHvGiXt0s0++FUUv5vAbWovtUQw==",
      "requires": {
        "underscore": "1.9.1",
        "web3-core": "1.2.6",
        "web3-core-helpers": "1.2.6",
        "web3-core-method": "1.2.6",
        "web3-core-subscriptions": "1.2.6",
        "web3-eth-abi": "1.2.6",
        "web3-eth-accounts": "1.2.6",
        "web3-eth-contract": "1.2.6",
        "web3-eth-ens": "1.2.6",
        "web3-eth-iban": "1.2.6",
        "web3-eth-personal": "1.2.6",
        "web3-net": "1.2.6",
        "web3-utils": "1.2.6"
      }
    },
    "web3-eth-abi": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-eth-abi/-/web3-eth-abi-1.2.6.tgz",
      "integrity": "sha512-w9GAyyikn8nSifSDZxAvU9fxtQSX+W2xQWMmrtTXmBGCaE4/ywKOSPAO78gq8AoU4Wq5yqVGKZLLbfpt7/sHlA==",
      "requires": {
        "ethers": "4.0.0-beta.3",
        "underscore": "1.9.1",
        "web3-utils": "1.2.6"
      }
    },
    "web3-eth-accounts": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-eth-accounts/-/web3-eth-accounts-1.2.6.tgz",
      "integrity": "sha512-cDVtonHRgzqi/ZHOOf8kfCQWFEipcfQNAMzXIaKZwc0UUD9mgSI5oJrN45a89Ze+E6Lz9m77cDG5Ax9zscSkcw==",
      "requires": {
        "@web3-js/scrypt-shim": "^0.1.0",
        "any-promise": "1.3.0",
        "crypto-browserify": "3.12.0",
        "eth-lib": "^0.2.8",
        "ethereumjs-common": "^1.3.2",
        "ethereumjs-tx": "^2.1.1",
        "underscore": "1.9.1",
        "uuid": "3.3.2",
        "web3-core": "1.2.6",
        "web3-core-helpers": "1.2.6",
        "web3-core-method": "1.2.6",
        "web3-utils": "1.2.6"
      },
      "dependencies": {
        "eth-lib": {
          "version": "0.2.8",
          "resolved": "https://registry.npmjs.org/eth-lib/-/eth-lib-0.2.8.tgz",
          "integrity": "sha512-ArJ7x1WcWOlSpzdoTBX8vkwlkSQ85CjjifSZtV4co64vWxSV8geWfPI9x4SVYu3DSxnX4yWFVTtGL+j9DUFLNw==",
          "requires": {
            "bn.js": "^4.11.6",
            "elliptic": "^6.4.0",
            "xhr-request-promise": "^0.1.2"
          }
        },
        "uuid": {
          "version": "3.3.2",
          "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.3.2.tgz",
          "integrity": "sha512-yXJmeNaw3DnnKAOKJE51sL/ZaYfWJRl1pK9dr19YFCu0ObS231AB1/LbqTKRAQ5kw8A90rA6fr4riOUpTZvQZA=="
        }
      }
    },
    "web3-eth-contract": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-eth-contract/-/web3-eth-contract-1.2.6.tgz",
      "integrity": "sha512-ak4xbHIhWgsbdPCkSN+HnQc1SH4c856y7Ly+S57J/DQVzhFZemK5HvWdpwadJrQTcHET3ZeId1vq3kmW7UYodw==",
      "requires": {
        "@types/bn.js": "^4.11.4",
        "underscore": "1.9.1",
        "web3-core": "1.2.6",
        "web3-core-helpers": "1.2.6",
        "web3-core-method": "1.2.6",
        "web3-core-promievent": "1.2.6",
        "web3-core-subscriptions": "1.2.6",
        "web3-eth-abi": "1.2.6",
        "web3-utils": "1.2.6"
      }
    },
    "web3-eth-ens": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-eth-ens/-/web3-eth-ens-1.2.6.tgz",
      "integrity": "sha512-8UEqt6fqR/dji/jBGPFAyBs16OJjwi0t2dPWXPyGXmty/fH+osnXwWXE4HRUyj4xuafiM5P1YkXMsPhKEadjiw==",
      "requires": {
        "eth-ens-namehash": "2.0.8",
        "underscore": "1.9.1",
        "web3-core": "1.2.6",
        "web3-core-helpers": "1.2.6",
        "web3-core-promievent": "1.2.6",
        "web3-eth-abi": "1.2.6",
        "web3-eth-contract": "1.2.6",
        "web3-utils": "1.2.6"
      }
    },
    "web3-eth-iban": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-eth-iban/-/web3-eth-iban-1.2.6.tgz",
      "integrity": "sha512-TPMc3BW9Iso7H+9w+ytbqHK9wgOmtocyCD3PaAe5Eie50KQ/j7ThA60dGJnxItVo6yyRv5pZAYxPVob9x/fJlg==",
      "requires": {
        "bn.js": "4.11.8",
        "web3-utils": "1.2.6"
      }
    },
    "web3-eth-personal": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-eth-personal/-/web3-eth-personal-1.2.6.tgz",
      "integrity": "sha512-T2NUkh1plY8d7wePXSoHnaiKOd8dLNFaQfgBl9JHU6S7IJrG9jnYD9bVxLEgRUfHs9gKf9tQpDf7AcPFdq/A8g==",
      "requires": {
        "@types/node": "^12.6.1",
        "web3-core": "1.2.6",
        "web3-core-helpers": "1.2.6",
        "web3-core-method": "1.2.6",
        "web3-net": "1.2.6",
        "web3-utils": "1.2.6"
      }
    },
    "web3-net": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-net/-/web3-net-1.2.6.tgz",
      "integrity": "sha512-hsNHAPddrhgjWLmbESW0KxJi2GnthPcow0Sqpnf4oB6+/+ZnQHU9OsIyHb83bnC1OmunrK2vf9Ye2mLPdFIu3A==",
      "requires": {
        "web3-core": "1.2.6",
        "web3-core-method": "1.2.6",
        "web3-utils": "1.2.6"
      }
    },
    "web3-providers-http": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-providers-http/-/web3-providers-http-1.2.6.tgz",
      "integrity": "sha512-2+SaFCspb5f82QKuHB3nEPQOF9iSWxRf7c18fHtmnLNVkfG9SwLN1zh67bYn3tZGUdOI3gj8aX4Uhfpwx9Ezpw==",
      "requires": {
        "web3-core-helpers": "1.2.6",
        "xhr2-cookies": "1.1.0"
      }
    },
    "web3-providers-ipc": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-providers-ipc/-/web3-providers-ipc-1.2.6.tgz",
      "integrity": "sha512-b0Es+/GTZyk5FG3SgUDW+2/mBwJAXWt5LuppODptiOas8bB2khLjG6+Gm1K4uwOb+1NJGPt5mZZ8Wi7vibtQ+A==",
      "requires": {
        "oboe": "2.1.4",
        "underscore": "1.9.1",
        "web3-core-helpers": "1.2.6"
      }
    },
    "web3-providers-ws": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-providers-ws/-/web3-providers-ws-1.2.6.tgz",
      "integrity": "sha512-20waSYX+gb5M5yKhug5FIwxBBvkKzlJH7sK6XEgdOx6BZ9YYamLmvg9wcRVtnSZO8hV/3cWenO/tRtTrHVvIgQ==",
      "requires": {
        "@web3-js/websocket": "^1.0.29",
        "underscore": "1.9.1",
        "web3-core-helpers": "1.2.6"
      }
    },
    "web3-shh": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-shh/-/web3-shh-1.2.6.tgz",
      "integrity": "sha512-rouWyOOM6YMbLQd65grpj8BBezQfgNeRRX+cGyW4xsn6Xgu+B73Zvr6OtA/ftJwwa9bqHGpnLrrLMeWyy4YLUw==",
      "requires": {
        "web3-core": "1.2.6",
        "web3-core-method": "1.2.6",
        "web3-core-subscriptions": "1.2.6",
        "web3-net": "1.2.6"
      }
    },
    "web3-utils": {
      "version": "1.2.6",
      "resolved": "https://registry.npmjs.org/web3-utils/-/web3-utils-1.2.6.tgz",
      "integrity": "sha512-8/HnqG/l7dGmKMgEL9JeKPTtjScxOePTzopv5aaKFExPfaBrYRkgoMqhoowCiAl/s16QaTn4DoIF1QC4YsT7Mg==",
      "requires": {
        "bn.js": "4.11.8",
        "eth-lib": "0.2.7",
        "ethereum-bloom-filters": "^1.0.6",
        "ethjs-unit": "0.1.6",
        "number-to-bn": "1.7.0",
        "randombytes": "^2.1.0",
        "underscore": "1.9.1",
        "utf8": "3.0.0"
      },
      "dependencies": {
        "eth-lib": {
          "version": "0.2.7",
          "resolved": "https://registry.npmjs.org/eth-lib/-/eth-lib-0.2.7.tgz",
          "integrity": "sha1-L5Pxex4jrsN1nNSj/iDBKGo/wco=",
          "requires": {
            "bn.js": "^4.11.6",
            "elliptic": "^6.4.0",
            "xhr-request-promise": "^0.1.2"
          }
        }
      }
    },
    "webdriver-js-extender": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/webdriver-js-extender/-/webdriver-js-extender-2.1.0.tgz",
      "integrity": "sha512-lcUKrjbBfCK6MNsh7xaY2UAUmZwe+/ib03AjVOpFobX4O7+83BUveSrLfU0Qsyb1DaKJdQRbuU+kM9aZ6QUhiQ==",
      "dev": true,
      "requires": {
        "@types/selenium-webdriver": "^3.0.0",
        "selenium-webdriver": "^3.0.1"
      }
    },
    "webpack": {
      "version": "4.41.2",
      "resolved": "https://registry.npmjs.org/webpack/-/webpack-4.41.2.tgz",
      "integrity": "sha512-Zhw69edTGfbz9/8JJoyRQ/pq8FYUoY0diOXqW0T6yhgdhCv6wr0hra5DwwWexNRns2Z2+gsnrNcbe9hbGBgk/A==",
      "dev": true,
      "requires": {
        "@webassemblyjs/ast": "1.8.5",
        "@webassemblyjs/helper-module-context": "1.8.5",
        "@webassemblyjs/wasm-edit": "1.8.5",
        "@webassemblyjs/wasm-parser": "1.8.5",
        "acorn": "^6.2.1",
        "ajv": "^6.10.2",
        "ajv-keywords": "^3.4.1",
        "chrome-trace-event": "^1.0.2",
        "enhanced-resolve": "^4.1.0",
        "eslint-scope": "^4.0.3",
        "json-parse-better-errors": "^1.0.2",
        "loader-runner": "^2.4.0",
        "loader-utils": "^1.2.3",
        "memory-fs": "^0.4.1",
        "micromatch": "^3.1.10",
        "mkdirp": "^0.5.1",
        "neo-async": "^2.6.1",
        "node-libs-browser": "^2.2.1",
        "schema-utils": "^1.0.0",
        "tapable": "^1.1.3",
        "terser-webpack-plugin": "^1.4.1",
        "watchpack": "^1.6.0",
        "webpack-sources": "^1.4.1"
      },
      "dependencies": {
        "acorn": {
          "version": "6.4.1",
          "resolved": "https://registry.npmjs.org/acorn/-/acorn-6.4.1.tgz",
          "integrity": "sha512-ZVA9k326Nwrj3Cj9jlh3wGFutC2ZornPNARZwsNYqQYgN0EsV2d53w5RN/co65Ohn4sUAUtb1rSUAOD6XN9idA==",
          "dev": true
        },
        "cacache": {
          "version": "12.0.4",
          "resolved": "https://registry.npmjs.org/cacache/-/cacache-12.0.4.tgz",
          "integrity": "sha512-a0tMB40oefvuInr4Cwb3GerbL9xTj1D5yg0T5xrjGCGyfvbxseIXX7BAO/u/hIXdafzOI5JC3wDwHyf24buOAQ==",
          "dev": true,
          "requires": {
            "bluebird": "^3.5.5",
            "chownr": "^1.1.1",
            "figgy-pudding": "^3.5.1",
            "glob": "^7.1.4",
            "graceful-fs": "^4.1.15",
            "infer-owner": "^1.0.3",
            "lru-cache": "^5.1.1",
            "mississippi": "^3.0.0",
            "mkdirp": "^0.5.1",
            "move-concurrently": "^1.0.1",
            "promise-inflight": "^1.0.1",
            "rimraf": "^2.6.3",
            "ssri": "^6.0.1",
            "unique-filename": "^1.1.1",
            "y18n": "^4.0.0"
          }
        },
        "find-cache-dir": {
          "version": "2.1.0",
          "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-2.1.0.tgz",
          "integrity": "sha512-Tq6PixE0w/VMFfCgbONnkiQIVol/JJL7nRMi20fqzA4NRs9AfeqMGeRdPi3wIhYkxjeBaWh2rxwapn5Tu3IqOQ==",
          "dev": true,
          "requires": {
            "commondir": "^1.0.1",
            "make-dir": "^2.0.0",
            "pkg-dir": "^3.0.0"
          }
        },
        "is-wsl": {
          "version": "1.1.0",
          "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-1.1.0.tgz",
          "integrity": "sha1-HxbkqiKwTRM2tmGIpmrzxgDDpm0=",
          "dev": true
        },
        "memory-fs": {
          "version": "0.4.1",
          "resolved": "https://registry.npmjs.org/memory-fs/-/memory-fs-0.4.1.tgz",
          "integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",
          "dev": true,
          "requires": {
            "errno": "^0.1.3",
            "readable-stream": "^2.0.1"
          }
        },
        "rimraf": {
          "version": "2.7.1",
          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
          "dev": true,
          "requires": {
            "glob": "^7.1.3"
          }
        },
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        },
        "ssri": {
          "version": "6.0.1",
          "resolved": "https://registry.npmjs.org/ssri/-/ssri-6.0.1.tgz",
          "integrity": "sha512-3Wge10hNcT1Kur4PDFwEieXSCMCJs/7WvSACcrMYrNp+b8kDL1/0wJch5Ni2WrtwEa2IO8OsVfeKIciKCDx/QA==",
          "dev": true,
          "requires": {
            "figgy-pudding": "^3.5.1"
          }
        },
        "terser-webpack-plugin": {
          "version": "1.4.3",
          "resolved": "https://registry.npmjs.org/terser-webpack-plugin/-/terser-webpack-plugin-1.4.3.tgz",
          "integrity": "sha512-QMxecFz/gHQwteWwSo5nTc6UaICqN1bMedC5sMtUc7y3Ha3Q8y6ZO0iCR8pq4RJC8Hjf0FEPEHZqcMB/+DFCrA==",
          "dev": true,
          "requires": {
            "cacache": "^12.0.2",
            "find-cache-dir": "^2.1.0",
            "is-wsl": "^1.1.0",
            "schema-utils": "^1.0.0",
            "serialize-javascript": "^2.1.2",
            "source-map": "^0.6.1",
            "terser": "^4.1.2",
            "webpack-sources": "^1.4.0",
            "worker-farm": "^1.7.0"
          }
        }
      }
    },
    "webpack-dev-middleware": {
      "version": "3.7.2",
      "resolved": "https://registry.npmjs.org/webpack-dev-middleware/-/webpack-dev-middleware-3.7.2.tgz",
      "integrity": "sha512-1xC42LxbYoqLNAhV6YzTYacicgMZQTqRd27Sim9wn5hJrX3I5nxYy1SxSd4+gjUFsz1dQFj+yEe6zEVmSkeJjw==",
      "dev": true,
      "requires": {
        "memory-fs": "^0.4.1",
        "mime": "^2.4.4",
        "mkdirp": "^0.5.1",
        "range-parser": "^1.2.1",
        "webpack-log": "^2.0.0"
      },
      "dependencies": {
        "memory-fs": {
          "version": "0.4.1",
          "resolved": "https://registry.npmjs.org/memory-fs/-/memory-fs-0.4.1.tgz",
          "integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",
          "dev": true,
          "requires": {
            "errno": "^0.1.3",
            "readable-stream": "^2.0.1"
          }
        },
        "mime": {
          "version": "2.4.4",
          "resolved": "https://registry.npmjs.org/mime/-/mime-2.4.4.tgz",
          "integrity": "sha512-LRxmNwziLPT828z+4YkNzloCFC2YM4wrB99k+AV5ZbEyfGNWfG8SO1FUXLmLDBSo89NrJZ4DIWeLjy1CHGhMGA==",
          "dev": true
        }
      }
    },
    "webpack-dev-server": {
      "version": "3.9.0",
      "resolved": "https://registry.npmjs.org/webpack-dev-server/-/webpack-dev-server-3.9.0.tgz",
      "integrity": "sha512-E6uQ4kRrTX9URN9s/lIbqTAztwEPdvzVrcmHE8EQ9YnuT9J8Es5Wrd8n9BKg1a0oZ5EgEke/EQFgUsp18dSTBw==",
      "dev": true,
      "requires": {
        "ansi-html": "0.0.7",
        "bonjour": "^3.5.0",
        "chokidar": "^2.1.8",
        "compression": "^1.7.4",
        "connect-history-api-fallback": "^1.6.0",
        "debug": "^4.1.1",
        "del": "^4.1.1",
        "express": "^4.17.1",
        "html-entities": "^1.2.1",
        "http-proxy-middleware": "0.19.1",
        "import-local": "^2.0.0",
        "internal-ip": "^4.3.0",
        "ip": "^1.1.5",
        "is-absolute-url": "^3.0.3",
        "killable": "^1.0.1",
        "loglevel": "^1.6.4",
        "opn": "^5.5.0",
        "p-retry": "^3.0.1",
        "portfinder": "^1.0.25",
        "schema-utils": "^1.0.0",
        "selfsigned": "^1.10.7",
        "semver": "^6.3.0",
        "serve-index": "^1.9.1",
        "sockjs": "0.3.19",
        "sockjs-client": "1.4.0",
        "spdy": "^4.0.1",
        "strip-ansi": "^3.0.1",
        "supports-color": "^6.1.0",
        "url": "^0.11.0",
        "webpack-dev-middleware": "^3.7.2",
        "webpack-log": "^2.0.0",
        "ws": "^6.2.1",
        "yargs": "12.0.5"
      },
      "dependencies": {
        "anymatch": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-2.0.0.tgz",
          "integrity": "sha512-5teOsQWABXHHBFP9y3skS5P3d/WfWXpv3FUpy+LorMrNYaT9pI4oLMQX7jzQ2KklNpGpWHzdCXTDT2Y3XGlZBw==",
          "dev": true,
          "requires": {
            "micromatch": "^3.1.4",
            "normalize-path": "^2.1.1"
          },
          "dependencies": {
            "normalize-path": {
              "version": "2.1.1",
              "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-2.1.1.tgz",
              "integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",
              "dev": true,
              "requires": {
                "remove-trailing-separator": "^1.0.1"
              }
            }
          }
        },
        "binary-extensions": {
          "version": "1.13.1",
          "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-1.13.1.tgz",
          "integrity": "sha512-Un7MIEDdUC5gNpcGDV97op1Ywk748MpHcFTHoYs6qnj1Z3j7I53VG3nwZhKzoBZmbdRNnb6WRdFlwl7tSDuZGw==",
          "dev": true
        },
        "braces": {
          "version": "2.3.2",
          "resolved": "https://registry.npmjs.org/braces/-/braces-2.3.2.tgz",
          "integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",
          "dev": true,
          "requires": {
            "arr-flatten": "^1.1.0",
            "array-unique": "^0.3.2",
            "extend-shallow": "^2.0.1",
            "fill-range": "^4.0.0",
            "isobject": "^3.0.1",
            "repeat-element": "^1.1.2",
            "snapdragon": "^0.8.1",
            "snapdragon-node": "^2.0.1",
            "split-string": "^3.0.2",
            "to-regex": "^3.0.1"
          }
        },
        "chokidar": {
          "version": "2.1.8",
          "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-2.1.8.tgz",
          "integrity": "sha512-ZmZUazfOzf0Nve7duiCKD23PFSCs4JPoYyccjUFF3aQkQadqBhfzhjkwBH2mNOG9cTBwhamM37EIsIkZw3nRgg==",
          "dev": true,
          "requires": {
            "anymatch": "^2.0.0",
            "async-each": "^1.0.1",
            "braces": "^2.3.2",
            "fsevents": "^1.2.7",
            "glob-parent": "^3.1.0",
            "inherits": "^2.0.3",
            "is-binary-path": "^1.0.0",
            "is-glob": "^4.0.0",
            "normalize-path": "^3.0.0",
            "path-is-absolute": "^1.0.0",
            "readdirp": "^2.2.1",
            "upath": "^1.1.1"
          }
        },
        "extend-shallow": {
          "version": "2.0.1",
          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",
          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
          "dev": true,
          "requires": {
            "is-extendable": "^0.1.0"
          }
        },
        "fill-range": {
          "version": "4.0.0",
          "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz",
          "integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",
          "dev": true,
          "requires": {
            "extend-shallow": "^2.0.1",
            "is-number": "^3.0.0",
            "repeat-string": "^1.6.1",
            "to-regex-range": "^2.1.0"
          }
        },
        "fsevents": {
          "version": "1.2.12",
          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.2.12.tgz",
          "integrity": "sha512-Ggd/Ktt7E7I8pxZRbGIs7vwqAPscSESMrCSkx2FtWeqmheJgCo2R74fTsZFCifr0VTPwqRpPv17+6b8Zp7th0Q==",
          "dev": true,
          "optional": true,
          "requires": {
            "bindings": "^1.5.0",
            "nan": "^2.12.1",
            "node-pre-gyp": "*"
          },
          "dependencies": {
            "abbrev": {
              "version": "1.1.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "ansi-regex": {
              "version": "2.1.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "aproba": {
              "version": "1.2.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "are-we-there-yet": {
              "version": "1.1.5",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "delegates": "^1.0.0",
                "readable-stream": "^2.0.6"
              }
            },
            "balanced-match": {
              "version": "1.0.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "brace-expansion": {
              "version": "1.1.11",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "balanced-match": "^1.0.0",
                "concat-map": "0.0.1"
              }
            },
            "chownr": {
              "version": "1.1.4",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "code-point-at": {
              "version": "1.1.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "concat-map": {
              "version": "0.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "console-control-strings": {
              "version": "1.1.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "core-util-is": {
              "version": "1.0.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "debug": {
              "version": "3.2.6",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "ms": "^2.1.1"
              }
            },
            "deep-extend": {
              "version": "0.6.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "delegates": {
              "version": "1.0.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "detect-libc": {
              "version": "1.0.3",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "fs-minipass": {
              "version": "1.2.7",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "minipass": "^2.6.0"
              }
            },
            "fs.realpath": {
              "version": "1.0.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "gauge": {
              "version": "2.7.4",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "aproba": "^1.0.3",
                "console-control-strings": "^1.0.0",
                "has-unicode": "^2.0.0",
                "object-assign": "^4.1.0",
                "signal-exit": "^3.0.0",
                "string-width": "^1.0.1",
                "strip-ansi": "^3.0.1",
                "wide-align": "^1.1.0"
              }
            },
            "glob": {
              "version": "7.1.6",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "fs.realpath": "^1.0.0",
                "inflight": "^1.0.4",
                "inherits": "2",
                "minimatch": "^3.0.4",
                "once": "^1.3.0",
                "path-is-absolute": "^1.0.0"
              }
            },
            "has-unicode": {
              "version": "2.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "iconv-lite": {
              "version": "0.4.24",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "safer-buffer": ">= 2.1.2 < 3"
              }
            },
            "ignore-walk": {
              "version": "3.0.3",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "minimatch": "^3.0.4"
              }
            },
            "inflight": {
              "version": "1.0.6",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "once": "^1.3.0",
                "wrappy": "1"
              }
            },
            "inherits": {
              "version": "2.0.4",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "ini": {
              "version": "1.3.5",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "is-fullwidth-code-point": {
              "version": "1.0.0",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "number-is-nan": "^1.0.0"
              }
            },
            "isarray": {
              "version": "1.0.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "minimatch": {
              "version": "3.0.4",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "brace-expansion": "^1.1.7"
              }
            },
            "minimist": {
              "version": "1.2.5",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "minipass": {
              "version": "2.9.0",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "safe-buffer": "^5.1.2",
                "yallist": "^3.0.0"
              }
            },
            "minizlib": {
              "version": "1.3.3",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "minipass": "^2.9.0"
              }
            },
            "mkdirp": {
              "version": "0.5.3",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "minimist": "^1.2.5"
              }
            },
            "ms": {
              "version": "2.1.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "needle": {
              "version": "2.3.3",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "debug": "^3.2.6",
                "iconv-lite": "^0.4.4",
                "sax": "^1.2.4"
              }
            },
            "node-pre-gyp": {
              "version": "0.14.0",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "detect-libc": "^1.0.2",
                "mkdirp": "^0.5.1",
                "needle": "^2.2.1",
                "nopt": "^4.0.1",
                "npm-packlist": "^1.1.6",
                "npmlog": "^4.0.2",
                "rc": "^1.2.7",
                "rimraf": "^2.6.1",
                "semver": "^5.3.0",
                "tar": "^4.4.2"
              }
            },
            "nopt": {
              "version": "4.0.3",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "abbrev": "1",
                "osenv": "^0.1.4"
              }
            },
            "npm-bundled": {
              "version": "1.1.1",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "npm-normalize-package-bin": "^1.0.1"
              }
            },
            "npm-normalize-package-bin": {
              "version": "1.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "npm-packlist": {
              "version": "1.4.8",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "ignore-walk": "^3.0.1",
                "npm-bundled": "^1.0.1",
                "npm-normalize-package-bin": "^1.0.1"
              }
            },
            "npmlog": {
              "version": "4.1.2",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "are-we-there-yet": "~1.1.2",
                "console-control-strings": "~1.1.0",
                "gauge": "~2.7.3",
                "set-blocking": "~2.0.0"
              }
            },
            "number-is-nan": {
              "version": "1.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "object-assign": {
              "version": "4.1.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "once": {
              "version": "1.4.0",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "wrappy": "1"
              }
            },
            "os-homedir": {
              "version": "1.0.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "os-tmpdir": {
              "version": "1.0.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "osenv": {
              "version": "0.1.5",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "os-homedir": "^1.0.0",
                "os-tmpdir": "^1.0.0"
              }
            },
            "path-is-absolute": {
              "version": "1.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "process-nextick-args": {
              "version": "2.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "rc": {
              "version": "1.2.8",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "deep-extend": "^0.6.0",
                "ini": "~1.3.0",
                "minimist": "^1.2.0",
                "strip-json-comments": "~2.0.1"
              }
            },
            "readable-stream": {
              "version": "2.3.7",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "core-util-is": "~1.0.0",
                "inherits": "~2.0.3",
                "isarray": "~1.0.0",
                "process-nextick-args": "~2.0.0",
                "safe-buffer": "~5.1.1",
                "string_decoder": "~1.1.1",
                "util-deprecate": "~1.0.1"
              }
            },
            "rimraf": {
              "version": "2.7.1",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "glob": "^7.1.3"
              }
            },
            "safe-buffer": {
              "version": "5.1.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "safer-buffer": {
              "version": "2.1.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "sax": {
              "version": "1.2.4",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "semver": {
              "version": "5.7.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "set-blocking": {
              "version": "2.0.0",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "signal-exit": {
              "version": "3.0.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "string-width": {
              "version": "1.0.2",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "code-point-at": "^1.0.0",
                "is-fullwidth-code-point": "^1.0.0",
                "strip-ansi": "^3.0.0"
              }
            },
            "string_decoder": {
              "version": "1.1.1",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "safe-buffer": "~5.1.0"
              }
            },
            "strip-ansi": {
              "version": "3.0.1",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "ansi-regex": "^2.0.0"
              }
            },
            "strip-json-comments": {
              "version": "2.0.1",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "tar": {
              "version": "4.4.13",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "chownr": "^1.1.1",
                "fs-minipass": "^1.2.5",
                "minipass": "^2.8.6",
                "minizlib": "^1.2.1",
                "mkdirp": "^0.5.0",
                "safe-buffer": "^5.1.2",
                "yallist": "^3.0.3"
              }
            },
            "util-deprecate": {
              "version": "1.0.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "wide-align": {
              "version": "1.1.3",
              "bundled": true,
              "dev": true,
              "optional": true,
              "requires": {
                "string-width": "^1.0.2 || 2"
              }
            },
            "wrappy": {
              "version": "1.0.2",
              "bundled": true,
              "dev": true,
              "optional": true
            },
            "yallist": {
              "version": "3.1.1",
              "bundled": true,
              "dev": true,
              "optional": true
            }
          }
        },
        "is-absolute-url": {
          "version": "3.0.3",
          "resolved": "https://registry.npmjs.org/is-absolute-url/-/is-absolute-url-3.0.3.tgz",
          "integrity": "sha512-opmNIX7uFnS96NtPmhWQgQx6/NYFgsUXYMllcfzwWKUMwfo8kku1TvE6hkNcH+Q1ts5cMVrsY7j0bxXQDciu9Q==",
          "dev": true
        },
        "is-binary-path": {
          "version": "1.0.1",
          "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-1.0.1.tgz",
          "integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",
          "dev": true,
          "requires": {
            "binary-extensions": "^1.0.0"
          }
        },
        "is-number": {
          "version": "3.0.0",
          "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",
          "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
          "dev": true,
          "requires": {
            "kind-of": "^3.0.2"
          }
        },
        "kind-of": {
          "version": "3.2.2",
          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",
          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
          "dev": true,
          "requires": {
            "is-buffer": "^1.1.5"
          }
        },
        "readdirp": {
          "version": "2.2.1",
          "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-2.2.1.tgz",
          "integrity": "sha512-1JU/8q+VgFZyxwrJ+SVIOsh+KywWGpds3NTqikiKpDMZWScmAYyKIgqkO+ARvNWJfXeXR1zxz7aHF4u4CyH6vQ==",
          "dev": true,
          "requires": {
            "graceful-fs": "^4.1.11",
            "micromatch": "^3.1.10",
            "readable-stream": "^2.0.2"
          }
        },
        "supports-color": {
          "version": "6.1.0",
          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",
          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",
          "dev": true,
          "requires": {
            "has-flag": "^3.0.0"
          }
        },
        "to-regex-range": {
          "version": "2.1.1",
          "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz",
          "integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",
          "dev": true,
          "requires": {
            "is-number": "^3.0.0",
            "repeat-string": "^1.6.1"
          }
        }
      }
    },
    "webpack-log": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/webpack-log/-/webpack-log-2.0.0.tgz",
      "integrity": "sha512-cX8G2vR/85UYG59FgkoMamwHUIkSSlV3bBMRsbxVXVUk2j6NleCKjQ/WE9eYg9WY4w25O9w8wKP4rzNZFmUcUg==",
      "dev": true,
      "requires": {
        "ansi-colors": "^3.0.0",
        "uuid": "^3.3.2"
      },
      "dependencies": {
        "uuid": {
          "version": "3.4.0",
          "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
          "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
          "dev": true
        }
      }
    },
    "webpack-merge": {
      "version": "4.2.2",
      "resolved": "https://registry.npmjs.org/webpack-merge/-/webpack-merge-4.2.2.tgz",
      "integrity": "sha512-TUE1UGoTX2Cd42j3krGYqObZbOD+xF7u28WB7tfUordytSjbWTIjK/8V0amkBfTYN4/pB/GIDlJZZ657BGG19g==",
      "dev": true,
      "requires": {
        "lodash": "^4.17.15"
      }
    },
    "webpack-sources": {
      "version": "1.4.3",
      "resolved": "https://registry.npmjs.org/webpack-sources/-/webpack-sources-1.4.3.tgz",
      "integrity": "sha512-lgTS3Xhv1lCOKo7SA5TjKXMjpSM4sBjNV5+q2bqesbSPs5FjGmU6jjtBSkX9b4qW87vDIsCIlUPOEhbZrMdjeQ==",
      "dev": true,
      "requires": {
        "source-list-map": "^2.0.0",
        "source-map": "~0.6.1"
      },
      "dependencies": {
        "source-map": {
          "version": "0.6.1",
          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
          "dev": true
        }
      }
    },
    "webpack-subresource-integrity": {
      "version": "1.3.4",
      "resolved": "https://registry.npmjs.org/webpack-subresource-integrity/-/webpack-subresource-integrity-1.3.4.tgz",
      "integrity": "sha512-6XbGYzjh30cGQT/NsC+9IAkJP8IL7/t47sbwR5DLSsamiD56Rwv4/+hsgEHsviPvrEFZ0JRAQtCRN3UsR2Pw9g==",
      "dev": true,
      "requires": {
        "webpack-sources": "^1.3.0"
      }
    },
    "websocket": {
      "version": "1.0.31",
      "resolved": "https://registry.npmjs.org/websocket/-/websocket-1.0.31.tgz",
      "integrity": "sha512-VAouplvGKPiKFDTeCCO65vYHsyay8DqoBSlzIO3fayrfOgU94lQN5a1uWVnFrMLceTJw/+fQXR5PGbUVRaHshQ==",
      "requires": {
        "debug": "^2.2.0",
        "es5-ext": "^0.10.50",
        "nan": "^2.14.0",
        "typedarray-to-buffer": "^3.1.5",
        "yaeti": "^0.0.6"
      },
      "dependencies": {
        "debug": {
          "version": "2.6.9",
          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
          "requires": {
            "ms": "2.0.0"
          }
        },
        "ms": {
          "version": "2.0.0",
          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
        }
      }
    },
    "websocket-driver": {
      "version": "0.7.3",
      "resolved": "https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.7.3.tgz",
      "integrity": "sha512-bpxWlvbbB459Mlipc5GBzzZwhoZgGEZLuqPaR0INBGnPAY1vdBX6hPnoFXiw+3yWxDuHyQjO2oXTMyS8A5haFg==",
      "requires": {
        "http-parser-js": ">=0.4.0 <0.4.11",
        "safe-buffer": ">=5.1.0",
        "websocket-extensions": ">=0.1.1"
      }
    },
    "websocket-extensions": {
      "version": "0.1.3",
      "resolved": "https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.3.tgz",
      "integrity": "sha512-nqHUnMXmBzT0w570r2JpJxfiSD1IzoI+HGVdd3aZ0yNi3ngvQ4jv1dtHt5VGxfI2yj5yqImPhOK4vmIh2xMbGg=="
    },
    "whatwg-fetch": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-fetch/-/whatwg-fetch-3.0.0.tgz",
      "integrity": "sha512-9GSJUgz1D4MfyKU7KRqwOjXCXTqWdFNvEr7eUBYchQiVc744mqK/MzXPNR2WsPkmkOa4ywfg8C2n8h+13Bey1Q=="
    },
    "when": {
      "version": "3.6.4",
      "resolved": "https://registry.npmjs.org/when/-/when-3.6.4.tgz",
      "integrity": "sha1-RztRfsFZ4rhQBUl6E5g/CVQS404=",
      "dev": true
    },
    "which": {
      "version": "1.3.1",
      "resolved": "https://registry.npmjs.org/which/-/which-1.3.1.tgz",
      "integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",
      "dev": true,
      "requires": {
        "isexe": "^2.0.0"
      }
    },
    "which-module": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz",
      "integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho=",
      "dev": true
    },
    "window-size": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/window-size/-/window-size-0.2.0.tgz",
      "integrity": "sha1-tDFbtCFKPXBY6+7okuE/ok2YsHU=",
      "dev": true
    },
    "wordwrap": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.3.tgz",
      "integrity": "sha1-o9XabNXAvAAI03I0u68b7WMFkQc=",
      "dev": true
    },
    "worker-farm": {
      "version": "1.7.0",
      "resolved": "https://registry.npmjs.org/worker-farm/-/worker-farm-1.7.0.tgz",
      "integrity": "sha512-rvw3QTZc8lAxyVrqcSGVm5yP/IJ2UcB3U0graE3LCFoZ0Yn2x4EoVSqJKdB/T5M+FLcRPjz4TDacRf3OCfNUzw==",
      "dev": true,
      "requires": {
        "errno": "~0.1.7"
      }
    },
    "worker-plugin": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/worker-plugin/-/worker-plugin-3.2.0.tgz",
      "integrity": "sha512-W5nRkw7+HlbsEt3qRP6MczwDDISjiRj2GYt9+bpe8A2La00TmJdwzG5bpdMXhRt1qcWmwAvl1TiKaHRa+XDS9Q==",
      "dev": true,
      "requires": {
        "loader-utils": "^1.1.0"
      }
    },
    "wrap-ansi": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-2.1.0.tgz",
      "integrity": "sha1-2Pw9KE3QV5T+hJc8rs3Rz4JP3YU=",
      "requires": {
        "string-width": "^1.0.1",
        "strip-ansi": "^3.0.1"
      },
      "dependencies": {
        "is-fullwidth-code-point": {
          "version": "1.0.0",
          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
          "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
          "requires": {
            "number-is-nan": "^1.0.0"
          }
        },
        "string-width": {
          "version": "1.0.2",
          "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
          "integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",
          "requires": {
            "code-point-at": "^1.0.0",
            "is-fullwidth-code-point": "^1.0.0",
            "strip-ansi": "^3.0.0"
          }
        }
      }
    },
    "wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8="
    },
    "ws": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/ws/-/ws-6.2.1.tgz",
      "integrity": "sha512-GIyAXC2cB7LjvpgMt9EKS2ldqr0MTrORaleiOno6TweZ6r3TKtoFQWay/2PceJ3RuBasOHzXNn5Lrw1X0bEjqA==",
      "dev": true,
      "requires": {
        "async-limiter": "~1.0.0"
      }
    },
    "xhr": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/xhr/-/xhr-2.5.0.tgz",
      "integrity": "sha512-4nlO/14t3BNUZRXIXfXe+3N6w3s1KoxcJUUURctd64BLRe67E4gRwp4PjywtDY72fXpZ1y6Ch0VZQRY/gMPzzQ==",
      "requires": {
        "global": "~4.3.0",
        "is-function": "^1.0.1",
        "parse-headers": "^2.0.0",
        "xtend": "^4.0.0"
      }
    },
    "xhr-request": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/xhr-request/-/xhr-request-1.1.0.tgz",
      "integrity": "sha512-Y7qzEaR3FDtL3fP30k9wO/e+FBnBByZeybKOhASsGP30NIkRAAkKD/sCnLvgEfAIEC1rcmK7YG8f4oEnIrrWzA==",
      "requires": {
        "buffer-to-arraybuffer": "^0.0.5",
        "object-assign": "^4.1.1",
        "query-string": "^5.0.1",
        "simple-get": "^2.7.0",
        "timed-out": "^4.0.1",
        "url-set-query": "^1.0.0",
        "xhr": "^2.0.4"
      },
      "dependencies": {
        "query-string": {
          "version": "5.1.1",
          "resolved": "https://registry.npmjs.org/query-string/-/query-string-5.1.1.tgz",
          "integrity": "sha512-gjWOsm2SoGlgLEdAGt7a6slVOk9mGiXmPFMqrEhLQ68rhQuBnpfs3+EmlvqKyxnCo9/PPlF+9MtY02S1aFg+Jw==",
          "requires": {
            "decode-uri-component": "^0.2.0",
            "object-assign": "^4.1.0",
            "strict-uri-encode": "^1.0.0"
          }
        }
      }
    },
    "xhr-request-promise": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/xhr-request-promise/-/xhr-request-promise-0.1.2.tgz",
      "integrity": "sha1-NDxE0e53JrhkgGloLQ+EDIO0Jh0=",
      "requires": {
        "xhr-request": "^1.0.1"
      }
    },
    "xhr2-cookies": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/xhr2-cookies/-/xhr2-cookies-1.1.0.tgz",
      "integrity": "sha1-fXdEnQmZGX8VXLc7I99yUF7YnUg=",
      "requires": {
        "cookiejar": "^2.1.1"
      }
    },
    "xml2js": {
      "version": "0.4.23",
      "resolved": "https://registry.npmjs.org/xml2js/-/xml2js-0.4.23.tgz",
      "integrity": "sha512-ySPiMjM0+pLDftHgXY4By0uswI3SPKLDw/i3UXbnO8M/p28zqexCUoPmQFrYD+/1BzhGJSs2i1ERWKJAtiLrug==",
      "dev": true,
      "requires": {
        "sax": ">=0.6.0",
        "xmlbuilder": "~11.0.0"
      }
    },
    "xmlbuilder": {
      "version": "11.0.1",
      "resolved": "https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-11.0.1.tgz",
      "integrity": "sha512-fDlsI/kFEx7gLvbecc0/ohLG50fugQp8ryHzMTuW9vSa1GJ0XYWKnhsUx7oie3G98+r56aTQIUB4kht42R3JvA==",
      "dev": true
    },
    "xmlhttprequest": {
      "version": "1.8.0",
      "resolved": "https://registry.npmjs.org/xmlhttprequest/-/xmlhttprequest-1.8.0.tgz",
      "integrity": "sha1-Z/4HXFwk/vOfnWX197f+dRcZaPw="
    },
    "xmlhttprequest-ssl": {
      "version": "1.5.5",
      "resolved": "https://registry.npmjs.org/xmlhttprequest-ssl/-/xmlhttprequest-ssl-1.5.5.tgz",
      "integrity": "sha1-wodrBhaKrcQOV9l+gRkayPQ5iz4=",
      "dev": true
    },
    "xtend": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
      "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ=="
    },
    "y18n": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/y18n/-/y18n-4.0.0.tgz",
      "integrity": "sha512-r9S/ZyXu/Xu9q1tYlpsLIsa3EeLXXk0VwlxqTcFRfg9EhMW+17kbt9G0NrgCmhGb5vT2hyhJZLfDGx+7+5Uj/w==",
      "dev": true
    },
    "yaeti": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/yaeti/-/yaeti-0.0.6.tgz",
      "integrity": "sha1-8m9ITXJoTPQr7ft2lwqhYI+/lXc="
    },
    "yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==",
      "dev": true
    },
    "yargs": {
      "version": "12.0.5",
      "resolved": "https://registry.npmjs.org/yargs/-/yargs-12.0.5.tgz",
      "integrity": "sha512-Lhz8TLaYnxq/2ObqHDql8dX8CJi97oHxrjUcYtzKbbykPtVW9WB+poxI+NM2UIzsMgNCZTIf0AQwsjK5yMAqZw==",
      "dev": true,
      "requires": {
        "cliui": "^4.0.0",
        "decamelize": "^1.2.0",
        "find-up": "^3.0.0",
        "get-caller-file": "^1.0.1",
        "os-locale": "^3.0.0",
        "require-directory": "^2.1.1",
        "require-main-filename": "^1.0.1",
        "set-blocking": "^2.0.0",
        "string-width": "^2.0.0",
        "which-module": "^2.0.0",
        "y18n": "^3.2.1 || ^4.0.0",
        "yargs-parser": "^11.1.1"
      }
    },
    "yargs-parser": {
      "version": "11.1.1",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-11.1.1.tgz",
      "integrity": "sha512-C6kB/WJDiaxONLJQnF8ccx9SEeoTTLek8RVbaOIsrAUS8VrBEXfmeSnCZxygc+XC2sNMBIwOOnfcxiynjHsVSQ==",
      "dev": true,
      "requires": {
        "camelcase": "^5.0.0",
        "decamelize": "^1.2.0"
      }
    },
    "yauzl": {
      "version": "2.10.0",
      "resolved": "https://registry.npmjs.org/yauzl/-/yauzl-2.10.0.tgz",
      "integrity": "sha1-x+sXyT4RLLEIb6bY5R+wZnt5pfk=",
      "requires": {
        "buffer-crc32": "~0.2.3",
        "fd-slicer": "~1.1.0"
      }
    },
    "yeast": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/yeast/-/yeast-0.1.2.tgz",
      "integrity": "sha1-AI4G2AlDIMNy28L47XagymyKxBk=",
      "dev": true
    },
    "yn": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yn/-/yn-3.1.1.tgz",
      "integrity": "sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==",
      "dev": true
    },
    "zone.js": {
      "version": "0.10.2",
      "resolved": "https://registry.npmjs.org/zone.js/-/zone.js-0.10.2.tgz",
      "integrity": "sha512-UAYfiuvxLN4oyuqhJwd21Uxb4CNawrq6fPS/05Su5L4G+1TN+HVDJMUHNMobVQDFJRir2cLAODXwluaOKB7HFg=="
    }
  }
}

'''
'''--- package.json ---
{
    "name": "arweave-ng",
    "version": "0.0.0",
    "scripts": {
        "ng": "ng",
        "start": "ng serve",
        "build": "ng build",
        "test": "ng test",
        "lint": "ng lint",
        "e2e": "ng e2e",
        "setenv:win": "echo copy/paste the following line in console before launching truffle: 'for /F \"delims=;\" %I in (./.secrets) do @call set \"%I\"'"
    },
    "private": true,
    "dependencies": {
        "@angular/animations": "^9.0.6",
        "@angular/cdk": "^9.1.3",
        "@angular/common": "~9.0.6",
        "@angular/compiler": "~9.0.6",
        "@angular/core": "~9.0.6",
        "@angular/fire": "^5.4.2",
        "@angular/flex-layout": "^9.0.0-beta.29",
        "@angular/forms": "~9.0.6",
        "@angular/material": "^9.1.3",
        "@angular/platform-browser": "~9.0.6",
        "@angular/platform-browser-dynamic": "~9.0.6",
        "@angular/router": "~9.0.6",
        "@ng-select/ng-select": "^3.7.3",
        "@types/crypto-js": "^3.1.43",
        "@types/uuid": "^7.0.2",
        "arql-ops": "^1.0.0",
        "arweave": "^1.6.0",
        "bignumber.js": "^9.0.0",
        "chai": "^4.2.0",
        "chai-as-promised": "^7.1.1",
        "crypto-js": "^4.0.0",
        "file-saver": "^2.0.2",
        "firebase": "^7.13.1",
        "fs": "0.0.1-security",
        "http-status-codes": "^1.4.0",
        "nearlib": "^0.22.0",
        "ngx-filesaver": "^8.1.0",
        "ngx-material-file-input": "^2.1.1",
        "rxjs": "~6.5.4",
        "truffle-hdwallet-provider": "^1.0.17",
        "tslib": "^1.10.0",
        "uuid": "^7.0.2",
        "web3": "^1.2.6",
        "zone.js": "~0.10.2"
    },
    "devDependencies": {
        "@angular-builders/custom-webpack": "^9.0.0",
        "@angular-devkit/build-angular": "^0.900.7",
        "@angular/cli": "~9.0.6",
        "@angular/compiler-cli": "~9.0.6",
        "@angular/language-service": "~9.0.6",
        "@types/jasmine": "~3.5.0",
        "@types/jasminewd2": "~2.0.3",
        "@types/node": "^12.11.1",
        "codelyzer": "^5.1.2",
        "jasmine-core": "~3.5.0",
        "jasmine-spec-reporter": "~4.2.1",
        "karma": "~4.3.0",
        "karma-chrome-launcher": "~3.1.0",
        "karma-coverage-istanbul-reporter": "~2.1.0",
        "karma-jasmine": "~2.0.1",
        "karma-jasmine-html-reporter": "^1.4.2",
        "lite-server": "^2.5.4",
        "protractor": "~5.4.3",
        "ts-node": "~8.3.0",
        "tslint": "~5.18.0",
        "typescript": "~3.7.5"
    }
}

'''
'''--- src/app/_helpers/Hasher.ts ---
import sha256 from 'crypto-js/sha256';
import Base64 from 'crypto-js/enc-base64';

var decoder = new TextDecoder("utf-8");

function ab2str(buf) {
    return decoder.decode(new Uint8Array(buf));
}
export class Hasher {
  public static async computeHash(data: string): Promise<string> {
    return Base64.stringify(sha256(data));
  }
  public static async computeHashFromAB(data: ArrayBuffer): Promise<string> {
    return Base64.stringify(sha256(ab2str(data)));
  }
}

'''
'''--- src/app/_helpers/WindowRef.ts ---
import { Injectable } from '@angular/core';

function _window() : any {
   // return the global native browser window object
   return window;
}

@Injectable()
export class WindowRef {
   get nativeWindow(): any {
      return _window();
   }
}

'''
'''--- src/app/_helpers/auth.guard.ts ---
import { Injectable } from '@angular/core';
import { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';
import { ArweaveService } from '../arweave/arweave.service';
import { EthService } from '../ethereum/eth.service';
import { Observable } from 'rxjs';
import { AuthenticateService } from '../authenticate/authenticate.service';

@Injectable({ providedIn: 'root' })
export class AuthGuard implements CanActivate {
    constructor(
        private router: Router,
        private authenticateService: AuthenticateService
    ) {}

    // public async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {
    //   return new Promise<boolean>((resolve, reject) => {
    //     console.log("canActivate ?");
    //     this.authenticateService.isAuthenticated().subscribe((isAuth) => {
    //       console.log("canActivate:", isAuth);
    //       if (!isAuth) {
    //         // console.log("canActivate: false", "arweave:", this.arweaveService.authenticated, "eth:", this.eth.authenticated);
    //         // not logged in so redirect to login page with the return url
    //         this.router.navigate(['/authenticate'], { queryParams: { returnUrl: state.url }});
    //       }
    //       resolve(isAuth);
    //     }, (err) => reject(err));
    //   });
    // }

    public canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {
      console.log("canActivate ?");
      const isAuth = this.authenticateService.authenticated;
      console.log("canActivate:", isAuth);
      if (!isAuth) {
        // console.log("canActivate: false", "arweave:", this.arweaveService.authenticated, "eth:", this.eth.authenticated);
        // not logged in so redirect to login page with the return url
        this.router.navigate(['/authenticate'], { queryParams: { returnUrl: state.url }});
      }
      return isAuth;
    }
  }

'''
'''--- src/app/_helpers/crypto.ts ---

'''
'''--- src/app/_model/DocCollectionData.ts ---
import { v4 as uuid } from 'uuid';
import { DocMetaData } from './DocMetaData';

export enum eAccessType {
  PUBLIC = 'Public',
  RESTRICTED = 'Restricted'
}

export class DocCollectionData {
  protected _versions: Map<number, DocMetaData> = new Map();
  protected _title: string = '';
  protected _docId: string = '';
  protected _latestVersion: number = 0;
  protected _accessType: eAccessType;
  protected _accessKey: string = undefined;
  protected _subscriptionFee: number;
  protected _authorEthAccount: string;
  protected _authorizedAccounts: string[];

  public constructor(title: string, docId?: string) {
    this._title = title;
    if (!docId) {
      docId = uuid();
    }
    this._docId = docId;
  }

  public addVersion(docMetaData: DocMetaData) {
    this._versions.set(docMetaData.version, docMetaData);
    this._latestVersion = Math.max(this._latestVersion, docMetaData.version);
    console.log("latest version -> ", this._latestVersion);
  }

  public get docId(): string {
    return this._docId;
  }

  public get title(): string {
    return this._title;
  }

  public get latestVersion(): number {
    return this._latestVersion;
  }

  public get accessKey(): string {
    return this._accessKey;
  }

  public set accessKey(value: string) {
    this._accessKey = value;
  }

  public get subscriptionFee(): number {
    return this._subscriptionFee;
  }

  public set subscriptionFee(value: number) {
    this._subscriptionFee = value;
  }

  public get authorEthAccount(): string {
    return this._authorEthAccount;
  }

  public set authorEthAccount(value: string) {
    this._authorEthAccount = value;
  }

  public get authorizedAccounts(): string[] {
    return this._authorizedAccounts;
  }

  public set authorizedAccounts(value: string[]) {
    this._authorizedAccounts = value;
  }

  public get versions(): number[] {
    return Array.from(this._versions.keys()).sort((n1,n2) => n1 - n2);
  }

  public get accessType(): eAccessType {
    return this._accessType;
  }

  public set accessType(value: eAccessType) {
    this._accessType = value;
  }

  public getDataForVersion(version: number): DocMetaData {
    return this._versions.get(version);
  }

  public hasVersion(version: number): boolean {
    return this._versions.has(version);
  }

  public getDataForLatestVersion(): DocMetaData {
    return this._versions.get(this._latestVersion);
  }

}

'''
'''--- src/app/_model/DocInstance.ts ---
import { Hasher } from '../_helpers/Hasher';

export class DocInstance {
  private _fileContent: ArrayBuffer = undefined;
  private _hash: string = '';
  private _lastModified: number = -1;

  constructor() {}

  public readFromFile(file: File, onCompleted?: (result: boolean) => void) {
    const fileReader: FileReader = new FileReader();
    this._lastModified = file.lastModified;
    const self = this;
    fileReader.onloadend = (x) => {
      self._fileContent = fileReader.result as ArrayBuffer;
      Hasher.computeHashFromAB(self._fileContent).then((hash) => {
        self._hash = hash;
        if (onCompleted) {
          onCompleted(true);
        }
      }).catch((err) => {
        console.error(err);
        if (onCompleted) {
          onCompleted(false);
        }
      });
    };
    fileReader.readAsArrayBuffer(file);
  }

  public get hash(): string {
    return this._hash;
  }

  public get content(): ArrayBuffer {
    return this._fileContent;
  }

  public get lastModified(): number {
    return this._lastModified;
  }

}

'''
'''--- src/app/_model/DocMetaData.ts ---
import { v4 as uuid } from 'uuid';
import Transaction from 'arweave/web/lib/transaction';
import { eDataField } from '../arweave/constants';
import { ArweaveService } from '../arweave/arweave.service';
import { last } from 'rxjs/operators';

export enum eDocumentUploadingStatus {
  UNKNOWN = 'unknown',
  PENDING = 'Pending',
  CONFIRMED = 'Confirmed',
  FAILED = 'Failed'
}

export class DocMetaData {
  protected _txId: string = '';
  protected _author: string = '';
  protected _title: string = '';
  protected _description: string = '';
  protected _keywords: string[] = [];
  protected _references: Map<string, string> = new Map(); // reference url indexed by reference hash
  protected _version: number = 0;
  protected _docId: string = '';
  protected _hash: string = '';
  protected _uploadingStatus: eDocumentUploadingStatus = eDocumentUploadingStatus.UNKNOWN;
  protected _lastModified = -1;
  protected _datePublication = -1;

  public constructor(
    docId: string,
    author: string,
    title: string,
    version: number,
    hash: string,
    description: string,
    lastModified: number,
    datePublication: number) {
    this._docId = ( docId && ( docId !== '') ) ? docId : uuid();
    this._author = author;
    this._title = title;
    this._version = version;
    this._hash = hash;
    this._description = description;
    this._lastModified = lastModified;
    this._datePublication = datePublication;
  }

  public get txId(): string {
    return this._txId;
  }

  public set txId(value: string) {
    this._txId = value;
  }

  public static fromTransation(tx: Transaction, tags?: Map<eDataField, string>): DocMetaData {
    if (!tags) {
      tags = ArweaveService.getTxTags(tx);
    }
    const docId = tags.get(eDataField.DOC_ID);
    const author = tags.get(eDataField.AUTHOR);
    const title = tags.get(eDataField.TITLE);
    const description = tags.get(eDataField.DESCRIPTION);
    const version: number = +tags.get(eDataField.VERSION);
    const hash = tags.get(eDataField.HASH);
    const lastModified: number = +tags.get(eDataField.LAST_MODIFIED);
    const datePublication: number = +tags.get(eDataField.DATE_PUBLISH);
    const metaData = new DocMetaData(docId, author, title, version, hash, description, lastModified, datePublication);
    metaData.uploadingStatus = eDocumentUploadingStatus.CONFIRMED;

    return metaData;
  }

  public get author(): string {
    return this._author;
  }

  public get title(): string {
    return this._title;
  }

  public get docId(): string {
    return this._docId;
  }

  public get hash() {
    return this._hash;
  }

  public get version(): number {
    return this._version;
  }

  public get description(): string {
    return this._description;
  }

  public get uploadingStatus(): eDocumentUploadingStatus {
    return this._uploadingStatus;
  }

  public set uploadingStatus(value: eDocumentUploadingStatus) {
    this._uploadingStatus = value;
  }

  public get lastModified(): number {
    return this._lastModified;
  }

  public get datePublication(): number {
    return this._datePublication;
  }

  public addKeyword(keyword: string) {
    if (this._keywords.indexOf(keyword) === -1) {
      this._keywords.push(keyword);
    }
  }

  public addReference(hash: string, uri: string) {
    if (! this._references.has(hash)) {
      this._references.set(hash, uri);
    }
  }

  public removeReference(hash: string) {
    throw Error("not implemented yet");
  }

}

'''
'''--- src/app/_model/DocVersion.ts ---
export class DocVersion {
  private _creationDate: number = Date.now();
  private _txId: string;
  private _hash: string;

  public constructor(txId: string, hash: string) {
    this._txId = txId;
    this._hash = hash;
  }

  public get txId(): string {
    return this._txId;
  }

  public get creationDate(): number {
    return this._creationDate;
  }

  public get hash(): string {
    return this._hash;
  }
}

'''
'''--- src/app/_model/Document.ts ---
export class Document {

}

'''
'''--- src/app/app-routing.module.ts ---
import { NgModule } from '@angular/core';
import { Routes, RouterModule } from '@angular/router';
import { MyDocumentsComponent } from './components/routes/my-documents/my-documents.component';
import { AuthenticateComponent } from './components/routes/authenticate/authenticate.component';
import { AuthGuard } from './_helpers/auth.guard';
import { PublishComponent } from './components/routes/publish/publish.component';
import { DocCheckerComponent } from './components/routes/doc-checker/doc-checker.component';
import { SearchComponent } from './components/routes/search/search.component';
import { HomeComponent } from './components/routes/home/home.component';
import { DownloadComponent } from './components/routes/download/download.component';
import { AccessCtrlComponent } from './components/routes/access-ctrl/access-ctrl.component';
import { HelpComponent } from './components/routes/help/help.component';

const commonChildren = [
  {path: 'download', outlet: 'download', component: DownloadComponent},
  {path: 'accessCtrl', outlet: 'accessCtrl', component: AccessCtrlComponent},
  {path: 'publish', outlet: 'publish', component: PublishComponent}
];

const routes: Routes = [
  { path: 'authenticate',
    component: AuthenticateComponent },
  { path: 'mydocuments',
    component: MyDocumentsComponent, canActivate: [AuthGuard],
    children: commonChildren},
  { path: 'check',
    component: DocCheckerComponent, canActivate: [AuthGuard],
    children: commonChildren},
  { path: 'search',
    component: SearchComponent, canActivate: [AuthGuard],
    children: commonChildren},
  { path: 'publish',
    component: PublishComponent, canActivate: [AuthGuard] },
  { path: 'help',
    component: HelpComponent,
    children: commonChildren},
  { path: '',
    component: HomeComponent,
    children: commonChildren},
  { path: '**',
    children: commonChildren}
];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class AppRoutingModule { }

'''
'''--- src/app/app.component.html ---
<!-- Toolbar -->
<app-navbar class="top-navbar"></app-navbar>

<app-left-menu-bar class="left-menubar"></app-left-menu-bar>

<div class="main-content">
    <router-outlet name="download"></router-outlet>
    <router-outlet name="publish"></router-outlet>
    <router-outlet name="accessCtrl"></router-outlet>
    <router-outlet></router-outlet>
</div>
'''
'''--- src/app/app.component.spec.ts ---
import { TestBed, async } from '@angular/core/testing';
import { RouterTestingModule } from '@angular/router/testing';
import { AppComponent } from './app.component';

describe('AppComponent', () => {
  beforeEach(async(() => {
    TestBed.configureTestingModule({
      imports: [
        RouterTestingModule
      ],
      declarations: [
        AppComponent
      ],
    }).compileComponents();
  }));

  it('should create the app', () => {
    const fixture = TestBed.createComponent(AppComponent);
    const app = fixture.componentInstance;
    expect(app).toBeTruthy();
  });

  it(`should have as title 'arweave-ng'`, () => {
    const fixture = TestBed.createComponent(AppComponent);
    const app = fixture.componentInstance;
    expect(app.title).toEqual('arweave-ng');
  });

  it('should render title', () => {
    const fixture = TestBed.createComponent(AppComponent);
    fixture.detectChanges();
    const compiled = fixture.nativeElement;
    expect(compiled.querySelector('.content span').textContent).toContain('arweave-ng app is running!');
  });
});

'''
'''--- src/app/app.component.ts ---
import { Component, OnInit, NgZone, OnDestroy } from '@angular/core';
import { EthService } from './ethereum/eth.service';
import { Observable, interval } from 'rxjs';
import contractData from '../../build/contracts/DVSRegistry.json';
import { Contract } from 'web3-eth-contract';
import { DVSRegistry } from './ethereum/DVSRegistry';
import { FileUploadAction } from './components/material-file-upload/material-file-upload.component';
import { MatDialog, MatDialogConfig } from '@angular/material/dialog';
import { DocumentUploadFormComponent } from './components/document-upload-form/document-upload-form.component';
import { ArweaveService } from './arweave/arweave.service';
import { DocMetaData } from './_model/DocMetaData';
import { DocVersion } from './_model/DocVersion';
import { DocInstance } from './_model/DocInstance';
import { TransactionsService, eTransationStatus } from './arweave/transactions.service';
import { startWith, switchMap } from 'rxjs/operators';
import { LibraryService } from './library/library.service';
import { DocCollectionData } from './_model/DocCollectionData';
import { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component';
import { DvsService } from './ethereum/dvs.service';
import { NearService } from './near/near.service';

function strEncodeUTF16(str) {
  var buf = new ArrayBuffer(str.length*2);
  var bufView = new Uint16Array(buf);
  for (var i=0, strLen=str.length; i < strLen; i++) {
    bufView[i] = str.charCodeAt(i);
  }
  return bufView;
}
@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.scss']
})
export class AppComponent implements OnInit, OnDestroy {
  title = 'DecentraDocs';

  constructor() {}

  ngOnInit() {

  }

  ngOnDestroy() {
  }

}

'''
'''--- src/app/app.module.ts ---
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { MatIconModule } from '@angular/material/icon';
import { MatProgressBarModule } from '@angular/material/progress-bar';
import { MatInputModule } from '@angular/material/input';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MaterialFileInputModule } from 'ngx-material-file-input';
import { FormsModule, FormBuilder, ReactiveFormsModule } from '@angular/forms';
import { FileSaverModule } from 'ngx-filesaver';
import { MatSidenavModule } from '@angular/material/sidenav';
import { MatStepperModule } from '@angular/material/stepper';
import { FlexLayoutModule } from '@angular/flex-layout';
import { MatSelectModule } from '@angular/material/select';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { MatChipsModule } from '@angular/material/chips';
import { MatListModule } from '@angular/material/list';
import { MatBadgeModule } from '@angular/material/badge';
import { MatTooltipModule } from '@angular/material/tooltip';
import { MatExpansionModule } from '@angular/material/expansion';
import { MatSnackBarModule } from '@angular/material/snack-bar';
import { MatMenuModule } from '@angular/material/menu';
import { MatRadioModule } from '@angular/material/radio';
import { NgSelectModule } from '@ng-select/ng-select';
import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';
import { MatButtonModule } from '@angular/material/button';

import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { EthereumModule } from './ethereum/eth.module';
import { ArweaveModule } from './arweave/arweave.module';
import { MaterialFileUploadComponent } from './components/material-file-upload/material-file-upload.component';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { ArweaveConnectComponent } from './components/arweave-connect/arweave-connect.component';
import { WindowRef } from './_helpers/WindowRef';
import { DocumentUploadFormComponent } from './components/document-upload-form/document-upload-form.component';
import { MatDialogModule } from '@angular/material/dialog';
import { HttpClientModule } from '@angular/common/http';
import { MatSlideToggleModule } from '@angular/material/slide-toggle';
import { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component';
import { NavbarComponent } from './components/navbar/navbar.component';
import { ProfileDetailsComponent } from './components/profile-details/profile-details.component';
import { LeftMenuBarComponent } from './components/left-menu-bar/left-menu-bar.component';
import { MyDocumentsComponent } from './components/routes/my-documents/my-documents.component';
import { SharedDocumentsComponent } from './components/routes/shared-documents/shared-documents.component';
import { DocCheckerComponent } from './components/routes/doc-checker/doc-checker.component';
import { SearchComponent } from './components/routes/search/search.component';
import { PublishComponent } from './components/routes/publish/publish.component';
import { AuthenticateComponent } from './components/routes/authenticate/authenticate.component';
import { EthereumConnectComponent } from './components/ethereum-connect/ethereum-connect.component';
import { HomeComponent } from './components/routes/home/home.component';
import { DocumentListComponent } from './components/document-list/document-list.component';
import { DocumentDetailsComponent, ReversePipe } from './components/document-details/document-details.component';
import { DocumentUploadComponent } from './components/document-upload/document-upload.component';
import { MaterialFileSelectComponent } from './components/material-file-select/material-file-select.component';
import { DownloadComponent } from './components/routes/download/download.component';
import { AccessCtrlComponent } from './components/routes/access-ctrl/access-ctrl.component';
import { AccessCtrlDialogComponent } from './components/access-ctrl-dialog/access-ctrl-dialog.component';
import { NearConnectComponent } from './components/near-connect/near-connect.component';
import { VersionControlComponent } from './components/help/version-control/version-control.component';
import { HelpComponent } from './components/routes/help/help.component';
import { CheckerComponent } from './components/help/checker/checker.component';
import { AccessControlComponent } from './components/help/access-control/access-control.component';
import { SubscriptionComponent } from './components/help/subscription/subscription.component';

@NgModule({
  declarations: [
    AppComponent,
    MaterialFileUploadComponent,
    ArweaveConnectComponent,
    DocumentUploadFormComponent,
    ConfirmDialogComponent,
    NavbarComponent,
    ProfileDetailsComponent,
    LeftMenuBarComponent,
    MyDocumentsComponent,
    SharedDocumentsComponent,
    DocCheckerComponent,
    SearchComponent,
    PublishComponent,
    AuthenticateComponent,
    EthereumConnectComponent,
    HomeComponent,
    DocumentListComponent,
    DocumentDetailsComponent,
    ReversePipe,
    DocumentUploadComponent,
    MaterialFileSelectComponent,
    DownloadComponent,
    AccessCtrlComponent,
    AccessCtrlDialogComponent,
    NearConnectComponent,
    VersionControlComponent,
    HelpComponent,
    CheckerComponent,
    AccessControlComponent,
    SubscriptionComponent
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    EthereumModule,
    ArweaveModule,
    MatIconModule,
    MatProgressBarModule,
    BrowserAnimationsModule,
    MatInputModule,
    MatFormFieldModule,
    MaterialFileInputModule,
    FormsModule,
    ReactiveFormsModule,
    MatDialogModule,
    FileSaverModule,
    HttpClientModule,
    MatSlideToggleModule,
    MatSidenavModule,
    MatStepperModule,
    FlexLayoutModule,
    MatSelectModule,
    MatCheckboxModule,
    MatChipsModule,
    MatListModule,
    MatBadgeModule,
    MatTooltipModule,
    MatExpansionModule,
    MatSnackBarModule,
    MatMenuModule,
    MatRadioModule,
    NgSelectModule,
    MatProgressSpinnerModule,
    MatButtonModule
  ],
  providers: [FormBuilder, WindowRef],
  bootstrap: [AppComponent],
  entryComponents: [
    DocumentUploadFormComponent,
    ConfirmDialogComponent
  ]
})
export class AppModule { }

'''
'''--- src/app/arweave/arweave.mock.ts ---
import Arweave, { CreateTransactionInterface } from 'arweave/web';
import { JWKInterface } from 'arweave/web/lib/wallet';
import Transaction from 'arweave/web/lib/transaction';
import { TransactionStatusResponse } from 'arweave/web/transactions';
import { ApiConfig } from 'arweave/web/lib/api';
import { AxiosResponse } from 'axios';

export interface IArweave {
  wallets: IWallets;
  transactions: ITransactions;
  createTransaction(attributes: Partial<CreateTransactionInterface>, jwk: JWKInterface): Promise<Transaction>;
  arql(query: object): Promise<string[]>;
}

export interface IWallets {
  jwkToAddress(jwk: JWKInterface): Promise<string>;
}

export interface ITransactions {
  get(id: string): Promise<Transaction>;
  search(tagName: string, tagValue: string): Promise<string[]>;
  getStatus(id: string): Promise<TransactionStatusResponse>;
  getData(id: string, options?: {
      decode?: boolean;
      string?: boolean;
  }): Promise<string | Uint8Array>;
  sign(transaction: Transaction, jwk: JWKInterface): Promise<void>;
  verify(transaction: Transaction): Promise<boolean>;
  post(transaction: Transaction | Buffer | string | object): Promise<AxiosResponse>;
}

export class FakeArweave implements IArweave {
  public static init(apiConfig: ApiConfig): IArweave {
    return new FakeArweave(apiConfig);
  }
  public constructor(params) {
    console.log('USE FAKE ARWEAVE FOR TESTING PURPOSE');
  }
  public get wallets(): IWallets {
    return {
      jwkToAddress: (jwk: JWKInterface) => {
        throw new Error('not implemented yet');
       }
    };
  }
  public get transactions(): ITransactions {
    return {
      get: (id: string) => {
        throw new Error('not implemented yet');
      },
      search: (tagName: string, tagValue: string) => {
        throw new Error('not implemented yet');
      },
      getStatus: (id: string) => {
        throw new Error('not implemented yet');
      },
      getData: (id: string, options?: {
          decode?: boolean;
          string?: boolean;
      }) => {
        throw new Error('not implemented yet');
      },
      sign: (transaction: Transaction, jwk: JWKInterface) => {
        throw new Error('not implemented yet');
      },
      verify: (transaction: Transaction) => {
        throw new Error('not implemented yet');
      },
      post: (transaction: Transaction | Buffer | string | object) => {
        throw new Error('not implemented yet');
      }
    };
  }
  public createTransaction(attributes: Partial<CreateTransactionInterface>, jwk: JWKInterface): Promise<Transaction> {
    throw new Error("Method not implemented.");
  }
  public arql(query: object): Promise<string[]> {
    throw new Error("Method not implemented.");
  }

}

export class RealArweave implements IArweave {
  private _arweave: Arweave;
  public static init(apiConfig: ApiConfig): IArweave {
    return Arweave.init(apiConfig);
  }
  public get wallets(): IWallets {
    return this._arweave.wallets;
  }
  public get transactions(): ITransactions {
    return this._arweave.transactions;
  }
  public createTransaction(attributes: Partial<CreateTransactionInterface>, jwk: JWKInterface): Promise<Transaction> {
    return this._arweave.createTransaction(attributes, jwk);
  }
  public arql(query: object): Promise<string[]> {
    return this._arweave.arql(query);
  }
}

'''
'''--- src/app/arweave/arweave.module.ts ---
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ArweaveService } from './arweave.service';

@NgModule({
  declarations: [],
  imports: [
    CommonModule
  ],
  providers: [
    ArweaveService
  ]
})
export class ArweaveModule { }

'''
'''--- src/app/arweave/arweave.service.spec.ts ---
import { TestBed } from '@angular/core/testing';

import { ArweaveService } from './arweave.service';

describe('ArweaveService', () => {
  let service: ArweaveService;

  beforeEach(() => {
    TestBed.configureTestingModule({});
    service = TestBed.inject(ArweaveService);
  });

  it('should be created', () => {
    expect(service).toBeTruthy();
  });
});

'''
'''--- src/app/arweave/arweave.service.ts ---
import { v4 as uuid } from 'uuid';
import { Injectable, EventEmitter } from '@angular/core';
import Arweave, { Config, CreateTransactionInterface } from 'arweave/web';
import Transaction from 'arweave/web/lib/transaction';
import { DocInstance } from '../_model/DocInstance';
import { DocMetaData } from '../_model/DocMetaData';
import { JWKInterface } from 'arweave/web/lib/wallet';
import { DocVersion } from '../_model/DocVersion';
import { FileSaverService } from 'ngx-filesaver';
import { Hasher } from '../_helpers/Hasher';
import Api, { ApiConfig } from 'arweave/web/lib/api';
import Wallets from 'arweave/web/wallets';
import Transactions, { TransactionStatusResponse } from 'arweave/web/transactions';
import Network, { NetworkInfoInterface } from 'arweave/web/network';
import Ar from 'arweave/web/ar';
import Silo from 'arweave/web/silo';
import CryptoInterface from 'arweave/web/lib/crypto/crypto-interface';
import { APP_NAME, APP_VERSION, ArQueries, eDataType, eDataField, eLocalStorageDataKey } from './constants';
import { LibraryService } from '../library/library.service';
import { ArqlOp } from 'arql-ops';
import { IArweave, FakeArweave } from './arweave.mock';
import { DvsService } from '../ethereum/dvs.service';
import { IDecentraDocsContract } from '../blockchain/IDecentraDocsContract';
import { BehaviorSubject, Observable } from 'rxjs';

// // tslint:disable-next-line: variable-name
// const Arweave_inits: { real: any; fake: any; } = {
//   real: Arweave.init,
//   fake: FakeArweave.init
// };
// // tslint:disable-next-line: variable-name
// let Arweave_init = Arweave_inits.real;
// console.log("process.env.FAKE_ARWEAVE", process.env.FAKE_ARWEAVE);
// if (process.env.FAKE_ARWEAVE) {
//   Arweave_init = Arweave_inits.fake;
// }

const debug = false;

@Injectable({
  providedIn: 'root'
})
export class ArweaveService {

  // private _arweave: IArweave;
  private _arweave: Arweave;
  private _wallet: JWKInterface;
  private _initialized = false;
  private _public_address: any = undefined;
  private _currentAccountSubject: BehaviorSubject<string>;

  public onAccountChanged: EventEmitter<void> = new EventEmitter();

  public static getTxTags(tx: Transaction): Map<eDataField, string> {
    const tags: Map<eDataField, string> = new Map();
    tx.tags.forEach(tag => {
      let key: eDataField = tag.get('name', {decode: true, string: true}) as eDataField;
      let value = tag.get('value', {decode: true, string: true});
      tags.set(key, value);
    });
    return tags;
  }

  constructor(
    private fileSaverService: FileSaverService,
    private dvs: DvsService,
  ) {
    this._currentAccountSubject = new BehaviorSubject<string>(undefined);
    this.initialize().then((address) => {
      this.onAccountChanged.emit();
    });
  }

  public async useFakeArweave(useFake: boolean): Promise<boolean> {
    this._initialized = false;
    // if (useFake) {
    //   try {
    //     this._arweave = FakeArweave.init({});
    //     this._initialized = true;
    //   } catch (err) {
    //     console.error(err);
    //     this._initialized = false;
    //   }
    // } else {
    //   return this.initialize();
    // }
    throw new Error("faxe Arweave is deacivated now");
    return this._initialized;
  }

  public async initialize(): Promise<string> {
    return new Promise<string>((resolve, reject) => {
      if (this._initialized) {
        resolve(this._public_address);
        this._currentAccountSubject.next(this._public_address);
      } else {
        try {
          this._arweave = Arweave.init({host: 'arweave.net', port: 443, protocol: 'https'});
          const localStoredWallet = localStorage.getItem(eLocalStorageDataKey.WALLET);
          if (localStoredWallet) {
            this.submitWallet(JSON.parse(localStoredWallet)).then((address) => {
              console.log("Wallet successfully restored from loaclStorage");
              resolve(this._public_address);
              this._currentAccountSubject.next(this._public_address);
              this._initialized = true;
            }).catch(err => {
              console.warn('Unable to restore wallet from localStorage ->  clear localStorage', err);
              localStorage.removeItem(eLocalStorageDataKey.WALLET);
              resolve(this._public_address);
              this._currentAccountSubject.next(this._public_address);
              this._initialized = true;
            });
          } else {
            resolve(this._public_address);
            this._currentAccountSubject.next(this._public_address);
            this._initialized = true;
          }
        } catch (err) {
          console.error(err);
          this._public_address = undefined;
          this._wallet = undefined;
          this._initialized = false;
          this._currentAccountSubject.next(this._public_address);
          reject(err);
        }
      }
    });
  }

  public get initialized() {
    return this._initialized;
  }

  public get authenticated(): boolean {
    return this.initialized && (this._public_address !== undefined);
  }

  public get address() {
    return this._public_address;
  }

  public currentAccount(): Observable<string> {
    return this._currentAccountSubject.asObservable();
  }

  public async login(walletFile: File): Promise<string> {
    return new Promise<string>((resolve, reject) => {
      const myReader: FileReader = new FileReader();
      // console.log("read file", walletFile);
      myReader.onload = (e) => {
        console.log("waller read:", e.target.result);
        console.log("Arweave", this._arweave);
        this.submitWallet(JSON.parse(e.target.result.toString()))
        .then(address => {
          resolve(this._public_address);
          this._currentAccountSubject.next(this._public_address);
          this.onAccountChanged.emit();
        })
        .catch(err => reject(err));
        // return this._arweave.wallets.jwkToAddress(this._wallet).then((address) => {
        //   console.log("address", address);
        //   this._public_address = address;
        //   resolve(address);
        // }).catch(err => reject(err));
      };
      myReader.readAsText(walletFile, 'utf-8');
    });
  }

  private submitWallet(wallet: JWKInterface): Promise<string> {
    return new Promise<string>((resolve, reject) => {
      this._arweave.wallets.jwkToAddress(wallet).then((address) => {
        console.log("address", address);
        this._public_address = address;
        this._wallet = wallet;
        localStorage.setItem(eLocalStorageDataKey.WALLET, JSON.stringify(this._wallet));
        resolve(address);
      }).catch(err => {
        this._wallet = undefined;
        this._public_address = undefined;
        reject(err);
      });
    })
  }

  public logout() {
    this._wallet = undefined;
    this._public_address = undefined;
    localStorage.removeItem(eLocalStorageDataKey.WALLET);
    this._currentAccountSubject.next(this._public_address);
    this.onAccountChanged.emit();
  }

  public async uploadDocument(docMetadata: DocMetaData, docInstance: DocInstance): Promise<string> {
    return new Promise<string>(async (resolve, reject) => {
      if (!this.initialized) {
        // await this.initialize();
        reject('arweaveService not initialized');
        return;
      }
      console.log("upload doc with hash", docInstance.hash);
      if (debug) {
        console.warn('DEBUG MODE: real uploading deactivated')
        resolve(uuid());
        return;
      }
      const tx = await this._arweave.createTransaction(
        {
          data: new Uint8Array(docInstance.content)
        },
        this._wallet
      );
      this.dvs.getContract().then((decentraDocsContract: IDecentraDocsContract) => {
        this.tagDocument(tx, docMetadata, decentraDocsContract.contractId);
        resolve(this.signAndPostTransaction(tx));
      }).catch(err => reject(err));
    });
  }

  // public async uploadNewVersion(docMetadata: DocMetaData, version: string, docInstance: DocInstance): Promise<DocVersion> {
  //   return this.uploadDocument(docMetadata, docInstance).then((txId) => {
  //     return docMetadata.addVersion(txId, docInstance.hash, version);
  //   });
  // }

  public async downloadVersion(txId: string, filename?: string): Promise<string> {
    return this._arweave.transactions.getData(txId, {decode: true, string: false}).then((data: Uint8Array) => {
      console.log("getData -> ", data);
      if (!data) {
        return ('');
      }
      if (!filename) {
        filename = 'temp.dat';
      }
      this.fileSaverService.save(new Blob([data]), filename);
      return filename;
    }).catch(err => {
      console.error(err);
      return '';
    });
  }

  public async getTxStatus(txId: string): Promise<any> {
    return this._arweave.transactions.getStatus(txId);
  }

  public async getTxIds(query: ArqlOp): Promise<string[]> {
    return this._arweave.arql(query);
  }

  public async getTransaction(txId: string): Promise<Transaction> {
    return this._arweave.transactions.get(txId);
  }

  public async getNetworkInfo(): Promise<NetworkInfoInterface> {
    return this._arweave.network.getInfo();
  }

  public async getBalance(address?: string): Promise<string> {
    if (!address) {
      address = this._public_address;
    }
    return this._arweave.wallets.getBalance(address);
  }

  protected async signAndPostTransaction(tx): Promise<string> {
    return this._arweave.transactions.sign(tx, this._wallet).then(() => {
      console.log("tx", tx.id, "successfully signed");
      return this._arweave.transactions.post(tx).then(() => {
        console.log("tx", tx.id, "successfully posted");
        return tx.id;
      }).catch(err => {
        throw new Error(`Transaction ${tx.id} failed to post: ${err}`);
      });
    }).catch(err => {
      throw new Error(`Transaction ${tx.id} failed to sign: ${err}`);
    });
  }

  protected tagDocument(tx: Transaction, docMetadata: DocMetaData, contractId: string) {
    tx.addTag(eDataField.APP_NAME, APP_NAME);
    tx.addTag(eDataField.APP_VERSION, APP_VERSION);
    tx.addTag(eDataField.CONTRACT_ID, contractId);
    tx.addTag(eDataField.TYPE, eDataType.DOC);
    tx.addTag(eDataField.AUTHOR, docMetadata.author);
    tx.addTag(eDataField.TITLE, docMetadata.title);
    tx.addTag(eDataField.DESCRIPTION, docMetadata.description);
    tx.addTag(eDataField.DOC_ID, docMetadata.docId);
    tx.addTag(eDataField.VERSION, docMetadata.version.toFixed(0));
    tx.addTag(eDataField.HASH, docMetadata.hash);
    tx.addTag(eDataField.LAST_MODIFIED, docMetadata.lastModified.toFixed(0));
    tx.addTag(eDataField.DATE_PUBLISH, docMetadata.datePublication.toFixed(0));
  }

}

'''
'''--- src/app/arweave/constants.ts ---
import { and, or, equals } from 'arql-ops';

export const APP_NAME = 'DecentraDocs';
export const APP_VERSION = '0.4';
export enum eLocalStorageDataKey {
  WALLET = 'arweave.wallet',
  BLOCKCHAIN = 'blockchain'
}
export enum eDataType {
  DOC = 'Doc'
}
export enum eDataField {
  APP_NAME = 'App-Name',
  APP_VERSION = 'App-Version',
  CONTRACT_ID = 'ContractId',
  TYPE = 'Type',
  AUTHOR = 'Author',
  TITLE = 'Title',
  DESCRIPTION = 'Description',
  DOC_ID = 'DocId',
  VERSION = 'Version',
  HASH = 'hash',
  LAST_MODIFIED = 'LastModified',
  DATE_PUBLISH = 'DatePublish',
}

export const ArQueries = {
  ALL_DOCS: (contractId: string) => {
    return and(
      equals(eDataField.APP_NAME, APP_NAME),
      equals(eDataField.APP_VERSION, APP_VERSION),
      equals(eDataField.TYPE, eDataType.DOC),
      equals(eDataField.CONTRACT_ID, contractId)
    );
  }
};

'''
'''--- src/app/arweave/transactions.service.spec.ts ---
import { TestBed } from '@angular/core/testing';

import { TransactionsService } from './transactions.service';

describe('TransactionsService', () => {
  let service: TransactionsService;

  beforeEach(() => {
    TestBed.configureTestingModule({});
    service = TestBed.inject(TransactionsService);
  });

  it('should be created', () => {
    expect(service).toBeTruthy();
  });
});

'''
'''--- src/app/arweave/transactions.service.ts ---
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { BehaviorSubject, Observable, interval } from 'rxjs';
import { ArweaveService } from './arweave.service';
import * as HttpStatus from 'http-status-codes'
import { startWith, switchMap } from 'rxjs/operators';

export enum eTransationStatus {
  UNKNOWN = 'UNKNOWN',
  PENDING = 'PENDING',
  CONFIRMED = 'CONFIRMED',
  FAILED = 'FAILED'
};

const debug = false;

@Injectable({
  providedIn: 'root'
})
export class TransactionsService {

  constructor(
    private http: HttpClient,
    private arweaveService: ArweaveService
    ) { }

  private watchTransactionStatus(txId: string): Observable<eTransationStatus> {
    return new Observable<eTransationStatus>((observer) => {
        if (debug) {
          console.warn('DEBUG MODE: always return PENDING status')
          observer.next(eTransationStatus.PENDING);
          return;
        }
        this.arweaveService.getTxStatus(txId).then((status: {status: string, confirmed: any}) => {
        if ((+status.status !== HttpStatus.OK) && (+status.status !== HttpStatus.ACCEPTED)) {
          console.error(`Tx ${txId} failed with status ${JSON.stringify(status)} (error:${HttpStatus.getStatusText(+status.status)})`);
          observer.next(eTransationStatus.FAILED);
        }
        if (status.confirmed) {
          console.log(`Tx ${txId} confirmed with status ${JSON.stringify(status)}`)
          observer.next(eTransationStatus.CONFIRMED);
        } else {
          console.log(`Tx ${txId} still pending with status ${JSON.stringify(status)}`)
          observer.next(eTransationStatus.PENDING);
        }
      }).catch((err) => {
        console.error(err);
        observer.next(eTransationStatus.UNKNOWN);
      });
      return {
        unsubscribe() {
          console.log(`unsubscribe status watcher for tx ${txId}`);
        }
      };
    });
  }

  public watchTx(
    txId: string,
    endingStatus: eTransationStatus[],
    nbConfirmation: number,
    onStatusChanged: (status: eTransationStatus) => void) {
      let counter = 0;
      const sub = interval(10000).pipe(
      startWith(0),
      switchMap(() => this.watchTransactionStatus(txId))
    ).subscribe((status: eTransationStatus) => {
      onStatusChanged(status);
      if ( endingStatus.includes(status) ) {
        counter++;
        if (counter >= nbConfirmation) {
          sub.unsubscribe();
        }
      }
    });
  }

}

'''
'''--- src/app/authenticate/authenticate.service.spec.ts ---
import { TestBed } from '@angular/core/testing';

import { AuthenticateService } from './authenticate.service';

describe('AuthenticateService', () => {
  let service: AuthenticateService;

  beforeEach(() => {
    TestBed.configureTestingModule({});
    service = TestBed.inject(AuthenticateService);
  });

  it('should be created', () => {
    expect(service).toBeTruthy();
  });
});

'''
'''--- src/app/authenticate/authenticate.service.ts ---
import { Injectable } from '@angular/core';
import { BlockchainService, eBlockchain } from '../blockchain/blockchain.service';
import { ArweaveService } from '../arweave/arweave.service';
import { Observable, BehaviorSubject } from 'rxjs';
import { EthService } from '../ethereum/eth.service';

@Injectable({
  providedIn: 'root'
})
export class AuthenticateService {
  private _isAuthenticatedSubject: BehaviorSubject<boolean>;

  constructor(
    private arweaveService: ArweaveService,
    private blockchainService: BlockchainService
  ) {
    this._isAuthenticatedSubject = new BehaviorSubject<boolean>(undefined);
    this.checkIsAuthenticated();
    this.arweaveService.onAccountChanged.subscribe(() => {
      this.checkIsAuthenticated();
    });
    this.blockchainService.onAccountChanged.subscribe(() => {
      this.checkIsAuthenticated();
    });
  }

  public isAuthenticated(): Observable<boolean> {
    return this._isAuthenticatedSubject.asObservable();
  }

  public get authenticated(): boolean {
    return this.arweaveService.authenticated && this.blockchainService.authenticated;
  }

  private async checkIsAuthenticated() {
    this._isAuthenticatedSubject.next(this.authenticated);
    // this.arweaveService.isAuthenticated().then((arweaveAuth) => {
    //   if (arweaveAuth) {
    //     this.blockchainService.isAuthenticated().subscribe((blockchainAuth) => {
    //       if (blockchainAuth) {
    //         this._isAuthenticatedSubject.next(true);
    //       } else {
    //         this._isAuthenticatedSubject.next(false);
    //       }
    //     });
    //   } else {
    //     this._isAuthenticatedSubject.next(false);
    //   }
    // }).catch(err => this._isAuthenticatedSubject.error(err));
  }

  //   return new Observable<boolean>((observer) => {
  //     this.arweaveService.isAuthenticated().then((arweaveAuth) => {
  //       if (arweaveAuth) {
  //         this.blockchainService.isAuthenticated().subscribe((blockchainAuth) => {
  //           if (blockchainAuth) {
  //             observer.next(true);
  //           } else {
  //             observer.next(false);
  //           }
  //         });
  //       } else {
  //         observer.next(false);
  //       }
  //     }).catch(err => observer.error(err));
  //   });
  // }
}

'''
'''--- src/app/blockchain/IDecentraDocsContract.ts ---
export interface IDecentraDocsContract {
  contractId: string;
  docExists(docId: string): Promise<boolean>;
  getDocumentKey(docId: string): Promise<string>;
  getSubscriptionFee(docId: string): Promise<number>;
  getAuthorAccount(docId: string): Promise<string>;
  getAuthorizedAccounts(docId: string): Promise<string[]>;
  setAccess(docId: string, addressToAdd: string[], addressToRemove: string[]): Promise<void>;
  setSubscriptionFee(docId: string, subscriptionFee_inETHorDDOX: number): Promise<void>;
  registerDoc(docId: string, encryptedKey: string, subscriptionFee_inETHorDDOX: number, authorizedAddresses: string[]);
  subscribe(docId: string, amount_inETHorDDOX: number): Promise<void>;
}

'''
'''--- src/app/blockchain/blockchain.service.spec.ts ---
import { TestBed } from '@angular/core/testing';

import { BlockchainService } from './blockchain.service';

describe('BlockchainService', () => {
  let service: BlockchainService;

  beforeEach(() => {
    TestBed.configureTestingModule({});
    service = TestBed.inject(BlockchainService);
  });

  it('should be created', () => {
    expect(service).toBeTruthy();
  });
});

'''
'''--- src/app/blockchain/blockchain.service.ts ---
import { Injectable, EventEmitter } from '@angular/core';
import { Observable } from 'rxjs';
import { EthService } from '../ethereum/eth.service';
import { NearService } from '../near/near.service';
import { resolve } from 'dns';
import { eLocalStorageDataKey } from '../arweave/constants';
import { Router } from '@angular/router';
import { IDecentraDocsContract } from './IDecentraDocsContract';

export enum eBlockchain {
  ETHEREUM = 'ETHEREUM',
  NEAR = 'NEAR'
}

export enum eContract {
  DECENTRADOCS = 'DECENTRADOCS',
  DDOX_TOKEN = "DDOX_TOKEN"
}

export enum eCurrency {
  ETH = 'ETH',
  NEAR = 'NEAR',
  ARX = 'ARX',
  DDOX = 'DDOX'
}

@Injectable({
  providedIn: 'root'
})
export class BlockchainService {

  private _blockchain: eBlockchain = eBlockchain.ETHEREUM;
  public onAccountChanged: EventEmitter<void> = new EventEmitter();

  constructor(
    private ethService: EthService,
    private nearService: NearService,
    private router: Router
  ) {
    const prevBlockchain = localStorage.getItem(eLocalStorageDataKey.BLOCKCHAIN);
    if (prevBlockchain) {
      let blockchain = eBlockchain[prevBlockchain];
      if (blockchain) {
        this._blockchain = blockchain;
      }
    }
    ethService.currentAccount().subscribe((account) => {
      if (this._blockchain === eBlockchain.ETHEREUM) {
        this.onAccountChanged.emit();
      }
    });
    nearService.currentAccount().subscribe((account) => {
      if (this._blockchain === eBlockchain.NEAR) {
        this.onAccountChanged.emit();
      }
    });
  }

  public get currentAccountValue(): string {
    switch (this._blockchain) {
      case eBlockchain.ETHEREUM: {
        return this.ethService.currentAccountValue;
      }
      case eBlockchain.NEAR: {
        return this.nearService.currentAccountValue;
      }
    }
  }

  public get subscriptionCurrency(): eCurrency {
    switch (this._blockchain) {
      case eBlockchain.ETHEREUM: {
        return eCurrency.ETH;
      }
      case eBlockchain.NEAR: {
        return eCurrency.NEAR;
      }
    }
  }

  public get blockchain(): eBlockchain {
    return this._blockchain;
  }
  public set blockchain(value: eBlockchain) {
    if (value !== this._blockchain) {
      console.log(`switching from ${this._blockchain} to ${value}`);
      // this.router.routeReuseStrategy.shouldReuseRoute = () => false;
      // this.router.onSameUrlNavigation = 'reload';
      // this.router.navigateByUrl(this.router.url);
      this.onAccountChanged.emit();
      this.router.navigate(['/authenticate'], { queryParams: { returnUrl: this.router.url }});
    }
    this._blockchain = value;
    localStorage.setItem(eLocalStorageDataKey.BLOCKCHAIN, this._blockchain);
  }
  public toggle() {
    this.blockchain = this.alternativeTo(this._blockchain);
  }
  public use(blockchainStr: string, isTrue: boolean) {
    const blockchain: eBlockchain = eBlockchain[blockchainStr];
    if (isTrue) {
      this.blockchain = blockchain;
    } else {
      this.blockchain = this.alternativeTo(blockchain);
    }
  }

  protected alternativeTo(blockchain: eBlockchain): eBlockchain {
    if (blockchain === eBlockchain.ETHEREUM) {
      return eBlockchain.NEAR;
    } else {
      return eBlockchain.ETHEREUM;
    }
  }

  public get authenticated(): boolean {
    return ((this.blockchain === eBlockchain.ETHEREUM) && this.ethService.authenticated)
    || ((this.blockchain === eBlockchain.NEAR) && this.nearService.authenticated);
  }

  // public isAuthenticated(): Observable<boolean> {
  //   return new Observable<boolean>((observer) => {
  //       if (this.blockchain === eBlockchain.ETHEREUM) {
  //         this.ethService.isAuthenticated().then((ethAuth) => {
  //           observer.next(ethAuth);
  //           // this.onAccountChanged.emit();
  //         }).catch(err => observer.error(err));
  //       } else {
  //         this.nearService.isAuthenticated().then((nearAuth) => {
  //           observer.next(nearAuth);
  //           this.onAccountChanged.emit();
  //         }).catch(err => observer.error(err));
  //       }
  //   });
  // }

}

'''
'''--- src/app/components/access-ctrl-dialog/access-ctrl-dialog.component.html ---
<form [formGroup]="form" fxLayout="column" fxLayoutAlign="start start">
    <!-- <button class="close" type="cancel" mat-button mat-button-close (click)="close()">X</button> -->
    <h1 mat-dialog-title>Access Control</h1>
    <!-- <mat-label fxFlex>Access Control</mat-label> -->
    <div fxFlex>
        <span matTooltip='Allow everybody to download/view the document'><mat-icon>lock_open</mat-icon></span>
        <mat-slide-toggle #restrictedToggle [checked]="restricted" class="" (change)="restrictedToggle.checked = restricted"></mat-slide-toggle>
        <span matTooltip='Document is encrypted. Only authorized users/subscribers that owns the key can decrypt the document.'><mat-icon>lock</mat-icon></span>
    </div>
    <div fxFlex *ngIf="restrictedToggle.checked" fxLayout="column" fxLayoutAlign="start start">
        <!-- <mat-radio-group #protectionType class="example-radio-group" formControlName="protectionType">
            <mat-radio-button #usersList class="example-radio-button" [value]="'usersList'">Authorized Users</mat-radio-button>
            <mat-radio-button #onSubscription fxFlex class="example-radio-button" [value]="'subscription'">On Subscription</mat-radio-button>
        </mat-radio-group> -->
        <mat-checkbox #usersList class="example-radio-button" [checked]="authorizedAddresses.length > 0">Authorized Users</mat-checkbox>
        <div *ngIf="usersList.checked">
            <mat-form-field>
                <mat-label>Enter users {{accountDescription}}</mat-label>
                <mat-chip-list #addressesList aria-label="Addresses" formControlName="authorizedAddresses">
                    <mat-chip *ngFor="let address of authorizedAddresses" [selectable]="true" [removable]="true" (removed)="removeAddress(address)">
                        {{address}}
                        <mat-icon matChipRemove>cancel</mat-icon>
                    </mat-chip>
                    <input #addressInput placeholder="New {{accountDescription}}..." [matChipInputFor]="addressesList" [matChipInputSeparatorKeyCodes]="separatorKeysCodes" [matChipInputAddOnBlur]="true" (matChipInputTokenEnd)="addAddress($event)">
                    <mat-error *ngIf="(addressInput.value != '') && !isAddress(addressInput.value)">The address {{addressInput.value}} is not a valid {{accountDescription}}</mat-error>
                </mat-chip-list>
                <!-- <input required #keywords matInput placeholder="Enter Some Keywords" formControlName="keywords"> -->
            </mat-form-field>
        </div>
        <mat-checkbox #onSubscription class="example-radio-button" [checked]="parseInt(subscriptionFee) > 0">On Subscription</mat-checkbox>
        <div *ngIf="onSubscription.checked">

            <mat-form-field appearance="fill">
                <mat-label>Amount</mat-label>
                <input matInput readonly="subscriptionCurrency == 'NEAR'" type="number" min="0.0000001" max="0.01" step="0.0000001" class="example-right-align" placeholder="Subscription Fee" formControlName="subscriptionFee">
                <span matSuffix>{{subscriptionCurrency}}</span>
                <span style="color: red; font-style: italic;" *ngIf="subscriptionCurrency == 'NEAR'">Setting subscription fees not yet available with NEAR blockchain</span>
            </mat-form-field>
        </div>
    </div>
    <div fxLayout="row" fxLayoutAlign="center center">
        <div class="button" mat-raised-button color="accent" [mat-dialog-close]="true" type="submit" (click)="submit(form)">Submit</div>
        <div class="button" mat-raised-button color="accent" mat-dialog-close type="cancel" (click)="close()">Cancel</div>
    </div>
</form>
'''
'''--- src/app/components/access-ctrl-dialog/access-ctrl-dialog.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { AccessCtrlDialogComponent } from './access-ctrl-dialog.component';

describe('AccessCtrlDialogComponent', () => {
  let component: AccessCtrlDialogComponent;
  let fixture: ComponentFixture<AccessCtrlDialogComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ AccessCtrlDialogComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(AccessCtrlDialogComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/access-ctrl-dialog/access-ctrl-dialog.component.ts ---
import { Component, OnInit, Inject, Input } from '@angular/core';
import { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';
import { FormGroup, FormBuilder } from '@angular/forms';
import { DocumentUploadFormComponent } from '../document-upload-form/document-upload-form.component';
import { DocCollectionData, eAccessType } from 'src/app/_model/DocCollectionData';
import { EthService } from 'src/app/ethereum/eth.service';
import { MatChipInputEvent } from '@angular/material/chips';
import { ENTER, COMMA } from '@angular/cdk/keycodes';
import { strict } from 'assert';
import { BlockchainService, eBlockchain } from 'src/app/blockchain/blockchain.service';

@Component({
  selector: 'app-access-ctrl-dialog',
  templateUrl: './access-ctrl-dialog.component.html',
  styleUrls: ['./access-ctrl-dialog.component.scss']
})
export class AccessCtrlDialogComponent implements OnInit {
  form: FormGroup;
  authorizedAddresses: string[] = [];
  subscriptionFee: string;
  restricted: boolean;
  readonly separatorKeysCodes: number[] = [ENTER, COMMA];
  subscriptionCurrency: string;
  accountDescription: string;

  @Input()
  document: DocCollectionData;

  constructor(
    private dialog: MatDialog,
    private fb: FormBuilder,
    private dialogRef: MatDialogRef<DocumentUploadFormComponent>,
    private ethService: EthService,
    private blockchainService: BlockchainService,
    @Inject(MAT_DIALOG_DATA) public data: {document: DocCollectionData}
  ) { }

  ngOnInit(): void {
    this.subscriptionCurrency = this.blockchainService.subscriptionCurrency;
    switch (this.blockchainService.blockchain) {
      case eBlockchain.ETHEREUM:
        this.accountDescription = 'ETH address';
        break;
      case eBlockchain.NEAR:
        this.accountDescription = 'NEAR accountId';
        break;
    }

    this.authorizedAddresses = Array.from(this.data.document.authorizedAccounts);
    this.subscriptionFee = this.data.document.subscriptionFee.toString();
    this.restricted = (this.data.document.accessType !== eAccessType.PUBLIC);
    this.form = this.fb.group({
      docId: this.data.document.docId,
      // title: this.data.title,
      // author: this.data.author,
      // description: this.data.description,
      // version: this.data.version,
      // docInstance: undefined,
      subscriptionFee: this.subscriptionFee,
      restricted: this.restricted,
      authorizedAddresses: this.authorizedAddresses,
      // protectionType: (this.authorizedAddresses.length > 0) ? 'usersList' : 'subscription'
    });
  }

  submit(form: FormGroup) {
    form.patchValue({authorizedAddresses: this.authorizedAddresses});
    this.dialogRef.close(form.value);
  }

  parseInt(str: string): number {
    const n: number = +str;
    return n;
  }

  public setFee(value) {
    let regex = new RegExp(/\d[\d,\,, ]*[.|,]?\d*/);
    if (!regex.test(value)) {
      throw new Error(`Unable to parse entry '${value}' from currency format to a number.`);
    }
    let results = regex.exec(value);
    console.log("setFee() value =", value, "regex.results = ", results[0]);
    this.subscriptionFee = results[0];
  }

  public removeAddress(address: string) {
    const index = this.authorizedAddresses.indexOf(address);
    if (index >= 0) {
      this.authorizedAddresses.splice(index, 1);
    }
  }

  public addAddress(event: MatChipInputEvent): void {
    const input = event.input;
    const value = event.value;

    // Add our fruit
    if ((value || '').trim()) {
      const address = value.trim();
      if (!this.isAddress(address)) {
        return;
      }
      this.authorizedAddresses.push(value.trim());
    }

    // Reset the input value
    if (input) {
      input.value = '';
    }
  }

  public isAddress(address: string): boolean {
    return this.ethService.isAddress(address);
  }

  close() {
    this.dialogRef.close();
  }

}

'''
'''--- src/app/components/arweave-connect/arweave-connect.component.html ---
<!-- <div>
    <mat-slide-toggle class="example-margin" [(ngModel)]="useFakeArweave">
        Use fake Arweave!
    </mat-slide-toggle>
</div> -->
<div fxLayout="row" fxLayoutWrap fxLayoutAlign="center start" class="arweave-connect">
    <div fxFlex fxLayout="column" fxLayoutWrap fxLayoutAlign="start center" class="inner-content">
        <div>
            <img src="../../../assets/arweave.png" height="100px;">
        </div>
        <div fxFlex *ngIf=" address == undefined " [formGroup]="formDoc">
            <mat-form-field style="width:500px;">
                <ngx-mat-file-input formControlName="walletFile" accept=".json" placeholder="Select your wallet file"></ngx-mat-file-input>
                <mat-icon matSuffix>vpn_key</mat-icon>
            </mat-form-field>
            <div class="mt-3">
                <p style="text-align: center;">
                    Don't have a wallet? Get one <a href="https://tokens.arweave.org/" target="_blank">here</a>!
                </p>
            </div>
        </div>
        <div fxFlex *ngIf=" address != undefined ">
            <mat-form-field appearance="fill" style="width:500px;">
                <mat-label>Your Address</mat-label>
                <input matInput readonly value="{{address}}">
            </mat-form-field>
        </div>
        <div fxFlex fxLayout="row">
            <div fxFlex *ngIf=" networkInfo != undefined ">
                <mat-form-field appearance="fill" style="width:200px;">
                    <mat-label>Network</mat-label>
                    <input matInput readonly value="{{networkInfo.network}}">
                </mat-form-field>
            </div>
            <div fxFlex *ngIf=" balance != undefined ">
                <mat-form-field appearance="fill" style="width:200px;">
                    <mat-label>Your Balance</mat-label>
                    <input matInput readonly value="{{balance}}">
                </mat-form-field>
            </div>
        </div>
        <div fxFlex *ngIf=" address != undefined " class="button" (click)="logout()">
            <mat-icon>clear</mat-icon>
            <span>Disconnect</span>
        </div>
    </div>

</div>

'''
'''--- src/app/components/arweave-connect/arweave-connect.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { ArweaveConnectComponent } from './arweave-connect.component';

describe('ArweaveConnectComponent', () => {
  let component: ArweaveConnectComponent;
  let fixture: ComponentFixture<ArweaveConnectComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ ArweaveConnectComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(ArweaveConnectComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/arweave-connect/arweave-connect.component.ts ---
import { Component, OnInit } from '@angular/core';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { FileValidator, FileInput } from 'ngx-material-file-input';
import { ArweaveService } from 'src/app/arweave/arweave.service';
import { NetworkInfoInterface } from 'arweave/web/network';

@Component({
  selector: 'app-arweave-connect',
  templateUrl: './arweave-connect.component.html',
  styleUrls: ['./arweave-connect.component.scss']
})
export class ArweaveConnectComponent implements OnInit {
  formDoc: FormGroup;
  _useFakeArweave = false;
  networkInfo: any = undefined;
  address: string = undefined;
  balance: string = undefined;

  get useFakeArweave() {
    return this._useFakeArweave;
  }
  set useFakeArweave(value: boolean) {
    this._useFakeArweave = value;
    this.arweaveService.useFakeArweave(this._useFakeArweave);
  }

  constructor(private _fb: FormBuilder, private arweaveService: ArweaveService) {}

  ngOnInit(): void {

    this.formDoc = this._fb.group({
      walletFile: [
        undefined,
        [Validators.required]
      ]
    });

    this.arweaveService.initialize().then((address) => {
      this.refreshArweaveInfo();
    });

    this.formDoc.get('walletFile').valueChanges.subscribe((val: FileInput) => {
      console.log('onchange', val);
      this.arweaveService.login(val.files[0]).then((address) => {
        this.refreshArweaveInfo();
      }).catch(err => console.error(err));
    });
  }

  stringify(obj: any) {
    return JSON.stringify(obj);
  }

  logout() {
    this.arweaveService.logout();
    this.refreshArweaveInfo();
    this.formDoc.setValue({walletFile: ''}, {onlySelf: true, emitEvent: false});
  }

  private refreshArweaveInfo() {
    this.address = this.arweaveService.address;
    if (this.address) {
      this.arweaveService.getBalance().then((balance: string) => {
        this.balance = balance;
      }).catch(err => console.error(err));
    } else {
        this.balance = '';
    }
    this.arweaveService.getNetworkInfo().then((networkInfo: any) => {
      this.networkInfo = networkInfo;
    }).catch(err => {
      this.networkInfo = undefined;
      console.error(err);
    });
  }

}

'''
'''--- src/app/components/confirm-dialog/confirm-dialog.component.html ---
<h2 mat-dialog-title>{{params.title}}</h2>
<mat-dialog-content *ngIf="params.message">{{params.message}}</mat-dialog-content>
<mat-dialog-content *ngIf="params.html">
    <div [innerHTML]="params.html"></div>
    {{params.message}}</mat-dialog-content>
<mat-dialog-actions>
    <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->
    <button mat-button *ngFor="let action of params.actions" [mat-dialog-close]="action.result">{{action.text}}</button>
    <!-- <button mat-button mat-dialog-close>No</button> -->
    <!-- <button mat-button [mat-dialog-close]="true">Yes</button> -->
</mat-dialog-actions>

'''
'''--- src/app/components/confirm-dialog/confirm-dialog.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { ConfirmDialogComponent } from './confirm-dialog.component';

describe('ConfirmDialogComponent', () => {
  let component: ConfirmDialogComponent;
  let fixture: ComponentFixture<ConfirmDialogComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ ConfirmDialogComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(ConfirmDialogComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/confirm-dialog/confirm-dialog.component.ts ---
import { Component, Inject, Input } from '@angular/core';
import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';

@Component({
    selector: 'app-confirm-dialog',
    templateUrl: './confirm-dialog.component.html'
})
export class ConfirmDialogComponent {
  constructor(
    private dialogRef: MatDialogRef<ConfirmDialogComponent>,
    @Inject(MAT_DIALOG_DATA) public params: {title: string, message: string, html: string, actions: {text: string, result: any}[]}
  ) {

  }
  onNoClick(): void {
      this.dialogRef.close();
  }
}

'''
'''--- src/app/components/document-details/document-details.component.html ---
<div class="document-details" fxLayout="column" *ngIf=" document !== undefined">
    <div fxFlex class="section">
    </div>
    <div fxFlex class="section">
        <mat-label class="label">Title:</mat-label>
        <div fxFlex class="property">
            <div class="title">{{document.title}}</div>
        </div>
        <button mat-icon-button [matMenuTriggerFor]="menu" aria-label="Example icon-button with a menu">
          <mat-icon>more_horiz</mat-icon>
        </button>
        <mat-menu #menu="matMenu">
            <button mat-menu-item (click)="docService.subscribe(document.docId)" [disabled]="!docService.canSubscribe(document)">
            <mat-icon>add_shopping_cart</mat-icon>
            <span>Subscribe</span>
          </button>
            <button mat-menu-item [routerLink]="[{  outlets: { accessCtrl: ['accessCtrl', {docId: document.docId}] }}] " *ngIf="docService.canChangeAccessControl(document)">
            <mat-icon>enhance_encryption</mat-icon>
            <span>Access Control</span>
          </button>
            <button mat-menu-item [routerLink]="[{  outlets: { publish: ['publish', {docId: document.docId}] }}] " *ngIf="docService.canPublishNewVersion(document)">
            <mat-icon>library_add</mat-icon>
            <span>Publish new version</span>
          </button>
        </mat-menu>
    </div>
    <div fxFlex class="section">
        <mat-label class="label">Document Id:</mat-label>
        <div fxFlex class="property">
            <div class="docId">{{document.docId}}</div>
        </div>
    </div>
    <div fxFlex class="section">
        <mat-label class="label">Author:</mat-label>
        <div fxFlex class="property">
            <mat-icon>account_box</mat-icon>
            <div class="author" *ngIf="document.getDataForLatestVersion()">{{document.getDataForLatestVersion().author}}</div>
            <div class="author">@{{blockchainId}}:{{document.authorEthAccount}}</div>
        </div>
    </div>
    <div fxFlex class="section">
        <mat-label class="label">Access Type:</mat-label>
        <div fxFlex class="property">
            <div class="access">
                <mat-icon *ngIf="document.accessType == 'Public'" matTooltip='Public access'>lock_open</mat-icon>
                <mat-icon *ngIf="document.accessType == 'Restricted'" matTooltip='Restricted access'>lock</mat-icon>
            </div>
        </div>
    </div>
    <div fxFlex class="section" *ngIf="document.accessType === 'Restricted'">
        <mat-label class="label">Subscription Fee:</mat-label>
        <div fxFlex class="property">
            <div class="price">{{document.subscriptionFee}} {{subscriptionCurrency}}</div>
        </div>
    </div>
    <div fxFlex class="section">
        <mat-label class="label">Latest Version:</mat-label>
        <div fxFlex class="property">
            <div class="version">version:{{document.latestVersion}}</div>
            <div>(Latest)</div>
        </div>
    </div>
    <div fxFlex class="section versions" fxLayout="column">
        <div fxLayout="row">
            <h4>Versions:</h4>
            <div class="add-version" [routerLink]="[{  outlets: { publish: ['publish', {docId: document.docId}] }}] " *ngIf="docService.canPublishNewVersion(document)">
                <mat-icon matTooltip='Publish a new version'>library_add</mat-icon>
            </div>
        </div>
        <div fxFlex>
            <mat-accordion>
                <mat-expansion-panel *ngFor="let version of document.versions | reverse">
                    <mat-expansion-panel-header>
                        <mat-panel-title>
                            <div class="version">version:{{version}}</div>
                            <div class="status">
                                <mat-spinner *ngIf="document.getDataForLatestVersion() && document.getDataForLatestVersion().uploadingStatus == 'Pending'" [diameter]=24 matTooltip='Waiting for uploading transaction to complete'></mat-spinner>
                                <mat-icon *ngIf="document.getDataForLatestVersion() && document.getDataForLatestVersion().uploadingStatus == 'Failed'" matTooltip='Uploading transaction failed'>error_outline</mat-icon>
                            </div>
                        </mat-panel-title>
                    </mat-expansion-panel-header>
                    <div fxLayout="column">
                        <div fxFlex class="section">
                            <mat-label class="label">Published On:</mat-label>
                            <div fxFlex class="property">
                                <div *ngIf="document.getDataForVersion(version)" class="date-publication">{{document.getDataForVersion(version).datePublication | date:'medium'}}</div>
                            </div>
                        </div>
                        <div fxFlex class="section">
                            <mat-label class="label">Last Modified:</mat-label>
                            <div fxFlex class="property">
                                <div *ngIf="document.getDataForVersion(version)" class="last-modified">{{document.getDataForVersion(version).lastModified | date:'medium'}}</div>
                            </div>
                        </div>
                        <div fxFlex class="section">
                            <mat-label class="label">Description:</mat-label>
                            <div fxFlex class="property">
                                <div *ngIf="document.getDataForVersion(version)" class="description">{{document.getDataForVersion(version).description}}</div>
                            </div>
                        </div>
                        <div class="button" [routerLink]="[{ outlets: { download: ['download', {docId:document.docId, title:document.title, txId:document.getDataForVersion(version).txId, version:version}] } }]" *ngIf="docService.canDownload(document, version)">
                            <mat-icon>cloud_download</mat-icon>
                            <span>Download</span>
                        </div>
                        <div class="button" (click)="docService.subscribe(document.docId)" *ngIf="docService.canSubscribe(document)">
                            <mat-icon>add_shopping_cart</mat-icon>
                            <span>Subscribe</span>
                        </div>
                    </div>
                </mat-expansion-panel>
            </mat-accordion>
        </div>
    </div>
</div>
<router-outlet name='download'></router-outlet>
<router-outlet name='publish'></router-outlet>
<router-outlet name="accessCtrl"></router-outlet>
'''
'''--- src/app/components/document-details/document-details.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { DocumentDetailsComponent } from './document-details.component';

describe('DocumentDetailsComponent', () => {
  let component: DocumentDetailsComponent;
  let fixture: ComponentFixture<DocumentDetailsComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ DocumentDetailsComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(DocumentDetailsComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/document-details/document-details.component.ts ---
import { Component, OnInit, Input, Pipe, PipeTransform } from '@angular/core';
import { DocCollectionData } from 'src/app/_model/DocCollectionData';
import { DocService } from 'src/app/doc-manager/doc.service';
import { BlockchainService, eBlockchain } from 'src/app/blockchain/blockchain.service';

@Pipe({ name: 'reverse', pure: false })
export class ReversePipe implements PipeTransform {
  transform(value) {
    return value.slice().reverse();
  }
}

@Component({
  selector: 'app-document-details',
  templateUrl: './document-details.component.html',
  styleUrls: ['./document-details.component.scss'],
  providers: [ReversePipe]
})
export class DocumentDetailsComponent implements OnInit {

  _document: DocCollectionData = undefined;
  _selectedVersion: number;
  subscriptionCurrency;
  blockchainId;

  public get selectedVersion(): number {
    return this._selectedVersion;
  }

  public set selectedVersion(value: number) {
    console.log("select version", value);
    this._selectedVersion = value;
  }

  public get document(): DocCollectionData {
    return this._document;
  }
  @Input()
  public set document(value: DocCollectionData) {
    this._document = value;
    this.selectedVersion = (this._document) ? this._document.latestVersion : 0;
  }

  constructor(
    private reverse: ReversePipe,
    private blockchainService: BlockchainService,
    public docService: DocService
  ) { }

  ngOnInit(): void {
    this.subscriptionCurrency = this.blockchainService.subscriptionCurrency;
    switch (this.blockchainService.blockchain) {
      case eBlockchain.ETHEREUM: {
        this.blockchainId = 'ETH';
        break;
      }
      case eBlockchain.NEAR: {
        this.blockchainId = 'NEAR';
        break;
      }
    }
  }

}

'''
'''--- src/app/components/document-list/document-list.component.html ---
<!-- <table>
    <tr>
        <th>Title</th>
        <th>Latest Version</th>
        <th>Author</th>
        <th>Status</th>
        <th>Access</th>
        <th></th>
        <th></th>
    </tr>
    <tr *ngFor="let document of documents">
        <td>
            <div class="title">{{document.title}}</div>
        </td>
        <td>
            <div class="version">{{document.latestVersion}}</div>
        </td>
        <td>
            <div class="author">{{document.getDataForLatestVersion().author}}</div>
        </td>
        <td>
            <div class="status">{{document.getDataForLatestVersion().uploadingStatus}}</div>
        </td>
        <td>
            <div class="access">Public</div>
        </td>
        <td style="vertical-align: top; text-align: center;">
            <button [disabled]="true" mat-raised-button color="primary" title="Edit"><i class="fa fa-edit"></i>Edit</button>
        </td>
        <td style="vertical-align: top; text-align: center;">
            <button [disabled]="true" mat-raised-button color="primary" title="Delete"><i class="fa fa-trash"></i>Delete</button>
        </td>
    </tr>
</table> -->
<mat-list #selectedDocument class="doc-list" fxLayout="column">
    <mat-list-item fxFlex *ngFor="let document of documents" class="document-item" [ngClass]="{selected: selectedDoc === document}" (click)="selectedDoc=document">
        <mat-icon>description</mat-icon>
        <div class="title">{{document.title}}</div>
        <div class="version">version:{{document.latestVersion}}</div>
        <div class="access">
            <mat-icon *ngIf="document.accessType == 'Public'" matTooltip='Public access'>lock_open</mat-icon>
            <mat-icon *ngIf="document.accessType == 'Restricted'" matTooltip='Restricted access'>lock</mat-icon>
        </div>
        <div class="status">
            <!-- <mat-icon *ngIf="document.getDataForLatestVersion().uploadingStatus == 'Pending'" matTooltip='Waiting for uploading transaction to complete'>hourglass_empty</mat-icon> -->
            <mat-spinner *ngIf="document.getDataForLatestVersion() && document.getDataForLatestVersion().uploadingStatus == 'Pending'" [diameter]=30 matTooltip='Waiting for uploading transaction to complete'></mat-spinner>
            <mat-icon *ngIf="document.getDataForLatestVersion() && document.getDataForLatestVersion().uploadingStatus == 'Failed'" matTooltip='Uploading transaction failed'>error_outline</mat-icon>
        </div>
        <div class="button" [routerLink]="[{ outlets: { download: ['download', {docId:document.docId, title:document.title, txId:document.getDataForLatestVersion().txId, version:document.latestVersion}] } }]" *ngIf="docService.canDownload(document, document.latestVersion)">
            <mat-icon matTooltip='Download latest version'>cloud_download</mat-icon>
        </div>
        <div class="button" (click)="docService.subscribe(document.docId)" *ngIf="docService.canSubscribe(document)">
            <mat-icon matTooltip='Subscribe'>add_shopping_cart</mat-icon>
        </div>
    </mat-list-item>
</mat-list>
<router-outlet name='download'></router-outlet>
<router-outlet name='publish'></router-outlet>
<router-outlet name="accessCtrl"></router-outlet>
'''
'''--- src/app/components/document-list/document-list.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { DocumentListComponent } from './document-list.component';

describe('DocumentListComponent', () => {
  let component: DocumentListComponent;
  let fixture: ComponentFixture<DocumentListComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ DocumentListComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(DocumentListComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/document-list/document-list.component.ts ---
import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';
import { DocMetaData } from 'src/app/_model/DocMetaData';
import { DocCollectionData } from 'src/app/_model/DocCollectionData';
import { DocService } from 'src/app/doc-manager/doc.service';

@Component({
  selector: 'app-document-list',
  templateUrl: './document-list.component.html',
  styleUrls: ['./document-list.component.scss']
})
export class DocumentListComponent implements OnInit {

  @Input()
  documents: DocCollectionData[];
  // tslint:disable-next-line: no-output-on-prefix
  @Output()
  onSelectDoc = new EventEmitter();
  // tslint:disable-next-line: variable-name
  _selectedDoc: DocCollectionData = undefined;

  constructor(
    public docService: DocService
  ) { }

  ngOnInit(): void {
  }

  get selectedDoc(): DocCollectionData {
    return this._selectedDoc;
  }

  set selectedDoc(value: DocCollectionData) {
    this._selectedDoc = value;
    console.log("emit onSelectDoc", {document: this._selectedDoc});
    this.onSelectDoc.emit({document: this._selectedDoc});
  }

}

'''
'''--- src/app/components/document-upload-form/document-upload-form.component.html ---
<form [formGroup]="form">
    <button class="close" type="cancel" mat-button mat-button-close (click)="close()">X</button>
    <h1 mat-dialog-title>Upload Document</h1>

    <mat-dialog-content class="content">
        <div fxLayout="column">
            <app-material-file-select #fileSelector [autoOpen]="true" (cancel)="close()" (fileSelected)="onFileSelected($event)"></app-material-file-select>
            <mat-form-field *ngIf="docInstance" class="hash">
                <input fxFlex matInput readonly placeholder="Document Fingerprint (hash)" value="{{docInstance.hash}}">
            </mat-form-field>
            <div fxLayout="row">
                <div fxLayout="column">
                    <div fxFlex>
                        <mat-form-field>
                            <input fxFlex matInput required placeholder="Document Title" formControlName="title" [readonly]="canChangeTitle">
                        </mat-form-field>
                    </div>
                    <div fxFlex>
                        <mat-form-field class="author">
                            <input fxFlex matInput placeholder="Author" formControlName="author" readonly>
                        </mat-form-field>
                    </div>
                    <div fxFlex>
                        <mat-form-field>
                            <input fxFlex matInput placeholder="Version" formControlName="version" readonly>
                        </mat-form-field>
                    </div>
                </div>
                <div fxFlex>
                    <mat-form-field>
                        <textarea fxFlex class="description" matInput placeholder="Document Description" formControlName="description" rows="5"></textarea>
                    </mat-form-field>
                </div>
            </div>
            <div fxFlex fxLayout="column" fxLayoutAlign="start start" *ngIf="!existingCollection">
                <mat-label fxFlex fxFlex>Access Control</mat-label>
                <div fxFlex>
                    <span matTooltip='Allow everybody to download/view the document'><mat-icon>lock_open</mat-icon></span>
                    <mat-slide-toggle #restricted class="" formControlName="restricted"></mat-slide-toggle>
                    <span matTooltip='Document is encrypted. Only authorized users/subscribers that owns the key can decrypt the document.'><mat-icon>lock</mat-icon></span>
                </div>
                <div *ngIf="restricted.checked" fxFlex>
                    <mat-radio-group #protectionType class="example-radio-group" formControlName="protectionType">
                        <!-- <div fxFlex> -->
                        <mat-radio-button #usersList class="example-radio-button" [value]="'usersList'">Authorized Users</mat-radio-button>
                        <div *ngIf="usersList.checked">
                            <mat-form-field>
                                <mat-label>Enter users {{accountDescription}}</mat-label>
                                <mat-chip-list #addressesList aria-label="Addresses" formControlName="authorizedAddresses">
                                    <mat-chip *ngFor="let address of authorizedAddresses" [selectable]="true" [removable]="true" (removed)="removeAddress(address)">
                                        {{address}}
                                        <mat-icon matChipRemove>cancel</mat-icon>
                                    </mat-chip>
                                    <input #addressInput placeholder="New {{accountDescription}}..." [matChipInputFor]="addressesList" [matChipInputSeparatorKeyCodes]="separatorKeysCodes" [matChipInputAddOnBlur]="true" (matChipInputTokenEnd)="addAddress($event)">
                                    <mat-error *ngIf="(addressInput.value != '') && !isAddress(addressInput.value)">The address {{addressInput.value}} is not a valid {{accountDescription}}</mat-error>
                                </mat-chip-list>
                                <!-- <input required #keywords matInput placeholder="Enter Some Keywords" formControlName="keywords"> -->
                            </mat-form-field>
                        </div>
                        <!-- </div> -->
                        <!-- <div fxFlex> -->
                        <mat-radio-button #onSubscription fxFlex class="example-radio-button" [value]="'subscription'">On Subscription</mat-radio-button>
                        <div *ngIf="onSubscription.checked">
                            <!-- <mat-form-field>
                                <input matInput type="text" placeholder="Subscription Fee" formControlName="subscriptionFee" [value]="{updateOn:'blur'}" (change)="setFee($event.target.value)" />
                                </mat-form-field> -->
                            <mat-form-field appearance="fill">
                                <mat-label>Amount</mat-label>
                                <input matInput readonly="subscriptionCurrency == 'NEAR'" type="number" min="0.0000001" max="0.01" step="0.0000001" class="example-right-align" placeholder="Subscription Fee" formControlName="subscriptionFee">
                                <span matSuffix>{{subscriptionCurrency}}</span>
                                <span style="color: red; font-style: italic;" *ngIf="subscriptionCurrency == 'NEAR'">Setting subscription fees not yet available with NEAR blockchain</span>
                            </mat-form-field>
                        </div>
                        <!-- </div> -->
                    </mat-radio-group>
                </div>
            </div>
        </div>
    </mat-dialog-content>
    <div fxLayout="row" fxLayoutAlign="center center">
        <div class="button" mat-raised-button color="accent" [mat-dialog-close]="true" type="submit" (click)="submit(form)">Submit</div>
        <div class="button" mat-raised-button color="accent" mat-dialog-close type="cancel" (click)="close()">Cancel</div>
    </div>
</form>
'''
'''--- src/app/components/document-upload-form/document-upload-form.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { DocumentUploadFormComponent } from './document-upload-form.component';

describe('DocumentUploadFormComponent', () => {
  let component: DocumentUploadFormComponent;
  let fixture: ComponentFixture<DocumentUploadFormComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ DocumentUploadFormComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(DocumentUploadFormComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/document-upload-form/document-upload-form.component.ts ---
import { Component, OnInit, Inject, ViewChild, ElementRef } from '@angular/core';
import { FormGroup, FormBuilder } from '@angular/forms';
import {MAT_DIALOG_DATA, MatDialogRef, MatDialog, MatDialogConfig} from '@angular/material/dialog';
import { FileUploadAction } from '../material-file-upload/material-file-upload.component';
import { ArweaveService } from 'src/app/arweave/arweave.service';
import { DocMetaData } from 'src/app/_model/DocMetaData';
import { DocInstance } from 'src/app/_model/DocInstance';
import { EROFS } from 'constants';
import { LibraryService } from 'src/app/library/library.service';
import { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';
import { DocCollectionData } from 'src/app/_model/DocCollectionData';
import { MaterialFileSelectComponent } from '../material-file-select/material-file-select.component';
import { MatSnackBar } from '@angular/material/snack-bar';
import { MatChipInputEvent } from '@angular/material/chips';
import { ENTER, COMMA } from '@angular/cdk/keycodes';
import { EthService } from 'src/app/ethereum/eth.service';
import { DocService } from 'src/app/doc-manager/doc.service';
import { BlockchainService, eCurrency, eBlockchain } from 'src/app/blockchain/blockchain.service';

@Component({
  selector: 'app-document-upload-form',
  templateUrl: './document-upload-form.component.html',
  styleUrls: ['./document-upload-form.component.scss']
})
export class DocumentUploadFormComponent implements OnInit {

  @ViewChild('fileSelector')
  fileSelector: MaterialFileSelectComponent;
  form: FormGroup;
  docInstance: DocInstance;
  canChangeTitle = true;
  canChangeVersion = false;
  canChangeDescription = true;
  existingCollection = false;
  subscriptionFee: string = '0.0001';
  authorizedAddresses: string[] = [];
  readonly separatorKeysCodes: number[] = [ENTER, COMMA];
  subscriptionCurrency: string;
  defaultSubscriptionFee: number;
  accountDescription: string;

  constructor(
    private dialog: MatDialog,
    private fb: FormBuilder,
    private dialogRef: MatDialogRef<DocumentUploadFormComponent>,
    private arweaveService: ArweaveService,
    private libraryService: LibraryService,
    private blockchainService: BlockchainService,
    private ethService: EthService,
    private _snackBar: MatSnackBar,
    private docService: DocService,
    @Inject(MAT_DIALOG_DATA) public data: any) {
  }

  ngOnInit(): void {
    // this.form = new FormGroup({});
    if (this.data.docId) {
      this.canChangeTitle = false;
      this.existingCollection = true;
    }
    this.subscriptionCurrency = this.blockchainService.subscriptionCurrency;
    switch(this.subscriptionCurrency) {
      case eCurrency.ETH:
        this.subscriptionFee = '0.0001';
        break;
      default:
        this.subscriptionFee = '0';
    }
    switch (this.blockchainService.blockchain) {
      case eBlockchain.ETHEREUM:
        this.accountDescription = 'ETH address';
        break;
      case eBlockchain.NEAR:
        this.accountDescription = 'NEAR accountId';
        break;
    }
    this.form = this.fb.group({
      docId: this.data.docId,
      title: this.data.title,
      author: this.data.author,
      description: this.data.description,
      version: this.data.version,
      docInstance: undefined,
      subscriptionFee: this.subscriptionFee,
      restricted: false,
      authorizedAddresses: this.authorizedAddresses,
      existingCollection: this.existingCollection,
      protectionType: (this.authorizedAddresses.length > 0) ? 'usersList' : 'subscription'
    });
  }

  submit(form: FormGroup) {
    console.log("Upload Document: submit form");
    form.patchValue({docInstance: this.docInstance});
    if (!form.controls.restricted.value) {
      form.patchValue({subscriptionFee: '0'});
    }
    form.patchValue({authorizedAddresses: this.authorizedAddresses});
    form.patchValue({existingCollection: this.existingCollection});
    this.dialogRef.close(form.value);
  }

  close() {
    this.dialogRef.close();
  }

  checkCollectionExists(title: string): Promise<{docId: string, title: string, version: number}> {
    // If the filename already exist in the library, warn the user and increment the version
    return new Promise((resolve, reject) => {
      if (this.existingCollection) {
        resolve({docId: this.data.docId, title: this.data.title, version: this.data.version});
        return;
      }
      const existingCollectionData: DocCollectionData = this.libraryService.findCollectionByTitle(title);
      if (!existingCollectionData) {
        resolve({docId: '', title, version: 1}); // initial version
        return;
      }
      if (!this.docService.canPublishNewVersion(existingCollectionData)) {
        const confirmDialogRef = this.dialog.open(ConfirmDialogComponent, {
          width: '350px',
          data: {
            title: "Existing Document",
            message: `A document called '${title}' already exists in the library. Please choose another title`,
            actions: [
              {text: 'OK', result: true}
            ]
          }
        });
        confirmDialogRef.afterClosed().subscribe(result => {
          reject('title already used in library');
          return;
        });
        return;
      }
      const confirmDialogRef = this.dialog.open(ConfirmDialogComponent, {
        width: '350px',
        data: {
          title: "Adding Version",
          message: `A document called '${title}' already exists in the library. Are you sure you want to add a new version of this document ?`,
          actions: [
            {text: 'Yes', result: true},
            {text: 'No', result: false},
          ]
        }
      });
      confirmDialogRef.afterClosed().subscribe(result => {
        if (!result) {
            reject('did not agree to add a new version');
            return;
        }
        this.existingCollection = true;
        const newVersion = existingCollectionData.latestVersion + 1;
        resolve({docId: existingCollectionData.docId, title, version: newVersion});
      });
    });
  }

  checkDocumentExists(hash: string): Promise<void> {
    // If the filename already exist in the library, warn the user and increment the version
    return new Promise((resolve, reject) => {
      let existingDoc: DocMetaData = this.libraryService.findDocumentByHash(hash);
      if (!existingDoc) {
        resolve(); // initial version
        return;
      }
      const confirmDialogRef = this.dialog.open(ConfirmDialogComponent, {
        width: '350px',
        data: {
          title: "Existing Document",
          message: `An identical document already exists in the library.`,
          actions: [
            {text: 'OK', result: true}
          ]
        }
      });
      confirmDialogRef.afterClosed().subscribe(result => {
        reject();
        return;
      });
    });
  }

  // _uploadFile(data: FileUploadAction) {
  //   const file = data.fileModel;
  //   const filename = file.data.name;
  //   this.checkCollectionExists(filename).then((version) => {
  //     this.form.patchValue({title: filename});
  //     this.form.patchValue({version: version});

  //     console.log(`uploadFile(${filename})`);

  //     file.inProgress = true;
  //     this.docInstance = new DocInstance();
  //     this.docInstance.readFromFile(data.fileModel.data, (result) => {
  //       if (result) {
  //         console.log("read file completed");
  //         console.log("hash:", this.docInstance.hash);
  //         this.checkDocumentExists(this.docInstance.hash).then(() => {
  //           data.onSuccess('');
  //         }).catch(() => {
  //           this.form.patchValue({title: ''});
  //           this.form.patchValue({version: 0});
  //           this.docInstance = undefined;
  //           data.onFailure("doc already exists");
  //         });
  //       } else {
  //         data.onFailure("read file failed");
  //         this.form.patchValue({title: ''});
  //         this.form.patchValue({version: 0});
  //         this.docInstance = undefined;
  //       }
  //     });
  //   }).catch(() => { // did not agree to add a new version
  //     console.log('did not agree to add a new version to document', filename);
  //     this.form.patchValue({title: ''});
  //     this.form.patchValue({version: 1});
  //     return;
  //   });
  // }

  onFileSelected(file: File) {
    if (file === undefined) {
      this.onFileSelectionFailure();
      return;
    }
    const filename = file.name;
    console.log(`onFileSelected(${filename})`);
    this.docInstance = new DocInstance();
    this.docInstance.readFromFile(file, (result) => {
      if (result) {
        console.log("read file completed");
        console.log("hash:", this.docInstance.hash);
        this.checkDocumentExists(this.docInstance.hash).then(() => {
          this.checkCollectionExists(filename).then((result: {docId: string, title: string, version: number}) => {
            this.form.patchValue({title: result.title});
            this.form.patchValue({docId: result.docId});
            this.form.patchValue({version: result.version});
            console.log('success, version:', result.version, "docId:", result.docId);
            // data.onSuccess('');
          }).catch(() => { // did not agree to add a new version
            this.onFileSelectionFailure();
          });
        }).catch(() => { // doc already exists
          this.onFileSelectionFailure();
        });
      } else { // read file failed
        this.onFileSelectionFailure();
        this._snackBar.open(`Unexpected error while reading file '${filename}'`, 'ERROR', {
          duration: 2000,
        });
      }
    });
  }

  onFileSelectionFailure() {
    this.form.patchValue({title: ''});
    this.form.patchValue({version: 0});
    this.docInstance = undefined;
    this.fileSelector.selectedFile = undefined;
  }

  // uploadFile(data: FileUploadAction) {
  //   const file = data.fileModel;
  //   const filename = file.data.name;
  //   console.log(`uploadFile(${filename})`);
  //   file.inProgress = true;
  //   this.docInstance = new DocInstance();
  //   this.docInstance.readFromFile(data.fileModel.data, (result) => {
  //     if (result) {
  //       console.log("read file completed");
  //       console.log("hash:", this.docInstance.hash);
  //       this.checkDocumentExists(this.docInstance.hash).then(() => {
  //         this.checkCollectionExists(filename).then((result: {docId: string, version: number}) => {
  //           this.form.patchValue({title: filename});
  //           this.form.patchValue({docId: result.docId});
  //           this.form.patchValue({version: result.version});
  //           console.log('success, version:', result.version, "docId:", result.docId);
  //           data.onSuccess('');
  //         }).catch(() => { // did not agree to add a new version
  //           console.log('did not agree to add a new version to document', filename);
  //           this.form.patchValue({title: ''});
  //           this.form.patchValue({version: 1});
  //           data.onFailure("did not agree to add a new version to document");
  //         });
  //       }).catch(() => {
  //         this.form.patchValue({title: ''});
  //         this.form.patchValue({version: 0});
  //         this.docInstance = undefined;
  //         data.onFailure("doc already exists");
  //       });
  //     } else {
  //       this.form.patchValue({title: ''});
  //       this.form.patchValue({version: 0});
  //       this.docInstance = undefined;
  //       data.onFailure("read file failed");
  //     }
  //   });
  // }
  // onFileUploaded(data: any) {
  //   console.log('onFileUploaded', data);

  // }

  public setFee(value) {
    let regex = new RegExp(/\d[\d,\,, ]*[.|,]?\d*/);
    if (!regex.test(value)) {
      throw new Error(`Unable to parse entry '${value}' from currency format to a number.`);
    }
    let results = regex.exec(value);
    console.log("setFee() value =", value, "regex.results = ", results[0]);
    this.subscriptionFee = results[0];
  }

  public removeAddress(address: string) {
    const index = this.authorizedAddresses.indexOf(address);
    if (index >= 0) {
      this.authorizedAddresses.splice(index, 1);
    }
  }

  public addAddress(event: MatChipInputEvent): void {
    const input = event.input;
    const value = event.value;

    // Add our fruit
    if ((value || '').trim()) {
      const address = value.trim();
      if (!this.isAddress(address)) {
        return;
      }
      this.authorizedAddresses.push(value.trim());
    }

    // Reset the input value
    if (input) {
      input.value = '';
    }
  }

  public isAddress(address: string): boolean {
    switch(this.blockchainService.blockchain) {
      case eBlockchain.ETHEREUM: {
        return this.ethService.isAddress(address);
      }
      case eBlockchain.NEAR: {
        return (address.length >= 2) && (address.length <= 64) && /^(([a-z\d]+[\-_])*[a-z\d]+\.)*([a-z\d]+[\-_])*[a-z\d]+$/.test(address)
        ;
      }
    }

  }

}

'''
'''--- src/app/components/document-upload/document-upload.component.html ---

'''
'''--- src/app/components/document-upload/document-upload.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { DocumentUploadComponent } from './document-upload.component';

describe('DocumentUploadComponent', () => {
  let component: DocumentUploadComponent;
  let fixture: ComponentFixture<DocumentUploadComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ DocumentUploadComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(DocumentUploadComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/document-upload/document-upload.component.ts ---
import { Component, OnInit } from '@angular/core';
import { DocInstance } from 'src/app/_model/DocInstance';

@Component({
  selector: 'app-document-upload',
  templateUrl: './document-upload.component.html',
  styleUrls: ['./document-upload.component.scss']
})
export class DocumentUploadComponent implements OnInit {

  docInstance: DocInstance;

  constructor() { }

  ngOnInit(): void {
  }

}

'''
'''--- src/app/components/ethereum-connect/ethereum-connect.component.html ---
<div fxLayout="row" fxLayoutWrap fxLayoutAlign="center start" class="ethereum-connect">
    <div fxFlex fxLayout="column" fxLayoutWrap fxLayoutAlign="start center" class="inner-content">
        <div>
            <img src="../../../assets/ethereum.png" height="100px;">
        </div>
        <div fxFlex *ngIf=" address == undefined " [formGroup]="formDoc">
            <h3>Connect using MetaMask extension.</h3>
            <a href="https://metamask.io" target="_blank"><img src="../../../assets//MetaMask.png" height="124px;"></a>
        </div>
        <div fxFlex *ngIf=" address != undefined ">
            <mat-form-field appearance="fill" style="width:500px;">
                <mat-label>Your Address</mat-label>
                <input matInput readonly value="{{address}}">
            </mat-form-field>
        </div>
        <div fxFlex fxLayout="row">
            <!-- <div fxFlex *ngIf=" provider != undefined ">
                <mat-form-field appearance="fill" style="width:200px;">
                    <mat-label>Network</mat-label>
                    <input matInput readonly value="">
                </mat-form-field>
            </div> -->
            <div fxFlex *ngIf=" address != undefined ">
                <mat-form-field appearance="fill" style="width:200px;">
                    <mat-label>Your Balance</mat-label>
                    <input matInput readonly value="{{balance}}">
                </mat-form-field>
            </div>
        </div>
        <div fxFlex *ngIf=" address != undefined " class="button" (click)="logout()">
            <mat-icon>clear</mat-icon>
            <span>Reconnect</span>
        </div>
    </div>

</div>

'''
'''--- src/app/components/ethereum-connect/ethereum-connect.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { EthereumConnectComponent } from './ethereum-connect.component';

describe('EthereumConnectComponent', () => {
  let component: EthereumConnectComponent;
  let fixture: ComponentFixture<EthereumConnectComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ EthereumConnectComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(EthereumConnectComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/ethereum-connect/ethereum-connect.component.ts ---
import { Component, OnInit, NgZone } from '@angular/core';
import { FormGroup, FormBuilder } from '@angular/forms';
import { EthService } from 'src/app/ethereum/eth.service';

@Component({
  selector: 'app-ethereum-connect',
  templateUrl: './ethereum-connect.component.html',
  styleUrls: ['./ethereum-connect.component.scss']
})
export class EthereumConnectComponent implements OnInit {
  formDoc: FormGroup;
  address: string = undefined;
  addresses: string[] = [];
  balance: string = undefined;
  provider: any = undefined;

  constructor(
    private _fb: FormBuilder,
    private zone: NgZone,
    private ethService: EthService
    ) { }

  ngOnInit(): void {
    this.formDoc = this._fb.group({
      walletFile: []
    });
    this.init_eth();
  }

  logout() {
    this.ethService.disconnect();
    this.address = undefined;
    this.addresses = [];
    this.provider = undefined;
    this.balance = undefined;
    this.init_eth();
  }

  private init_eth() {
    this.ethService.initialize().subscribe((initialized) => {
      if (initialized) {
        this.ethService.currentAccount().subscribe((account: string) => {
          this.zone.run(() => {
            this.address = account;
            if (this.address) {
              this.ethService.getBalance(this.address).then((balance: string) => {
                this.balance = balance;
              });
            } else {
              this.balance = '';
            }
          });
        }, err => {
          this.address = undefined;
          this.balance = '';
        });
        this.ethService.getAccounts().subscribe((accounts: string[]) => {
          this.zone.run(() => {
            this.addresses = accounts;
          })
        }, err => {
          this.addresses = [];
        });
        this.ethService.getWeb3().subscribe((web3) => {
          this.provider = web3.currentProvider;
          console.log('provider', this.provider);
        });
      } else {
        console.error("ethService is not initialized");
      }
    });
  }

}

'''
'''--- src/app/components/help/access-control/access-control.component.html ---
<p>access-control works!</p>

'''
'''--- src/app/components/help/access-control/access-control.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { AccessControlComponent } from './access-control.component';

describe('AccessControlComponent', () => {
  let component: AccessControlComponent;
  let fixture: ComponentFixture<AccessControlComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ AccessControlComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(AccessControlComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/help/access-control/access-control.component.ts ---
import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-access-control',
  templateUrl: './access-control.component.html',
  styleUrls: ['./access-control.component.scss']
})
export class AccessControlComponent implements OnInit {

  constructor() { }

  ngOnInit(): void {
  }

}

'''
'''--- src/app/components/help/checker/checker.component.html ---
<p>checker works!</p>

'''
'''--- src/app/components/help/checker/checker.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { CheckerComponent } from './checker.component';

describe('CheckerComponent', () => {
  let component: CheckerComponent;
  let fixture: ComponentFixture<CheckerComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ CheckerComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(CheckerComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/help/checker/checker.component.ts ---
import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-checker',
  templateUrl: './checker.component.html',
  styleUrls: ['./checker.component.scss']
})
export class CheckerComponent implements OnInit {

  constructor() { }

  ngOnInit(): void {
  }

}

'''
'''--- src/app/components/help/search/search.component.html ---
<p>search works!</p>

'''
'''--- src/app/components/help/search/search.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { SearchComponent } from './search.component';

describe('SearchComponent', () => {
  let component: SearchComponent;
  let fixture: ComponentFixture<SearchComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ SearchComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(SearchComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/help/search/search.component.ts ---
import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-search',
  templateUrl: './search.component.html',
  styleUrls: ['./search.component.scss']
})
export class SearchComponent implements OnInit {

  constructor() { }

  ngOnInit(): void {
  }

}

'''
'''--- src/app/components/help/subscription/subscription.component.html ---
<p>subscription works!</p>

'''
'''--- src/app/components/help/subscription/subscription.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { SubscriptionComponent } from './subscription.component';

describe('SubscriptionComponent', () => {
  let component: SubscriptionComponent;
  let fixture: ComponentFixture<SubscriptionComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ SubscriptionComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(SubscriptionComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/help/subscription/subscription.component.ts ---
import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-subscription',
  templateUrl: './subscription.component.html',
  styleUrls: ['./subscription.component.scss']
})
export class SubscriptionComponent implements OnInit {

  constructor() { }

  ngOnInit(): void {
  }

}

'''
'''--- src/app/components/help/version-control/version-control.component.html ---
<h1>Version Control</h1>
<img src="../assets/version-control-1.jpg" height="250px">
<p>Each time you make a change in a document, then you update your publication in <img height="18" alt="DCD" src="../assets/DecentraDocs.png" /> <span class="decentradocs">DecentraDocs</span>, a <b>new version</b> of your document will be created</p>
<p>Every version of your document remains accessible forever, hence you have a complete tracability of your document history</p>
<img src="../assets/history-revision-1.png" height="250px">

'''
'''--- src/app/components/help/version-control/version-control.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { VersionControlComponent } from './version-control.component';

describe('VersionControlComponent', () => {
  let component: VersionControlComponent;
  let fixture: ComponentFixture<VersionControlComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ VersionControlComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(VersionControlComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/help/version-control/version-control.component.ts ---
import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-version-control',
  templateUrl: './version-control.component.html',
  styleUrls: ['./version-control.component.scss']
})
export class VersionControlComponent implements OnInit {

  constructor() { }

  ngOnInit(): void {
  }

}

'''
'''--- src/app/components/left-menu-bar/left-menu-bar.component.html ---
<div class="card-container menu-bar">

    <div class="card card-small " tabindex="0 " routerLink="/mydocuments" routerLinkActive="active">
        <mat-icon>folder_open</mat-icon>
        <span>My Documents</span>
    </div>

    <div class="card card-small " tabindex="0 " routerLink="/check" routerLinkActive="active">
        <mat-icon>library_add_check</mat-icon>
        <span>Doc Checker</span>
    </div>

    <div class="card card-small " tabindex="0 " routerLink="/search" routerLinkActive="active">
        <mat-icon>search</mat-icon>
        <span>Search</span>
    </div>

    <!-- <div class="card card-small " tabindex="0 " [routerLink]="[{ outlets: { publish: ['publish'] } }]"> -->
    <!-- <div class="card card-small " tabindex="0 " (click)="clickOnPublish()"> -->
    <div class="card card-small " tabindex="0 " routerLink="/publish">
        <mat-icon>publish</mat-icon>
        <span>Publish</span>
    </div>

    <div class="card card-small " tabindex="0 " routerLink="/help">
        <mat-icon>help_outline</mat-icon>
        <span>Help</span>
    </div>

</div>

<router-outlet name='publish'></router-outlet>

'''
'''--- src/app/components/left-menu-bar/left-menu-bar.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { LeftMenuBarComponent } from './left-menu-bar.component';

describe('LeftMenuBarComponent', () => {
  let component: LeftMenuBarComponent;
  let fixture: ComponentFixture<LeftMenuBarComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ LeftMenuBarComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(LeftMenuBarComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/left-menu-bar/left-menu-bar.component.ts ---
import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';

@Component({
  selector: 'app-left-menu-bar',
  templateUrl: './left-menu-bar.component.html',
  styleUrls: ['./left-menu-bar.component.scss']
})
export class LeftMenuBarComponent implements OnInit {

  constructor(
    private route: ActivatedRoute,
    private router: Router
  ) { }

  ngOnInit(): void {
  }

  clickOnPublish() {
    console.log("route", this.route);
    this.router.navigate([{ outlets: { publish: ['publish']}}]);
  }

}

'''
'''--- src/app/components/material-file-select/material-file-select.component.html ---
<button *ngIf="selectedFile === undefined" mat-button color="warn" (click)="onClickSelect()" type="button" class="button">
  <mat-icon>file_upload</mat-icon>Select File
</button>
<div *ngIf="selectedFile !== undefined" fxLayout="row">
    <!-- <input class="file" readonly placeholder="Selected File" value> -->
    <mat-form-field>
        <mat-icon>insert_drive_file</mat-icon>
        <!-- <span class="file">{{selectedFile.name}}</span> -->
        <input matInput class="file" placeHolder="Selected Document" value="{{selectedFile.name}}" readonly>
    </mat-form-field>
    <span class="button small-button" (click)="selectFile(undefined)">
      <mat-icon matTooltip='Select Another Document'>backspace</mat-icon>
  </span>
</div>
<input #fileUpload type="file" id="fileUpload" name="fileUpload" multiple="false" style="display:none;" />

'''
'''--- src/app/components/material-file-select/material-file-select.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { MaterialFileSelectComponent } from './material-file-select.component';

describe('MaterialFileSelectComponent', () => {
  let component: MaterialFileSelectComponent;
  let fixture: ComponentFixture<MaterialFileSelectComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ MaterialFileSelectComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(MaterialFileSelectComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/material-file-select/material-file-select.component.ts ---
import { Component, OnInit, Input, EventEmitter, Output, ViewChild, ElementRef } from '@angular/core';

@Component({
  selector: 'app-material-file-select',
  templateUrl: './material-file-select.component.html',
  styleUrls: ['./material-file-select.component.scss']
})
export class MaterialFileSelectComponent implements OnInit {

  @Input() autoOpen = false;
  @Input() selectedFile: File;
  @Output() fileSelected = new EventEmitter<File>();
  @Output() cancel = new EventEmitter();

  constructor() { }

  ngOnInit() {
    const fileUpload = document.getElementById(
      'fileUpload'
    ) as HTMLInputElement;
    fileUpload.onchange = (event: any) => {
      this.selectFile(fileUpload.files[0]);
    };
    fileUpload.onclick = (event: any) => {
      console.log("onclick input", event);
      event.target.value = null;
    };
    if (this.autoOpen) {
      console.log("autoopen dialog box");
      this.onClickSelect();
    }
  }

  onClickSelect() {
    const fileUpload = document.getElementById(
      'fileUpload'
    ) as HTMLInputElement;
    fileUpload.files = null;
    fileUpload.click();
  }

  selectFile(file: File) {
    console.log("selectFile", file);
    this.selectedFile = file;
    this.fileSelected.emit(this.selectedFile);
  }

}

'''
'''--- src/app/components/material-file-upload/material-file-upload.component.html ---
<div id="drop-zone" *ngIf="ddarea" (drop)="dropHandler($event)" (dragover)="dragOverHandler($event)">
    <p style="text-transform: uppercase;">Drag one or more files to this Drop Zone ...</p>
</div>
<button mat-button color="warn" (click)="onClick()" type="button">
<mat-icon>file_upload</mat-icon>
{{text}}
</button>
<br/>
<ul>
    <li *ngFor="let file of files" [@fadeInOut]="file.state">
        <mat-progress-bar [value]="file.progress"></mat-progress-bar>
        <span id="file-label">
    {{file.data.name}}
    <a title="Retry" (click)="retryFile(file)" *ngIf="file.canRetry">
      <mat-icon>refresh</mat-icon>
    </a>
    <a title="Cancel" (click)="cancelFile(file)" *ngIf="file.canCancel">
      <mat-icon>cancel</mat-icon>
    </a>
  </span>
    </li>
</ul>
<input type="file" id="fileUpload" name="fileUpload" multiple="multiple" accept="{{accept}}" style="display:none;" />
'''
'''--- src/app/components/material-file-upload/material-file-upload.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { MaterialFileUploadComponent } from './material-file-upload.component';

describe('MaterialFileUploadComponent', () => {
  let component: MaterialFileUploadComponent;
  let fixture: ComponentFixture<MaterialFileUploadComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ MaterialFileUploadComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(MaterialFileUploadComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/material-file-upload/material-file-upload.component.ts ---
import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';
import {
  trigger,
  state,
  style,
  animate,
  transition
} from '@angular/animations';
import {
  HttpClient,
  HttpResponse,
  HttpRequest,
  HttpEventType,
  HttpErrorResponse
} from '@angular/common/http';
import { Subscription, of } from 'rxjs';
import { catchError, last, map, tap } from 'rxjs/operators';

export class FileUploadAction {
  fileModel: FileUploadModel;
  onSuccess: (event: any) => void;
  onFailure: (event: any) => void;
}

export class FileUploadModel {
  data: File;
  state: string;
  inProgress: boolean;
  progress: number;
  canRetry: boolean;
  canCancel: boolean;
  sub?: Subscription;
}

@Component({
  selector: 'app-material-file-upload',
  templateUrl: './material-file-upload.component.html',
  styleUrls: ['./material-file-upload.component.sass'],
  animations: [
    trigger('fadeInOut', [
      state('in', style({ opacity: 100 })),
      transition('* => void', [animate(300, style({ opacity: 0 }))])
    ])
  ]
})
export class MaterialFileUploadComponent implements OnInit {
  /** Link text */
  @Input() text = 'Upload';
  /** Name used in form which will be sent in HTTP request. */
  @Input() param = 'file';
  /** Target URL for file uploading. */
  @Input() target = 'https://file.io';
  /** File extension that accepted, same as 'accept' of <input type="file" />. By the default, it's set to 'image/*'. */
  @Input() accept = 'image/*';
  /** Allow you to configure drag and drop area shown or not. */
  @Input() ddarea = false;

  @Input() autoOpen = false;
  /** Allow you to add handler after its completion. Bubble up response text from remote. */
  @Output() complete = new EventEmitter<string>();

  @Output() fileUpload = new EventEmitter<FileUploadAction>();

  files: Array<FileUploadModel> = [];

  constructor() {}

  ngOnInit() {
    if (this.autoOpen) {
      console.log("autoopen dialog box");
      this.onClick();
    }
  }

  onClick() {
    const fileUpload = document.getElementById(
      'fileUpload'
    ) as HTMLInputElement;
    fileUpload.onchange = () => {
      for (let index = 0; index < fileUpload.files.length; index++) {
        const file = fileUpload.files[index];
        this.files.push({
          data: file,
          state: 'in',
          inProgress: false,
          progress: 0,
          canRetry: false,
          canCancel: true
        });
      }
      this.uploadFiles();
    };
    fileUpload.click();
  }

  cancelFile(file: FileUploadModel) {
    if (file) {
      if (file.sub) {
        file.sub.unsubscribe();
      }
      this.removeFileFromArray(file);
    }
  }

  retryFile(file: FileUploadModel) {
    this.uploadFile(file);
    file.canRetry = false;
  }

  private uploadFile(file: FileUploadModel) {
    this.fileUpload.emit({
      fileModel: file,
      onSuccess: (event: any) => {
        this.removeFileFromArray(file);
        this.complete.emit(event);
      },
      onFailure: (event: any) => {
        file.inProgress = false;
        file.canRetry = true;
        // return of(`${file.data.name} upload failed.`);
      }
    });
  }

  private uploadFiles() {
    const fileUpload = document.getElementById(
      'fileUpload'
    ) as HTMLInputElement;
    fileUpload.value = '';

    this.files.forEach(file => {
      if (!file.inProgress) {
        this.uploadFile(file);
      }
    });
  }

  private removeFileFromArray(file: FileUploadModel) {
    const index = this.files.indexOf(file);
    if (index > -1) {
      this.files.splice(index, 1);
    }
  }

  dropHandler(ev: DragEvent) {
    // console.log('File(s) dropped');

    // Prevent default behavior (Prevent file from being opened)
    ev.preventDefault();

    if (ev.dataTransfer.items) {
      // Use DataTransferItemList interface to access the file(s)
      for (let i = 0; i < ev.dataTransfer.items.length; i++) {
        // If dropped items aren't files, reject them
        if (ev.dataTransfer.items[i].kind === 'file') {
          const file = ev.dataTransfer.items[i].getAsFile();
          this.files.push({
            data: file,
            state: 'in',
            inProgress: false,
            progress: 0,
            canRetry: false,
            canCancel: true
          });
          // console.log('... file[' + i + '].name = ' + file.name);
        }
      }
    } else {
      // Use DataTransfer interface to access the file(s)
      for (let i = 0; i < ev.dataTransfer.files.length; i++) {
        this.files.push({
          data: ev.dataTransfer.files[i],
          state: 'in',
          inProgress: false,
          progress: 0,
          canRetry: false,
          canCancel: true
        });
        // console.log(
        //   '... file[' + i + '].name = ' + ev.dataTransfer.files[i].name
        // );
      }
    }

    this.uploadFiles();
  }

  dragOverHandler(ev: DragEvent) {
    // console.log('File(s) in drop zone');

    // Prevent default behavior (Prevent file from being opened)
    ev.preventDefault();
  }
}

'''
'''--- src/app/components/navbar/navbar.component.html ---
<div class="navbar sticky toolbar">
    <div class="toolbar-container" role="banner">
        <div routerLink="/" style="cursor: pointer; display:contents;">
            <img width="50" alt="DCD" src="../assets/DecentraDocs.png" />
            <span>DecentraDocs</span>
        </div>
        <div class="spacer"></div>
        <div class="account-container" fxLayout="column" fxLayoutAlign="center end">
            <div fxFlex class="account" matTooltip="Arweave account">
                <img fxFlex src="../assets/arweave-logo-1-crop.png" height="30px">
                <span *ngIf="arweaveService.authenticated"> {{arweaveService.address}}</span>
                <span *ngIf="!arweaveService.authenticated" style="color:red;">
                  <mat-icon>warning</mat-icon>Arweave login required</span>
            </div>
            <div fxFlex class="account" fxLayout="row" xLayoutAlign="end center" matTooltip="Ethereum account" *ngIf="blockchainService.blockchain == 'ETHEREUM'">
                <img fxFlex src=" ../assets/ethereum-icon-purple.56fbef66.svg " height="30px">
                <span *ngIf="ethService.currentAccountValue "> {{ethService.currentAccountValue}}</span>
                <span *ngIf="!ethService.currentAccountValue " style="color:red; ">
                    <mat-icon>warning</mat-icon>
                    <span>ETH login required</span>
                </span>
            </div>
            <div fxFlex class="account" fxLayout="row" xLayoutAlign="end center" matTooltip="NEAR account" *ngIf="blockchainService.blockchain == 'NEAR'">
                <img fxFlex src=" ../assets/near_logo_white_crop.png " height="30px">
                <span *ngIf="nearService.currentAccountValue "> @{{nearService.currentAccountValue}}</span>
                <span *ngIf="!nearService.currentAccountValue " style="color:red; ">
                  <mat-icon>warning</mat-icon>
                  <span>NEAR login required</span>
                </span>
            </div>
        </div>
        <img width="55 " alt="PROFILE " src="../assets/Profile.png " (click)="openProfileDialog()" />
    </div>
    <!-- Profile Details -->
    <!-- <div class="navbar-drawer ">
        <app-profile-details [opened]="profileOpen "></app-profile-details>
    </div> -->

    <div class="toolbar-container bottom-line "></div>
</div>
'''
'''--- src/app/components/navbar/navbar.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { NavbarComponent } from './navbar.component';

describe('NavbarComponent', () => {
  let component: NavbarComponent;
  let fixture: ComponentFixture<NavbarComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ NavbarComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(NavbarComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/navbar/navbar.component.ts ---
import { Component, OnInit } from '@angular/core';
import { EthService } from 'src/app/ethereum/eth.service';
import { ArweaveService } from 'src/app/arweave/arweave.service';
import { BlockchainService } from 'src/app/blockchain/blockchain.service';
import { NearService } from 'src/app/near/near.service';
import { MatDialog } from '@angular/material/dialog';
import { ProfileDetailsComponent } from '../profile-details/profile-details.component';

@Component({
  selector: 'app-navbar',
  templateUrl: './navbar.component.html',
  styleUrls: ['./navbar.component.scss']
})
export class NavbarComponent implements OnInit {

  profileOpen = false;

  constructor(
    private dialog: MatDialog,
    public ethService: EthService,
    public arweaveService: ArweaveService,
    public nearService: NearService,
    public blockchainService: BlockchainService
  ) { }

  ngOnInit(): void {
  }

  openProfileDialog() {
    const dialogRef = this.dialog.open(ProfileDetailsComponent, {
      width: '75%',
      height: '40%',
      position: {
        top: '0%',
        left: '12.5%'
      }
    });
  }

}

'''
'''--- src/app/components/near-connect/near-connect.component.html ---
<div fxLayout="row" fxLayoutWrap fxLayoutAlign="center start" class="near-connect">
    <div fxFlex fxLayout="column" fxLayoutWrap fxLayoutAlign="start center" class="inner-content">
        <div>
            <img src="../../../assets/near_logo.svg" height="80px;" style="padding: 10px;">
        </div>
        <div fxFlex>
            <mat-form-field appearance="fill" style="width:200px;">
                <mat-label>Your Account ID</mat-label>
                <input matInput readonly value="{{accountId}}">
            </mat-form-field>
        </div>
        <div fxFlex fxLayout="row">
            <div fxFlex>
                <mat-form-field appearance="fill" style="width:200px;">
                    <mat-label>Your Balance</mat-label>
                    <input matInput readonly value="YOUR_BALANCE">
                </mat-form-field>
            </div>
        </div>
        <div fxFlex *ngIf="accountId" class="button" (click)="logout()">
            <mat-icon>clear</mat-icon>
            <span>Disconnect</span>
        </div>
        <div fxFlex *ngIf="!accountId" class="button" (click)="login()">
            <mat-icon>clear</mat-icon>
            <span>Connect</span>
        </div>
    </div>

</div>
'''
'''--- src/app/components/near-connect/near-connect.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { NearConnectComponent } from './near-connect.component';

describe('NearConnectComponent', () => {
  let component: NearConnectComponent;
  let fixture: ComponentFixture<NearConnectComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ NearConnectComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(NearConnectComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/near-connect/near-connect.component.ts ---
import { Component, OnInit } from '@angular/core';
import { BlockchainService } from 'src/app/blockchain/blockchain.service';
import { NearService } from 'src/app/near/near.service';

@Component({
  selector: 'app-near-connect',
  templateUrl: './near-connect.component.html',
  styleUrls: ['./near-connect.component.scss']
})
export class NearConnectComponent implements OnInit {
  accountId: string;

  constructor(
    public blockchain: BlockchainService,
    public near: NearService
  ) { }

  ngOnInit(): void {
    this.near.currentAccount().subscribe((id) => {
      this.accountId = id;
    });
  }

  logout() {
    this.near.logout();
  }

  login() {
    this.near.login();
  }
}

'''
'''--- src/app/components/profile-details/profile-details.component.html ---
<div class="card-container " [@strech]="opened" fxLayout="row" fxLayoutAlign="center strech">

    <div class="" tabindex="0 " style="width: ">
        <div fxLayout="row" style="height: 36px;    width: 50%;
      align-items: center;
      align-self: center;"></div>
        <app-arweave-connect></app-arweave-connect>
    </div>

    <div class="" tabindex="0 " fxLayout="column">
        <div fxLayout="row" style="height: width: 50%;
        align-items: center;
        align-self: center;">
            <span fxFlex matTooltip=''><img  src=" ../assets/ethereum.png " height="30px"></span>
            <mat-slide-toggle fxFlex #useNear [checked]="blockchainService.blockchain == 'NEAR'" (change)="blockchainService.use('NEAR', useNear.checked)" style="    margin-left: 16px;
            "></mat-slide-toggle>
            <span fxFlex matTooltip=''><img  src=" ../assets/near_logo.svg " height="30px"></span>
        </div>
        <div>
            <app-ethereum-connect *ngIf="blockchainService.blockchain == 'ETHEREUM'"></app-ethereum-connect>
            <app-near-connect *ngIf="blockchainService.blockchain == 'NEAR'"></app-near-connect>
        </div>
    </div>

</div>
'''
'''--- src/app/components/profile-details/profile-details.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { ProfileDetailsComponent } from './profile-details.component';

describe('ProfileDetailsComponent', () => {
  let component: ProfileDetailsComponent;
  let fixture: ComponentFixture<ProfileDetailsComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ ProfileDetailsComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(ProfileDetailsComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/profile-details/profile-details.component.ts ---
import { Component, OnInit, Input, ViewChild, ElementRef, Inject } from '@angular/core';
import { trigger, state, style, transition, animate } from '@angular/animations';
import { BlockchainService } from 'src/app/blockchain/blockchain.service';
import { MAT_DIALOG_DATA } from '@angular/material/dialog';
import { element } from 'protractor';

@Component({
  selector: 'app-profile-details',
  templateUrl: './profile-details.component.html',
  styleUrls: ['./profile-details.component.scss'],
  animations: [
    trigger('strech', [
      state('false', style({ height: '0px' })),
      transition('false => true', [animate(300, style({ height: '450px' }))]),
      state('true', style({ height: '450px' })),
      transition('true => false', [animate(300, style({ height: '0px' }))])
    ])
  ]
})
export class ProfileDetailsComponent implements OnInit {

  _opened: boolean = false;

  constructor(
    public blockchainService: BlockchainService,
    @Inject(MAT_DIALOG_DATA) public params: {cssClass: string}
  ) {
   }

  @Input()
  set opened(value: boolean) {
    this._opened = value;
  }
  get opened(): boolean {
    return this._opened;
  }

  ngOnInit(): void {
    this.opened = this._opened;
  }

}

'''
'''--- src/app/components/routes/access-ctrl/access-ctrl.component.html ---

'''
'''--- src/app/components/routes/access-ctrl/access-ctrl.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { AccessCtrlComponent } from './access-ctrl.component';

describe('AccessCtrlComponent', () => {
  let component: AccessCtrlComponent;
  let fixture: ComponentFixture<AccessCtrlComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ AccessCtrlComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(AccessCtrlComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/routes/access-ctrl/access-ctrl.component.ts ---
import { Component, OnInit, ReflectiveInjector } from '@angular/core';
import { MatDialog } from '@angular/material/dialog';
import { ArweaveService } from 'src/app/arweave/arweave.service';
import { LibraryService } from 'src/app/library/library.service';
import { Router, ActivatedRoute } from '@angular/router';
import { AccessCtrlDialogComponent } from '../../access-ctrl-dialog/access-ctrl-dialog.component';
import { DvsService } from 'src/app/ethereum/dvs.service';
import { map } from 'rxjs/operators';
import { IDecentraDocsContract } from 'src/app/blockchain/IDecentraDocsContract';

@Component({
  selector: 'app-access-ctrl',
  templateUrl: './access-ctrl.component.html',
  styleUrls: ['./access-ctrl.component.scss']
})
export class AccessCtrlComponent implements OnInit {

  constructor(
    private dialog: MatDialog,
    private arweaveService: ArweaveService,
    private dvs: DvsService,
    private libraryService: LibraryService,
    private router: Router,
    private route: ActivatedRoute
  ) { }

  ngOnInit(): void {
    this.route.params.pipe(map(p => p.docId)).subscribe((docId: string) => this.showForm(docId));
    if (this.route.outlet === "primary") {
      this.router.navigate(['/mydocuments']);
    } else {
      this.router.navigate(this.route.snapshot.parent.url);
    }
  }

  showForm(docId: string) {
      const document = this.libraryService.findCollectionByDocId(docId);
      if (!document) {
        return;
      }
      const dialogRef = this.dialog.open(AccessCtrlDialogComponent, {
          width: '550px',
          height: '500px',
          data: {
            document
          }
        });
      dialogRef.afterClosed().subscribe(data => {
        if (!data) {
          return;
        }
        this.dvs.getContract().then((decentraDocsContract: IDecentraDocsContract) => {
        const subscriptionFee: number = +data.subscriptionFee;
        const authorizedAddresses = data.authorizedAddresses;
        if (document.subscriptionFee !== subscriptionFee) {
            decentraDocsContract.setSubscriptionFee(docId, subscriptionFee).then(() => {
            document.subscriptionFee = subscriptionFee;
          }).catch(err => console.error(err));
        }
        const addressToAdd = [];
        for (const address of authorizedAddresses) {
          if (!document.authorizedAccounts.includes(address)) {
            addressToAdd.push(address);
          }
        }
        const addressToRemove = [];
        for (const address of document.authorizedAccounts) {
          if (!authorizedAddresses.includes(address)) {
            addressToRemove.push(address);
          }
        }
        if ((addressToAdd.length > 0) || (addressToRemove.length > 0)) {
            decentraDocsContract.setAccess(docId, addressToAdd, addressToRemove).then(() => {
            document.authorizedAccounts = authorizedAddresses;
          }).catch(err => console.error(err));
        }
        }).catch(err => console.error(err));
      });
  }

}

'''
'''--- src/app/components/routes/authenticate/authenticate.component.html ---
<h1>Get Started !</h1>
<h2>
    <ol>
        <li>Connect to <a href="https://www.arweave.org/" target="_blank">Arweave</a></li>
        <li>Choose the blockchain you want to use (<a href="https://ethereum.org" target="_blank">Ethereum</a> or <a href="https://nearprotocol.com" target="_blank">NEAR</a>)</li>
        <li>Connect to the chosen blockchain</li>
    </ol>
</h2>
<!-- <mat-vertical-stepper>
    <mat-step label="{{arweaveStepLabel}}">
        <div fxLayout="column">
            <div fxFlex>
                <app-arweave-connect></app-arweave-connect>
            </div>
            <div fxFlex>
                <button mat-button class="button" matStepperNext>
                    <mat-icon>keyboard_arrow_down</mat-icon>
                    <span>Next</span>
                </button>
            </div>
        </div>
    </mat-step>
    <mat-step label="{{ethereumStepLabel}}">
        <div fxLayout="column">
            <div fxFlex>
                <app-ethereum-connect></app-ethereum-connect>
            </div>
            <div>
                <button mat-button class="button" matStepperPrevious>
                <mat-icon>keyboard_arrow_up</mat-icon>
                <span>Back</span>
            </button>
            </div>
        </div>
    </mat-step>
</mat-vertical-stepper> -->
<app-profile-details></app-profile-details>

<button mat-raised-button class="button" [disabled]="!isAuthenticated" (click)="letsgo()">Let's Go!</button>
'''
'''--- src/app/components/routes/authenticate/authenticate.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { AuthenticateComponent } from './authenticate.component';

describe('AuthenticateComponent', () => {
  let component: AuthenticateComponent;
  let fixture: ComponentFixture<AuthenticateComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ AuthenticateComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(AuthenticateComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/routes/authenticate/authenticate.component.ts ---
import { Component, OnInit } from '@angular/core';
import { ArweaveService } from 'src/app/arweave/arweave.service';
import { EthService } from 'src/app/ethereum/eth.service';
import { AuthenticateService } from 'src/app/authenticate/authenticate.service';
import { ActivatedRoute, Router } from '@angular/router';
import { MAT_DIALOG_DATA } from '@angular/material/dialog';

@Component({
  selector: 'app-authenticate',
  templateUrl: './authenticate.component.html',
  styleUrls: ['./authenticate.component.scss'],
  providers: [
    { provide: MAT_DIALOG_DATA, useValue: {} },
  ]
})
export class AuthenticateComponent implements OnInit {

  isAuthenticated = false;
  returnUrl: string;

  constructor(
    public authenticateService: AuthenticateService,
    private route: ActivatedRoute,
    private router: Router

  ) { }

  ngOnInit(): void {
    // get return url from route parameters or default to '/'
    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';

    this.authenticateService.isAuthenticated().subscribe((isAuth) => {
      this.isAuthenticated = isAuth;
    });
  }

  letsgo() {
    if (this.isAuthenticated) {
      this.router.navigate([this.returnUrl]);
    }
  }

}

'''
'''--- src/app/components/routes/doc-checker/doc-checker.component.html ---
<div>
    <app-material-file-select #fileSelector [autoOpen]="false" (fileSelected)="onFileSelected($event)"></app-material-file-select>
    <mat-form-field *ngIf="docInstance" class="hash">
        <input fxFlex matInput readonly required placeholder="Document Fingerprint (hash)" value="{{docInstance.hash}}">
    </mat-form-field>
    <div *ngIf="fileSelector.selectedFile && !docMetaData" fxLayout="column">
        <div fxFlex class="section">
            <h3 style="background-color: red;">Document not found!</h3>
        </div>
    </div>
    <div *ngIf="docMetaData" fxLayout="column">
        <div fxFlex class="section">
            <h3 style="background-color: green;">Document found!</h3>
        </div>
        <div fxFlex class="section">
            <mat-label class="label">Matching Version:</mat-label>
            <div fxFlex class="property">
                <div class="version">version:{{docMetaData.version}}</div>
            </div>
        </div>
    </div>
    <div *ngIf="collectionData">
        <app-document-details [document]="collectionData"></app-document-details>
    </div>
</div>

'''
'''--- src/app/components/routes/doc-checker/doc-checker.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { DocCheckerComponent } from './doc-checker.component';

describe('DocCheckerComponent', () => {
  let component: DocCheckerComponent;
  let fixture: ComponentFixture<DocCheckerComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ DocCheckerComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(DocCheckerComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/routes/doc-checker/doc-checker.component.ts ---
import { Component, OnInit } from '@angular/core';
import { DocMetaData } from 'src/app/_model/DocMetaData';
import { DocInstance } from 'src/app/_model/DocInstance';
import { LibraryService } from 'src/app/library/library.service';
import { DocCollectionData } from 'src/app/_model/DocCollectionData';

@Component({
  selector: 'app-doc-checker',
  templateUrl: './doc-checker.component.html',
  styleUrls: ['./doc-checker.component.scss']
})
export class DocCheckerComponent implements OnInit {

  docInstance: DocInstance = undefined;
  collectionData: DocCollectionData = undefined;
  docMetaData: DocMetaData = undefined;

  constructor(
    private libraryService: LibraryService
  ) { }

  ngOnInit(): void {}

  onFileSelected(file: File) {
    if (file === undefined) {
      this.docInstance = undefined;
      this.collectionData = undefined;
      this.docMetaData = undefined;
      return;
    }
    const filename = file.name;
    console.log(`onFileSelected(${filename})`);
    this.docInstance = new DocInstance();
    this.docInstance.readFromFile(file, (result) => {
      if (result) {
        console.log("read file completed");
        console.log("hash:", this.docInstance.hash);
        this.docMetaData = this.libraryService.findDocumentByHash(this.docInstance.hash);
        if (this.docMetaData) {
          this.collectionData = this.libraryService.findCollectionByDocId(this.docMetaData.docId);
        } else {
          this.collectionData = undefined;
        }
        console.log("docData", this.docMetaData);
      } else { // read file failed
        this.collectionData = undefined;
        this.docMetaData = undefined;
      }
    });
  }
}

'''
'''--- src/app/components/routes/download/download.component.html ---

'''
'''--- src/app/components/routes/download/download.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { DownloadComponent } from './download.component';

describe('DownloadComponent', () => {
  let component: DownloadComponent;
  let fixture: ComponentFixture<DownloadComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ DownloadComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(DownloadComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/routes/download/download.component.ts ---
import { Component, OnInit } from '@angular/core';
import { ArweaveService } from 'src/app/arweave/arweave.service';
import { LibraryService } from 'src/app/library/library.service';
import { Router, ActivatedRoute } from '@angular/router';
import { MatDialog } from '@angular/material/dialog';
import { ConfirmDialogComponent } from '../../confirm-dialog/confirm-dialog.component';

const displayDialog = false;

@Component({
  selector: 'app-download',
  templateUrl: './download.component.html',
  styleUrls: ['./download.component.scss']
})
export class DownloadComponent implements OnInit {

  constructor(
    private dialog: MatDialog,
    private arweaveService: ArweaveService,
    private libraryService: LibraryService,
    private router: Router,
    private route: ActivatedRoute
  ) { }

  ngOnInit(): void {
    console.log("DownloadComponent route", this.route);
    this.route.params.subscribe(p => {
      console.log('p',p);
      const docId = p.docId;
      const txId = p.txId;
      const title = p.title;
      const version = p.version;
      console.log("DownloadComponent docId", docId, "version", version, "txId", txId);
      if (displayDialog) {
        const confirmDialogRef = this.dialog.open(ConfirmDialogComponent, {
          width: '350px',
          data: {
            title: "Download Document",
            message: `downloading document ${docId} in version ${version}`,
            actions: [
              {text: 'Yes', result: true},
            ]
          }
        });
        confirmDialogRef.afterClosed().subscribe(result => {
          this.router.navigate(this.route.snapshot.parent.url);
        });
      } else {
        let filename = title;
        const idx = filename.lastIndexOf('.');
        if (idx > 0) {
          filename = filename.slice(0,idx) + '_v' + version + filename.slice(idx);
         } else {
          filename = filename + '_v' + version;
         }
        this.arweaveService.downloadVersion(txId, filename);
        this.router.navigate(this.route.snapshot.parent.url);
      }
    });
  }

}

'''
'''--- src/app/components/routes/help/help.component.html ---
<h1>
    <ul>
        <li><a routerLink='/'>What is DecentraDocs ?</a></li>
        <li><a href="../assets/help/DCD_connection.pdf" target="_blank">How to login ?</a></li>
        <li><a href="../assets/help/DCD_publish.pdf" target="_blank">How to publish a document ?</a></li>
        <li><a href="../assets/help/DCD_publish_new_version.pdf" target="_blank">How to publish a new version of a document ?</a></li>
        <li><a href="../assets/help/DCD_search.pdf" target="_blank">How to search in the global library ?</a></li>
        <li><a href="../assets/help/DCD_subscribe.pdf" target="_blank">How to subscribe to a document ?</a></li>
        <li><a href="../assets/help/DCD_accesscontrol.pdf" target="_blank">How to give permission to a restricted document ?</a></li>
    </ul>
</h1>

'''
'''--- src/app/components/routes/help/help.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { HelpComponent } from './help.component';

describe('HelpComponent', () => {
  let component: HelpComponent;
  let fixture: ComponentFixture<HelpComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ HelpComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(HelpComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/routes/help/help.component.ts ---
import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-help',
  templateUrl: './help.component.html',
  styleUrls: ['./help.component.scss']
})
export class HelpComponent implements OnInit {

  constructor() { }

  ngOnInit(): void {
  }

}

'''
'''--- src/app/components/routes/home/home.component.html ---
<div class="title">
    <h1>Welcome to
        <div class="decentradocs">
            <img width="50" alt="DCD" src="../assets/DecentraDocs.png" />
            <span>DecentraDocs</span>
        </div>
    </h1>
</div>
<div class="home">
    <h2>
        What is <img height="18" alt="DCD" src="../assets/DecentraDocs.png" /> <span class="decentradocs">DecentraDocs</span>?
    </h2>
    <p><img height="18" alt="DCD" src="../assets/DecentraDocs.png" /> <span class="decentradocs">DecentraDocs</span> is a decentralized, application (dAPP) providing a “cloud” opened platform that enables people and organizations to store, share, market
        and manage all kind of documents in the “PermaWeb”.</p>
    <p>In some ways, <img height="18" alt="DCD" src="../assets/DecentraDocs.png" /> <span class="decentradocs">DecentraDocs</span> could be seen as a World-Wide Library.</p>
    <img src="../assets/library-1.jpg" height="250px">

    <h2>
        What is the <b>"Permaweb"</b>?
    </h2>
    <img src="../assets/Arweave-Permaweb-1.png" height="250px;">
    <p>Build on top of the <a href="https://www.arweave.org/#arweave-intro" target="_blank">Arweave network</a>, the <b>permaweb</b> is “a global, community-owned web that anyone can contribute to or get paid to maintain.</p>
    <p> The <b>permaweb</b> looks just like the normal web, but all of its content – from images to full web apps – is permanent, retrieved quickly, and decentralized – forever. Just as the first web connected people over vast distances, the <b>permaweb</b>        connects people over extremely long periods of time.”</p>
    <p> It means the document stored with <img height="18" alt="DCD" src="../assets/DecentraDocs.png" /> <span class="decentradocs">DecentraDocs</span> will stay available forever, for every user allowed to access it, without running cost (storage costs are
        paid upfront, for 100+ years!), without risk of loss, tampering or censorship.
    </p>
    <h2>
        What does <b><em>decentralized</em></b> mean?
    </h2>
    <p>While a traditional storage server may fail, can tamper stored information (intentionally or not) or can deny access, the decentralized storage solutions run without any central authority or single point of failure offering, by design: <b>resilience</b>,
        <b>immutability</b>, <b>censorship resistance</b> and <b>openness</b>.</p>
    <p>However, the consensus protocol on the decentralized networks provides a trustless mechanism to certify <b>authenticity</b> of the stored information.</p>
    <img src="../assets/decentralized-1.png" height="150px">
    <!-- <h2>
        What does <img height="18" alt="DCD" src="../assets/DecentraDocs.png" /> <span class="decentradocs">DecentraDocs</span> feature right now?
    </h2> -->
    <h2>
        Yet another <i>cloud storage service</i>? So what?
    </h2>
    <p><img height="18" alt="DCD" src="../assets/DecentraDocs.png" /> <span class="decentradocs">DecentraDocs</span> is built on top of:</p>
    <ul>
        <li>the
            <a href="https://www.arweave.org/#arweave-intro" target="_blank"><img height="18" alt="" src="../assets/arweave-logo-1-crop.png" />Arweave network</a> providing the storage platform for managed documents (permaweb)</li>
        <li>a couple of smart contracts (available on both
            <a href="https://ethereum.org" target="_blank"><img height="18" alt="" src="../assets/eth-logo-1.png" />Ethereum</a> or
            <a href="https://nearprotocol.com" target="_blank"><img height="18" alt="" src="../assets/near_logo_crop.png" />NEAR Protocol</a> blockchains): providing the document access control and subscription features</li>
    </ul>
    <img src="../assets/document-information.png" height="250px">
    <p>Hence, it’s not only a world-wide shared hard drive and is quite different from the usual “cloud storage service”, in 2 main aspects:</p>
    <ol>
        <li>First, because the decentralized architecture guarantees the provided services and specifications don’t rely on any third-party or central authority</li>

        <li>Secondly, because this architecture also provides exclusive document management services like:

            <ul>
                <li>
                    <h3>Version Control</h3>
                    <img src="../assets/version-control-1.jpg" height="250px">
                    <p>Each time you make a change in a document, then you update your publication in <img height="18" alt="DCD" src="../assets/DecentraDocs.png" /> <span class="decentradocs">DecentraDocs</span>, a <b>new version</b> of your document will
                        be created</p>
                    <p>Every version of your document remains accessible forever, hence you have a complete tracability of your document history</p>
                    <img src="../assets/history-revision-1.png" height="250px">
                </li>
                <li>
                    <h3>Search Engine and Proof of Authenticty (PoA)</h3>
                    The <b>Search Engine</b> allow to search per:
                    <ul>
                        <li>author</li>
                        <li>keyword in title</li>
                        <li>keyword in description</li>
                    </ul>
                    <img src="../assets/Terminology-document-1600x1024.jpg" height="150px">
                    <p>The <b>Doc Checker</b> allows to search in the Library if a given document already exists.</p>
                    <p>This feature is very useful when your document has been copied to be shared with others: Given a copy, the doc checker retrieve which publication and which version it corresponds to. </p>
                    <img src="../assets/business-paperwork-1.jpg" height="250px">
                    <p>The Doc Checker can also be used to <b>certify the authenticity</b> of any document.</p>
                    <img src="../assets/authentic-1.jpg" height="150px">
                </li>
                <li>
                    <h3>Access Control</h3>
                    <img src="../assets/32134175-access-granted-denied-stamp.jpg" height="150px">
                    <p>When a document is published, the following option are available:</p>
                    <ul>
                        <li>
                            <h4>Public</h4>
                            <p>The document can be downloaded by any user</p>
                        </li>
                        <li>
                            <h4>Restricted</h4>
                            The document can be downloaded only by permissionned users
                        </li>
                    </ul>
                    <p>After a restricted document is published, the author can still update the authorizations to allow/deny some users.</p>
                    <p>When permission is granted to a user for a given document, it applies to all versions (past and future).</p>
                </li>
                <li>
                    <h3>Subscription/Monetization Services</h3>
                    <img src="../assets/monetize-1.jpg" height="250px">
                    <p>A restricted document can also be monetized: the author set the price for users to pay if they want to download the publication.</p>
                    <p>When a user has subscribed to a given document, it applies to all versions (past and future).</p>
                </li>
            </ul>
        </li>
    </ol>
    <h2>
        Why should I need to use <img height="18" alt="DCD" src="../assets/DecentraDocs.png" /> <span class="decentradocs">DecentraDocs</span>?
    </h2>
    <p>Whatever if you’re an individual or an organization, <img height="18" alt="DCD" src="../assets/DecentraDocs.png" /> <span class="decentradocs">DecentraDocs</span> is very useful as soon as you’re interested in:</p>
    <ul>
        <li>Storing (and share) documents forever,</li>
        <li>Keeping track of each version,</li>
        <li>Setting up a subscription process for customers to access your publications,</li>
        <li>Monetizing your publications,</li>
        <li>Authentify/certifying any copy of a document.</li>
    </ul>
    <img src="../assets/Information-Search.jpg" height="250px">
    <p>Here is a non-exhaustive list of what you can (should) manage in <img height="18" alt="DCD" src="../assets/DecentraDocs.png" /> <span class="decentradocs">DecentraDocs</span>:</p>
    <ul>
        <li>Office templates</li>
        <li>Images</li>
        <li>Music sheets</li>
        <li>Artworks</li>
        <li>Food recipes</li>
        <li>Product datasheets</li>
        <li>E-books</li>
        <li>Regulations</li>
        <li>Accounting reports</li>
        <li>KPI reports</li>
        <li>&hellip;</li>
    </ul>
    <h2>
        How much does it cost?
    </h2>
    <img src="../assets/6a0120a85dcdae970b01a3fcc55683970b-800wi.png" height="250px;">
    <p>Blockchain networks need contributions from users in order to work and last in the long term. That’s why there are a few fees when performing transactions.</p>
    <p>Here are the fees associated with common actions in <img height="18" alt="DCD" src="../assets/DecentraDocs.png" /> <span class="decentradocs">DecentraDocs</span>:</p>
    <table border="1" cellpadding="10">
        <tr>
            <th>User Role</th>
            <th>Action</th>
            <th>Fees</th>
        </tr>
        <tr>
            <td>Document Publisher</td>
            <td>Publish a Document (1st version)</td>
            <td>Arweave gas + Eth/Near gas</td>
        </tr>
        <tr>
            <td>Document Publisher</td>
            <td>Publish a new version of a Document</td>
            <td>Arweave gas</td>
        </tr>
        <tr>
            <td>Document Publisher</td>
            <td>Change Access Control rules</td>
            <td>Eth/Near gas</td>
        </tr>
        <tr>
            <td>Reader</td>
            <td>Browse over documents in Global Library</td>
            <td>no fee</td>
        </tr>
        <tr>
            <td>Reader</td>
            <td>Download a given version of a document (assuming the user is authorized or the document is public)</td>
            <td>no fee</td>
        </tr>
        <tr>
            <td>Reader</td>
            <td>Subscribe to a Document</td>
            <td>Eth/Near gas</td>
        </tr>
    </table>
    <p></p>
    <h2>
        What would <img height="18" alt="DCD" src="../assets/DecentraDocs.png" /> <span class="decentradocs">DecentraDocs</span> feature later?
    </h2>
    <p>DecentraDocs is only on its early stage. Here is a list of features that could be added next:</p>
    <ul>
        <li>Dedicated fungible token to manage subscription fees</li>
        <li>Dedicated non-fungible token to manage access control</li>
        <li>Categories of documents to classify in library (for instance: ‘regulations’, ‘food recipes’, ‘templates’, …)</li>
        <li>Folders (gathering a list of documents), allowing a reader to subscribe to the folder itself</li>
        <li>Multi-authoring (or delegation)</li>
        <li>Rating/reviews of publications from subscribers</li>
        <li>Notification system (for instance, when a new version is available)</li>
        <li>Document Signing/Approval process</li>
        <li>Diff viewer (between 2 versions)</li>
        <li>Advanced Document Workflows</li>
        <li>&hellip;</li>
    </ul>
    <h2>
        Try <img height="18" alt="DCD" src="../assets/DecentraDocs.png" /> <span class="decentradocs">DecentraDocs</span> now!
    </h2>

</div>

'''
'''--- src/app/components/routes/home/home.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { HomeComponent } from './home.component';

describe('HomeComponent', () => {
  let component: HomeComponent;
  let fixture: ComponentFixture<HomeComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ HomeComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(HomeComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/routes/home/home.component.ts ---
import { Component, OnInit } from '@angular/core';
import { MatDialog } from '@angular/material/dialog';
import { ConfirmDialogComponent } from '../../confirm-dialog/confirm-dialog.component';
import { VersionControlComponent } from '../../help/version-control/version-control.component';

@Component({
  selector: 'app-home',
  templateUrl: './home.component.html',
  styleUrls: ['./home.component.scss']
})
export class HomeComponent implements OnInit {

  constructor(
    private dialog: MatDialog
  ) { }

  ngOnInit(): void {
  }

  showVersionControl() {
    const confirmDialogRef = this.dialog.open(VersionControlComponent, {
      width: '80%',
      height: '75%',
      data: {
      }
    });

  }

}

'''
'''--- src/app/components/routes/my-documents/my-documents.component.html ---
<div fxLayout="row" fxLayoutAlign="start center">
    <div>
        <h1>My Documents</h1>
    </div>
    <div>
        <mat-icon matTooltip='Refresh the library' (click)="refreshLibrary()" style="cursor: pointer; padding-left: 8px; padding-bottom: 16px;">refresh</mat-icon>
    </div>
</div>
<mat-drawer-container #container id="container" class="example-container" (click)="onContainerClick($event)">
    <app-document-list #docList [documents]="allCollections" (onSelectDoc)="select($event)"></app-document-list>
    <mat-drawer #drawer class="example-sidenav" mode="side" position="end">
        <div #docPanelTitle></div>
        <div>
            <mat-icon class="button-icon" (click)="drawer.close()">close</mat-icon>
        </div>
        <app-document-details #docDetails style="width: 20%;"></app-document-details>
    </mat-drawer>
</mat-drawer-container>
<!-- <div class="example-container">
    <app-document-list [documents]="allCollections" (onSelectDoc)="select($event)"></app-document-list>
    <mat-drawer #drawer class="example-sidenav" mode="side" position="end">
        <div #docPanelTitle></div>
        <div>
            <mat-icon (click)="drawer.close()">close</mat-icon>
        </div>
        <app-document-details #docDetails></app-document-details>
    </mat-drawer>
</div> -->
'''
'''--- src/app/components/routes/my-documents/my-documents.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { MyDocumentsComponent } from './my-documents.component';

describe('MyDocumentsComponent', () => {
  let component: MyDocumentsComponent;
  let fixture: ComponentFixture<MyDocumentsComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ MyDocumentsComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(MyDocumentsComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/routes/my-documents/my-documents.component.ts ---
import { Component, OnInit, ViewChild } from '@angular/core';
import { MatDrawer } from '@angular/material/sidenav';
import { DocumentDetailsComponent } from '../../document-details/document-details.component';
import { LibraryService } from 'src/app/library/library.service';
import { DocCollectionData } from 'src/app/_model/DocCollectionData';
import { DocumentListComponent } from '../../document-list/document-list.component';
import { ArweaveService } from 'src/app/arweave/arweave.service';
import { DVSRegistry } from 'src/app/ethereum/DVSRegistry';
import { EthService } from 'src/app/ethereum/eth.service';
import { DvsService } from 'src/app/ethereum/dvs.service';
import { DocService } from 'src/app/doc-manager/doc.service';

@Component({
  selector: 'app-my-documents',
  templateUrl: './my-documents.component.html',
  styleUrls: ['./my-documents.component.scss']
})
export class MyDocumentsComponent implements OnInit {
  allCollections: DocCollectionData[];
  @ViewChild('drawer', {static: false})
  drawer: MatDrawer;
  @ViewChild('docDetails', {static: false})
  docDetails: DocumentDetailsComponent;
  @ViewChild('docList', {static: false})
  docList: DocumentListComponent;

  constructor(
    private library: LibraryService,
    private ethService: EthService,
    private docService: DocService
  ) { }

  ngOnInit(): void {
    this.library.libraryCollections.subscribe((collections: DocCollectionData[]) => {
      this.allCollections = collections.filter((coll: DocCollectionData) => this.filterCollection(coll));
    });
    this.library.refresh();
  }

  select(event: any) {
    console.log("selected doc", event);
    this.drawer.open();
    this.docDetails.document = event.document;
  }

  onContainerClick(event) {
    if (event.target.nodeName === 'MAT-DRAWER-CONTENT') {
      console.log('container click');
      this.drawer.close();
      this.docDetails.document = undefined;
      this.docList.selectedDoc = undefined;
    }
  }

  private filterCollection(coll: DocCollectionData): boolean {
    return this.docService.isInMyLibrary(coll);
  }

  refreshLibrary() {
    this.library.refresh().then((collections) => {
      this.allCollections = collections.filter((coll: DocCollectionData) => this.filterCollection(coll));
    }).catch(err => {
    });
  }
}

'''
'''--- src/app/components/routes/publish/publish.component.html ---

'''
'''--- src/app/components/routes/publish/publish.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { PublishComponent } from './publish.component';

describe('PublishComponent', () => {
  let component: PublishComponent;
  let fixture: ComponentFixture<PublishComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ PublishComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(PublishComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/routes/publish/publish.component.ts ---
import { v4 as uuid } from 'uuid';
import { Component, OnInit } from '@angular/core';
import { MatDialogRef, MatDialog, MatDialogConfig } from '@angular/material/dialog';
import { DocumentUploadFormComponent } from '../../document-upload-form/document-upload-form.component';
import { Router, ActivatedRoute } from '@angular/router';
import { DvsService } from 'src/app/ethereum/dvs.service';
import { ArweaveService } from 'src/app/arweave/arweave.service';
import { TransactionsService, eTransationStatus } from 'src/app/arweave/transactions.service';
import { LibraryService } from 'src/app/library/library.service';
import { DocMetaData } from 'src/app/_model/DocMetaData';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';
import { EthService } from 'src/app/ethereum/eth.service';
import { PUBLIC_KEY } from 'src/app/doc-manager/doc.service';
import { MatSnackBar } from '@angular/material/snack-bar';
import { IDecentraDocsContract } from 'src/app/blockchain/IDecentraDocsContract';
import { BlockchainService } from 'src/app/blockchain/blockchain.service';

@Component({
  selector: 'app-publish',
  templateUrl: './publish.component.html',
  styleUrls: ['./publish.component.sass']
})
export class PublishComponent implements OnInit {

  docMetadata: DocMetaData;
  txId = '';
  status: eTransationStatus = eTransationStatus.UNKNOWN;

  constructor(
    private dvs: DvsService,
    private arweaveService: ArweaveService,
    private ethService: EthService,
    private blockchainService: BlockchainService,
    private arTransactionsService: TransactionsService,
    private libraryService: LibraryService,
    private router: Router,
    private dialog: MatDialog,
    private route: ActivatedRoute,
    private _snackBar: MatSnackBar
  ) { }

  ngOnInit(): void {
    this.route.params.pipe(map(p => p.docId)).subscribe(docId => this.showUploadDocumentForm(docId));
    if (this.route.outlet === "primary") {
      this.router.navigate(['/mydocuments']);
    } else {
      this.router.navigate(this.route.snapshot.parent.url);
    }
  }

  showUploadDocumentForm(docId?: string) {
    const dialogConfig = new MatDialogConfig();

    let title = '';
    let version = 1;
    let description = '';
    let collection = undefined;
    if (docId) {
      collection = this.libraryService.findCollectionByDocId(docId);
      if (collection) {
        title = collection.title;
        version = collection.latestVersion + 1;
        description = collection.getDataForLatestVersion().description;
      }
    }

    dialogConfig.disableClose = true;
    dialogConfig.width = '650px';
    dialogConfig.height = '80%';
    dialogConfig.autoFocus = true;
    dialogConfig.data = {
      docId,
      title,
      author: this.arweaveService.address,
      version,
      description,
      canChangeVersion: false,
      docInstance: undefined
    }  ;
    const dialogRef = this.dialog.open(DocumentUploadFormComponent, dialogConfig);
    dialogRef.afterClosed().subscribe(
      data => {
        console.log("after close upload document form", data);
        if (data && data.docInstance) {
          this.docMetadata = new DocMetaData(
            data.docId,
            data.author,
            data.title,
            data.version,
            data.docInstance.hash,
            data.description,
            data.docInstance.lastModified,
            Date.now());

          const accessKey = (data.restricted) ? uuid() : PUBLIC_KEY;
          const subscriptionFee: number = +data.subscriptionFee;
          const authorizedAddresses = data.authorizedAddresses;
          const existingCollection = data.existingCollection;
          this._snackBar.open('Uploading document to Permaweb ...');
          this.arweaveService.uploadDocument(this.docMetadata, data.docInstance).then((txId: string) => {
            console.log("upload done", JSON.stringify(this.docMetadata), txId);
            let registerPromise;
            if (existingCollection) {
              registerPromise = new Promise((resolve, reject) => resolve());
            } else {
              registerPromise = new Promise((resolve, reject) => {
                this.dvs.getContract().then((decentraDocsContract: IDecentraDocsContract) => {
                  resolve(decentraDocsContract.registerDoc(this.docMetadata.docId, accessKey, subscriptionFee, authorizedAddresses));
                }).catch(err => reject(err));
              });
            }
            this._snackBar.open('Connecting contract... Please validate transaction !');
            registerPromise.then(() => {
              this._snackBar.open('Transaction sent.', '', {duration: 2000});
              console.log("dvsRegistry has registered new doc", this.docMetadata.docId);
              this.libraryService.getCollectionOrCreate(
                this.docMetadata,
                {
                  accessKey,
                  subscriptionFee,
                  authorEthAccount: this.blockchainService.currentAccountValue,
                  authorizedAccounts: authorizedAddresses
                }
              ).then((collection) => {
                this.libraryService.addInLibrary(this.docMetadata, txId, collection).then(() => {
                  this._snackBar.dismiss();
                }).catch(err => { // add in library failed
                  console.error(err);
                  this._snackBar.open('Unexpected error when adding document to library', 'ERROR', {
                    duration: 2000,
                  });
                });
              }).catch(err => { // get collection failed
                console.error(err);
                this._snackBar.open('Unexpected error when creating document in library', 'ERROR', {
                  duration: 2000,
                });
              });
            }).catch(err => {
              console.error(err);
              this._snackBar.open('Transaction failed', 'ERROR', {
                duration: 2000,
              });
            });
          }).catch(err => {
            console.error(err);
            this._snackBar.open('Uploading failed', 'ERROR', {
              duration: 2000,
            });
          });
        }
      }
    );
  }

  checkUploadedFile(txId: string) {
    this.arweaveService.getTxStatus(txId).then((status) => {
      console.log("Tx status", status);
    });
    this.arweaveService.downloadVersion(txId).then((filename: string) => {
      console.log('result', filename);
    });
  }

  checkTx(txId: string) {
    this.txId = txId;
    this.arTransactionsService.watchTx(
        txId,
        [eTransationStatus.CONFIRMED, eTransationStatus.FAILED],
        5,
        (status: eTransationStatus) => {
          this.status = status;
        }
      );
  }

}

'''
'''--- src/app/components/routes/search/search.component.html ---
<div fxLayout="row" fxLayoutAlign="start center">
    <div>
        <h1>Search in PermaLibrary</h1>
        <h4>(total: {{allCollections.length}} documents)</h4>
    </div>
    <div>
        <mat-icon matTooltip='Refresh the library' (click)="refreshLibrary()" style="cursor: pointer; padding-left: 8px; padding-bottom: 16px;">refresh</mat-icon>
    </div>
</div>
<mat-drawer-container class="example-container" autosize>
    <!-- <h1>Search in PermaLibrary</h1> -->
    <form [formGroup]="form" (ngSubmit)="submit(form)">
        <div class="filter">
            <h3>Select your Filter Criteria</h3>
            <mat-dialog-content>
                <div fxLayout="row" fxLayout.xs="column" fxLayoutWrap fxLayoutAlign="top">
                    <div fxFlex fxLayout="column" style="width: 20em;">
                        <div class="author-filter">
                            <h4>Author:</h4>
                            <mat-slide-toggle #filterByAuthor class="" formControlName="filterByAuthor">
                                <mat-label *ngIf="!filterByAuthor.checked">All</mat-label>
                            </mat-slide-toggle>
                            <mat-select *ngIf="filterByAuthor.checked" placeholder="Author" formControlName="author" class="author-select">
                                <mat-option *ngFor="let author of allAuthors" [value]="author">
                                    {{author}}
                                </mat-option>
                            </mat-select>
                        </div>
                        <div class="keywords-filter">
                            <h4>Keywords</h4>
                            <div fxLayout="row">
                                <mat-form-field fxFlex>
                                    <mat-label>Enter some keywords</mat-label>
                                    <mat-chip-list #keywordsList aria-label="Keywords">
                                        <mat-chip *ngFor="let keyword of keywords" [selectable]="true" [removable]="true" (removed)="removeKeyword(keyword)">
                                            {{keyword}}
                                            <mat-icon matChipRemove>cancel</mat-icon>
                                        </mat-chip>
                                        <input placeholder="New keyword..." [matChipInputFor]="keywordsList" [matChipInputSeparatorKeyCodes]="separatorKeysCodes" [matChipInputAddOnBlur]="true" (matChipInputTokenEnd)="addKeyword($event)">
                                    </mat-chip-list>
                                    <!-- <input required #keywords matInput placeholder="Enter Some Keywords" formControlName="keywords"> -->
                                </mat-form-field>
                                <section fxFlex class="searchin-section">
                                    <div fxLayout="column">
                                        <div fxFlex>search in:</div>
                                        <mat-checkbox fxFlex class="searchin-margin" formControlName="searchInTitles">Titles</mat-checkbox>
                                        <mat-checkbox fxFlex class="searchin-margin" formControlName="searchInDescriptions">Descriptions</mat-checkbox>
                                        <mat-checkbox fxFlex disabled class="searchin-margin" formControlName="searchInContents">Content (public docs only)</mat-checkbox>
                                    </div>
                                </section>
                            </div>
                        </div>
                    </div>
                </div>
            </mat-dialog-content>
            <div>
                <button mat-button class="button">
              <mat-icon>search</mat-icon>
              <span>Search</span>
            </button>
            </div>
        </div>
    </form>
    <div class="results">
        <h2>Results:</h2>
        <app-document-list [documents]="searchResults" (onSelectDoc)="select($event)"></app-document-list>
    </div>
    <!-- <div class="card card-small " tabindex="0 " [routerLink]="[{ outlets: { publish: ['publish'] } }]">
        <mat-icon>publish</mat-icon>
        <span>Publish</span>
    </div> -->
    <mat-drawer #drawer class="example-sidenav" mode="side" position="end">
        <div #docPanelTitle></div>
        <div>
            <mat-icon class="button-icon" (click)="drawer.close()">close</mat-icon>
        </div>
        <app-document-details #docDetails></app-document-details>
    </mat-drawer>

</mat-drawer-container>
'''
'''--- src/app/components/routes/search/search.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { SearchComponent } from './search.component';

describe('SearchComponent', () => {
  let component: SearchComponent;
  let fixture: ComponentFixture<SearchComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ SearchComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(SearchComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/routes/search/search.component.ts ---
import { Component, OnInit, ViewChild } from '@angular/core';
import { FormGroup, FormBuilder, AbstractControl } from '@angular/forms';
import { LibraryService } from 'src/app/library/library.service';
import { DocCollectionData } from 'src/app/_model/DocCollectionData';
import {COMMA, ENTER} from '@angular/cdk/keycodes';
import { MatChipInputEvent } from '@angular/material/chips';
import { MatDrawer } from '@angular/material/sidenav';
import { DocumentDetailsComponent } from '../../document-details/document-details.component';

@Component({
  selector: 'app-search',
  templateUrl: './search.component.html',
  styleUrls: ['./search.component.scss']
})
export class SearchComponent implements OnInit {
  form: FormGroup;
  allAuthors: string[];
  allCollections: DocCollectionData[];
  readonly separatorKeysCodes: number[] = [ENTER, COMMA];
  keywords: string[] = [];
  searchResults: DocCollectionData[] = [];
  @ViewChild('drawer', {static: false})
  drawer: MatDrawer;
  @ViewChild('docDetails', {static: false})
  docDetails: DocumentDetailsComponent;

  constructor(
    private library: LibraryService,
    private fb: FormBuilder,

  ) {
    // this.form = new FormGroup({
    //   author: ''
    // });
    this.form = this.fb.group({
      filterByAuthor: false,
      author: '',
      keywords: [],
      searchInTitles: true,
      searchInDescriptions: true,
      searchInContents: false
    });
  }

  ngOnInit(): void {
    // this.library.collections.subscribe((collections: DocCollectionData[]) => {
    //   this.library.getAuthors().subscribe((authors: string[]) => {
    //     this.allAuthors = authors;
    //   });
    //   this.allCollections = collections;
    // });
    this.library.libraryCollections.subscribe((collections: DocCollectionData[]) => {
      this.allCollections = collections;
      this.allAuthors = this.library.authors;
    });
    this.library.refresh();

  }

  submit(form: FormGroup) {
    console.log("Search: submit form");
    form.patchValue({keywords: this.keywords});
    this.searchResults = this.allCollections.filter((coll: DocCollectionData) => this.filterCollection(coll, form.controls));
  }

  addKeyword(event: MatChipInputEvent): void {
    const input = event.input;
    const value = event.value;

    // Add our fruit
    if ((value || '').trim()) {
      this.keywords.push(value.trim());
    }

    // Reset the input value
    if (input) {
      input.value = '';
    }
  }

  removeKeyword(keyword: string): void {
    const index = this.keywords.indexOf(keyword);

    if (index >= 0) {
      this.keywords.splice(index, 1);
    }
  }

  select(event: any) {
    console.log("selected doc", event);
    this.drawer.open();
    this.docDetails.document = event.document;
  }

  filterCollection(coll: DocCollectionData, controls: { [key: string]: AbstractControl }): boolean {
    // return (coll: DocCollectionData) => {
      let result = true;
      if (controls.filterByAuthor.value) {
        result = coll.getDataForLatestVersion().author === controls.author.value;
      }
      if (result && (controls.keywords.value.length > 0)) {
        result = false;
        for (let keyword of controls.keywords.value) {
          if (controls.searchInTitles.value) {
            if (coll.title.includes(keyword)) {
              result = true;
              break;
            }
          }
          if (controls.searchInDescriptions.value) {
            if (coll.getDataForLatestVersion().description.includes(keyword)) {
              result = true;
              break;
            }
          }
        }
      }
      return result;
    // };
  }

  refreshLibrary() {
    this.library.refresh().then((collections) => {
      this.allCollections = collections;
      this.allAuthors = this.library.authors;
    }).catch(err => {
    });
  }

}

'''
'''--- src/app/components/routes/shared-documents/shared-documents.component.html ---
<p>shared-documents works!</p>

'''
'''--- src/app/components/routes/shared-documents/shared-documents.component.spec.ts ---
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { SharedDocumentsComponent } from './shared-documents.component';

describe('SharedDocumentsComponent', () => {
  let component: SharedDocumentsComponent;
  let fixture: ComponentFixture<SharedDocumentsComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ SharedDocumentsComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(SharedDocumentsComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

'''
'''--- src/app/components/routes/shared-documents/shared-documents.component.ts ---
import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-shared-documents',
  templateUrl: './shared-documents.component.html',
  styleUrls: ['./shared-documents.component.sass']
})
export class SharedDocumentsComponent implements OnInit {

  constructor() { }

  ngOnInit(): void {
  }

}

'''
'''--- src/app/doc-manager/doc.service.spec.ts ---
import { TestBed } from '@angular/core/testing';

import { DocService } from './doc.service';

describe('DocService', () => {
  let service: DocService;

  beforeEach(() => {
    TestBed.configureTestingModule({});
    service = TestBed.inject(DocService);
  });

  it('should be created', () => {
    expect(service).toBeTruthy();
  });
});

'''
'''--- src/app/doc-manager/doc.service.ts ---
import { Injectable } from '@angular/core';
import { EthService } from '../ethereum/eth.service';
import { DvsService } from '../ethereum/dvs.service';
import { DocCollectionData, eAccessType } from '../_model/DocCollectionData';
import { eDocumentUploadingStatus } from '../_model/DocMetaData';
import { ArweaveService } from '../arweave/arweave.service';
import { LibraryService } from '../library/library.service';
import { IDecentraDocsContract } from '../blockchain/IDecentraDocsContract';
import { BlockchainService } from '../blockchain/blockchain.service';

export const PUBLIC_KEY = '00000-00000-00000-00000-00000';
@Injectable({
  providedIn: 'root'
})
export class DocService {

  constructor(
    private dvs: DvsService,
    private ethService: EthService,
    private blockchainService: BlockchainService,
    private libraryService: LibraryService,
    private arweaveService: ArweaveService
  ) {
   }

   public subscribe(docId: string) {
     const fee = this.libraryService.findCollectionByDocId(docId).subscriptionFee;
     this.dvs.getContract().then((decentraDocsContract: IDecentraDocsContract) => {
       decentraDocsContract.subscribe(docId, fee).then(() => {
        console.log('successfully subscribed to doc', docId);
        decentraDocsContract.getDocumentKey(docId).then((key) => {
          this.libraryService.findCollectionByDocId(docId).accessKey = key;
        });
      }).catch(err => console.error(err));
    }).catch(err => console.error(err));
   }

   public canSubscribe(document: DocCollectionData): boolean {
    // return ((document.accessKey === undefined)
    // && (document.authorEthAccount !== this.blockchainService.currentAccountValue));
    return !this.isInMyLibrary(document);
   }
   public canDownload(document: DocCollectionData, version: number): boolean {
     return (document.getDataForVersion(version)
     && (document.getDataForVersion(version).uploadingStatus === eDocumentUploadingStatus.CONFIRMED)
     && (this.isInMyLibrary(document) || (document.accessType === eAccessType.PUBLIC)));
   }
   public canPublishNewVersion(document: DocCollectionData): boolean {
    return document.getDataForLatestVersion() && (document.getDataForLatestVersion().author === this.arweaveService.address);
  }
  public canChangeAccessControl(document: DocCollectionData): boolean {
    return document.authorEthAccount === this.blockchainService.currentAccountValue;
  }
  isInMyLibrary(coll: DocCollectionData): boolean {
    return coll.authorEthAccount && ((coll.authorEthAccount === this.blockchainService.currentAccountValue)
    || coll.authorizedAccounts.includes(this.blockchainService.currentAccountValue));
  }

}

'''
'''--- src/app/ethereum/Contract.ts ---
import { Observable, of } from 'rxjs';
import { EthService } from './eth.service';
import contractData from '../../../build/contracts/DVSRegistry.json';
import { Contract as EthContract } from 'web3-eth-contract';

export class Contract {
  private _address: string = '';
  protected _contract: EthContract = undefined;
  constructor(protected eth: EthService) {}
  public async initialize(): Promise<boolean> {
    console.log("initialize eth");
    return this.eth.initialize().toPromise<boolean>().then((initialized: boolean) => {
      console.log("eth initialized", initialized);
      if (initialized) {
        console.log("eth initialized");
        return this.eth.getContract(contractData).then(
          (contract: EthContract) => {
            this._contract = contract;
            this._address = contract.options.address;
            return true;
          }).catch(
          (err: any) => {
            console.error(err);
            return false;
          });
      } else {
        return false;
      }
    }).catch((err) => {
      console.error(err);
      return false;
    });
  }
  public get address(): string {
    return this._address;
  }
}

'''
'''--- src/app/ethereum/DVSRegistry.ts ---
import { Contract } from './Contract';
import { EthService } from './eth.service';
import { IDecentraDocsContract } from '../blockchain/IDecentraDocsContract';

export class DVSRegistry extends Contract implements IDecentraDocsContract {
  constructor(protected eth: EthService) {
    super(eth);
  }
  public get contractId(): string {
    return this.address;
  }
  public async getMessage(): Promise<string> {
    return this._contract.methods.message().call();
  }
  public async docExists(docId: string): Promise<boolean> {
    return this._contract.methods.docExists(docId).call();
  }
  public async getDocumentKey(docId: string): Promise<string> {
    return this._contract.methods.getDocumentKey(docId).call();
  }
  public async getSubscriptionFee(docId: string): Promise<number> {
    return new Promise<number>((resolve, reject) => {
      this._contract.methods.getSubscriptionFee(docId).call().then((fee: string) => {
        try {
          const feeInETHstr: string = this.eth.weiToEth(fee);
          const feeInETH: number = parseFloat(feeInETHstr);
          resolve(feeInETH);
        } catch (err) {
          reject(err);
        }
      }).catch(err => reject(err));
    });
  }
  public async getAuthorAccount(docId: string): Promise<string> {
    return this._contract.methods.getAuthor(docId).call();
  }
  public async getAuthorizedAccounts(docId: string): Promise<string[]> {
    return this._contract.methods.getAuthorizedAccounts(docId).call();
  }
  public async setAccess(docId: string, addressToAdd: string[], addressToRemove: string[]): Promise<void> {
    return this._contract.methods.setAccess(docId, addressToAdd, addressToRemove).send({from: this.eth.currentAccountValue});
  }
  public async setSubscriptionFee(docId: string, subscriptionFee_inETH: number): Promise<void> {
    return new Promise<any>((resolve, reject) => {
      const subscriptionFee: string = this.eth.ethToWei(subscriptionFee_inETH);
      this._contract.methods.setSubscriptionFee(docId, subscriptionFee)
      .send({from: this.eth.currentAccountValue}).then((receipt: any) => {
        console.log("DVSResgitry::setSubscriptionFee", receipt);
        resolve(receipt);
      }).catch(err => {
        console.error(err);
        reject(err);
      });
    });
  }
  public async registerDoc(docId: string, encryptedKey: string, subscriptionFee_inETH: number, authorizedAddresses: string[]) {
    return new Promise<any>((resolve, reject) => {
      const subscriptionFee: string = this.eth.ethToWei(subscriptionFee_inETH);
      this._contract.methods.registerDoc(docId, encryptedKey, subscriptionFee, authorizedAddresses)
      .send({from: this.eth.currentAccountValue}).then((receipt: any) => {
        console.log("DVSResgitry::registerDoc", receipt);
        resolve(receipt);
      }).catch(err => {
        console.error(err);
        reject(err);
      });
    });
  }
  public async subscribe(docId: string, amount_inETH: number): Promise<void> {
    const amount: string = this.eth.ethToWei(amount_inETH);
    return this._contract.methods.subscribe(docId).send({from: this.eth.currentAccountValue, value: amount});
  }
}

'''
'''--- src/app/ethereum/dvs.service.spec.ts ---
import { TestBed } from '@angular/core/testing';

import { DvsService } from './dvs.service';

describe('DvsService', () => {
  let service: DvsService;

  beforeEach(() => {
    TestBed.configureTestingModule({});
    service = TestBed.inject(DvsService);
  });

  it('should be created', () => {
    expect(service).toBeTruthy();
  });
});

'''
'''--- src/app/ethereum/dvs.service.ts ---
import { Injectable } from '@angular/core';
import { EthService } from './eth.service';
import { DVSRegistry } from './DVSRegistry';
import { IDecentraDocsContract } from '../blockchain/IDecentraDocsContract';
import { BlockchainService, eBlockchain } from '../blockchain/blockchain.service';
import { NEARDecentraDocsContract } from '../near/NEARDecentraDocsContract';
import { NearService } from '../near/near.service';

@Injectable({
  providedIn: 'root'
})
export class DvsService {

  _dvsRegistry: IDecentraDocsContract = undefined;
  _lastBlockchain: eBlockchain;

  constructor(
    private ethService: EthService,
    private nearService: NearService,
    private blockchainService: BlockchainService
  ) {}

  getContract(): Promise<IDecentraDocsContract> {
    return new Promise<IDecentraDocsContract>((resolve, reject) => {
      if (this._dvsRegistry && (this.blockchainService.blockchain === this._lastBlockchain)) {
        resolve(this._dvsRegistry);
      } else {
        this._lastBlockchain = undefined;
        this._dvsRegistry = undefined;
        switch (this.blockchainService.blockchain) {
          case eBlockchain.ETHEREUM: {
            const dvsRegistry = new DVSRegistry(this.ethService);
            dvsRegistry.initialize().then((init) => {
              this._dvsRegistry = dvsRegistry;
              this._lastBlockchain = this.blockchainService.blockchain;
              resolve(this._dvsRegistry);
            }).catch((err: any) => {
              reject(err);
            });
            break;
          }
          case eBlockchain.NEAR: {
            const nearDecentraDocsContract = new NEARDecentraDocsContract(this.nearService);
            nearDecentraDocsContract.initialize().then((init) => {
              this._dvsRegistry = nearDecentraDocsContract;
              this._lastBlockchain = this.blockchainService.blockchain;
              resolve(this._dvsRegistry);
            }).catch((err: any) => {
              reject(err);
            });
            break;
          }
        }
      }
    });
  }

}

'''
'''--- src/app/ethereum/eth.module.ts ---
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { WEB3 } from './tokens';
import { EthService } from './eth.service';

const Web3 = require('web3') ;

@NgModule({
  declarations: [],
  imports: [
    CommonModule
  ],
  providers: [
    EthService,
    {
    provide: WEB3,
    useFactory: () => new Web3(Web3.givenProvider || "ws://localhost:8546")
  }]
})
export class EthereumModule { }

'''
'''--- src/app/ethereum/eth.service.spec.ts ---
import { TestBed } from '@angular/core/testing';

import { EthService } from './eth.service';

describe('EthService', () => {
  let service: EthService;

  beforeEach(() => {
    TestBed.configureTestingModule({});
    service = TestBed.inject(EthService);
  });

  it('should be created', () => {
    expect(service).toBeTruthy();
  });
});

'''
'''--- src/app/ethereum/eth.service.ts ---
import { Injectable, Inject } from '@angular/core';
// Web3
import { WEB3 } from './tokens';
import Web3 from 'web3';
import { Contract } from 'web3-eth-contract';
import { provider } from 'web3-core';
import { Units } from 'web3-utils';

// RXJS
import { Observable, bindNodeCallback, of, BehaviorSubject } from 'rxjs';
import { map, tap, catchError } from 'rxjs/operators';
import { WindowRef } from '../_helpers/WindowRef';
import BigNumber from 'bignumber.js';

// FS
declare var fs: any;

// @Injectable()
// export class AccountsService {

//     constructor(@Inject(WEB3) private web3: Web3) { }

//     /** Returns all accounts available */
//     public getAccounts(): Observable<string[]> {
//         return bindNodeCallback(this.web3.eth.getAccounts)();
//     }

//     /** Get the current account */
//     public currentAccount(): Observable<string | Error> {
//         if (this.web3.eth.defaultAccount) {
//             return of(this.web3.eth.defaultAccount);
//         } else {
//             return this.getAccounts().pipe(
//                 tap((accounts: string[]) => {
//                     if (accounts.length === 0) { throw new Error('No accounts available'); }
//                 }),
//                 map((accounts: string[]) => accounts[0]),
//                 tap((account: string) => this.web3.defaultAccount = account),
//                 catchError((err: Error) => of(err))
//             );
//         }
//     }

// }

@Injectable()
export class EthService {

  private _initialized = false;
  private _currentAccountSubject: BehaviorSubject<string>;
  // private _currentAccount: Observable<string>;

  constructor(
    @Inject(WEB3) private web3: Web3,
    private winRef: WindowRef
  ) {
    this._currentAccountSubject = new BehaviorSubject<string>(undefined);
    // this._currentAccount = this._currentAccountSubject.asObservable();
    this.initialize();
  }

  public get initialized(): boolean {
    return this._initialized;
  }

  public get authenticated(): boolean {
    return this.initialized && (this.currentAccountValue !== undefined);
  }

  public async isAuthenticated(): Promise<boolean> {
    return new Promise<boolean>((resolve, reject) => {
      resolve(this.authenticated);
    });
  }

  public initialize(): Observable<boolean> {
    console.log("eth initializing");
    if (this._initialized) {
      console.log("eth already initialized");
      return new Observable<boolean>(observer => {
        observer.next(true);
        observer.complete();
      });
    }
    return new Observable<boolean>(observer => {
      let web3Provider: provider = undefined;
      // Modern dapp browsers...
      if (this.winRef.nativeWindow.ethereum) {
        web3Provider = this.winRef.nativeWindow.ethereum;
        try {
          // Request account access
          this.winRef.nativeWindow.ethereum.enable().then(() => {
            this.web3.setProvider(web3Provider);
            this._initialized = web3Provider !== undefined;
            observer.next(this._initialized);
            observer.complete();
          }).catch((error: any) => {
            console.error(error);
          });
        } catch (error) {
          // User denied account access...
          console.error("User denied account access")
        }

        // you should use chainId for network identity, and listen for
        // 'chainChanged'
        this.winRef.nativeWindow.ethereum.on('chainChanged', chainId => {
          // handle the new network
          console.log("ETH EVENT: chainChanged", chainId);
          // document.location.reload(); ?
        });
        // if you want to expose yourself to the problems associated
        // with networkId, listen for 'networkChanged' instead
        this.winRef.nativeWindow.ethereum.on('networkChanged', networkId => {
          // handle the new network
          console.log("ETH EVENT: networkChanged", networkId);
        });

        this.winRef.nativeWindow.ethereum.on('accountsChanged', (accounts) => {
          // Time to reload your interface with accounts[0]!
          this.getWeb3().subscribe(() => {
            console.log("ETH event accounts:", accounts);
            this.checkCurrentAccount();
          });
        });

      } else if (this.winRef.nativeWindow.web3) {
        // Legacy dapp browsers...
        web3Provider = this.winRef.nativeWindow.web3.currentProvider;
      } else {
        // If no injected web3 instance is detected, fall back to Ganache
        // App.web3Provider = new Web3.providers.HttpProvider('http://localhost:7545');
      }
      this.web3.setProvider(web3Provider);

      this._initialized = web3Provider !== undefined;
      this.checkCurrentAccount();
      observer.next(this._initialized);
      observer.complete();
    });
  }

  public disconnect() {
    this.web3.setProvider(undefined);
    this._initialized = false;
  }

  public async getContract(contractData: any): Promise<Contract> {
    const contractApi = contractData.abi;
    const contractAddress = contractData.networks[this.web3.givenProvider.networkVersion].address;
    console.log('contractAddress', contractAddress)
    return new this.web3.eth.Contract(
        contractData.abi,
        contractAddress
      );
  }

  public getProvider(): any {
    return this.web3.givenProvider;
  }

  public getWeb3(): Observable<any> {
    return of(this.web3);
  }

  public getBalance(address: string): Promise<string> {
    return this.web3.eth.getBalance(address);
  }

      /** Returns all accounts available */
    public getAccounts(): Observable<string[]> {
        // return bindNodeCallback(this.web3.eth.getAccounts)();
        return new Observable<string[]>(observer => {
          this.web3.eth.getAccounts((error, accounts) => {
            if (error) {
              observer.error(error);
            } else {
              observer.next(accounts);
              observer.complete();
            }
          });
        });
    }

    /** Get the current account */
    public currentAccount(): Observable<string | Error> {
      return this._currentAccountSubject.asObservable();
    }

    private async checkCurrentAccount() {
      console.log("get currentAccount()");
      if (this.web3.eth.defaultAccount) {
        this._currentAccountSubject.next(this.web3.eth.defaultAccount);
      } else {
        this.getAccounts().subscribe((accounts: string[]) => {
          if (accounts.length === 0) {
            console.error('No accounts available');
            this._currentAccountSubject.next(undefined);
          } else {
            this._currentAccountSubject.next(accounts[0]);
          }
        });
      }
    }

    public get currentAccountValue(): string {
      return this._currentAccountSubject.value;
    }

    public isAddress(address: string): boolean {
      return this.web3.utils.isAddress(address);
    }

    public ethToWei(amount_inETH: number): string {
      return this.web3.utils.toWei(amount_inETH.toString(), 'ether');
    }

    public weiToEth(amount_inWei: string): string {
      return this.web3.utils.fromWei(amount_inWei, 'ether');
    }

}

'''
'''--- src/app/ethereum/tokens.ts ---
import { InjectionToken } from '@angular/core';
import Web3 from 'web3';
export const WEB3 = new InjectionToken<Web3>('web3');

'''
'''--- src/app/library/library.service.spec.ts ---
import { TestBed } from '@angular/core/testing';

import { LibraryService } from './library.service';

describe('LibraryService', () => {
  let service: LibraryService;

  beforeEach(() => {
    TestBed.configureTestingModule({});
    service = TestBed.inject(LibraryService);
  });

  it('should be created', () => {
    expect(service).toBeTruthy();
  });
});

'''
'''--- src/app/library/library.service.ts ---
import { Injectable, EventEmitter } from '@angular/core';
import { DocMetaData, eDocumentUploadingStatus } from '../_model/DocMetaData';
import { eDataField, ArQueries } from '../arweave/constants';
import Transaction from 'arweave/web/lib/transaction';
import { DocCollectionData, eAccessType } from '../_model/DocCollectionData';
import { ArweaveService } from '../arweave/arweave.service';
import { rejects } from 'assert';
import { TransactionsService, eTransationStatus } from '../arweave/transactions.service';
import { Observable, BehaviorSubject } from 'rxjs';
import { DvsService } from '../ethereum/dvs.service';
import { PUBLIC_KEY } from '../doc-manager/doc.service';
import { AuthenticateService } from '../authenticate/authenticate.service';
import { IDecentraDocsContract } from '../blockchain/IDecentraDocsContract';

@Injectable({
  providedIn: 'root'
})
export class LibraryService {
  _collectionPerId: Map<string, DocCollectionData> = new Map();
  _collectionPerTitle: Map<string, DocCollectionData> = new Map();
  _allDocsPerHash: Map<string, DocMetaData> = new Map();
  _allDocsPerTx: Map<string, DocMetaData> = new Map();
  _allDocsPerAuthor: Map<string, DocMetaData> = new Map();
  _pendingDocumentsPerHash: Map<string, {doc: DocMetaData, txId: string}> = new Map();
  private _librarySubject: BehaviorSubject<DocMetaData[]>;
  private _library: Observable<DocMetaData[]>;
  private _libraryCollectionsSubject: BehaviorSubject<DocCollectionData[]>;
  private _libraryCollections: Observable<DocCollectionData[]>;

  constructor(
    private arweaveService: ArweaveService,
    private dvs: DvsService,
    private transactionsService: TransactionsService,
    private authService: AuthenticateService
  ) {
    this._librarySubject = new BehaviorSubject<DocMetaData[]>([]);
    this._library = this._librarySubject.asObservable();
    this._libraryCollectionsSubject = new BehaviorSubject<DocCollectionData[]>([]);
    this._libraryCollections = this._libraryCollectionsSubject.asObservable();
    this.authService.isAuthenticated().subscribe((isAuth) => {
      if (isAuth) {
        this.updateLibrary();
      } else {
        this.clearLibrary();
      }
    });

  }

  public get libraryCollections(): Observable<DocCollectionData[]> {
    return this._libraryCollections;
  }

  findCollectionByTitle(title: string): DocCollectionData {
    if (this._collectionPerTitle.has(title)) {
      return this._collectionPerTitle.get(title);
    }
    return undefined;
  }

  findCollectionByDocId(docId: string): DocCollectionData {
    if (this._collectionPerId.has(docId)) {
      return this._collectionPerId.get(docId);
    }
    return undefined;
  }

  findDocumentByHash(hash: string): DocMetaData {
    if (this._allDocsPerHash.has(hash)) {
      return this._allDocsPerHash.get(hash);
    }
    return undefined;
  }

  public async refresh(): Promise<DocCollectionData[]> {
    return new Promise<DocCollectionData[]> ((resolve, reject) => {
      // first load everything from arweave
      this.updateLibrary().then(async (documents) => {
        // then add pending docs (not yet confirmed on arweave)
        const promises = [];
        this._pendingDocumentsPerHash.forEach(({doc: docMetaData, txId}, key) => {
          try {
            promises.push( new Promise<void>((resolve2, reject2) => {
              this.getCollectionOrCreate(docMetaData).then((collection) => {
                this.addInLibrary(docMetaData, txId, collection).then(() => {
                  resolve2();
                }).catch(err => { // addInLibbrary failed
                  reject2(err);
                });
              }).catch(err => { // getCollectionOrCreate failed
                reject2(err);
              });
            }));
          } catch (err) {
            console.error(err);
          }
        });
        try {
          await Promise.all(promises);
        } catch (err) {
          console.error(err);
          reject(err);
        }
        resolve(Array.from(this._collectionPerId.values()));
      }).catch(err => {
        console.error(err);
        reject(err);
      });
    });
  }

  // public get collections(): Observable<DocCollectionData[]> {
  //   return new Observable<DocCollectionData[]> ((observer) => {
  //     this.updateLibrary().then((documents) => {
  //       this._pendingDocumentsPerHash.forEach((value, key) => {
  //         if (!this._allDocsPerHash.has(key)) {
  //           this.addInLibrary(value.doc, value.txId);
  //         }
  //       });
  //       console.log('return collections of size', this._collectionPerId.size);
  //       observer.next(Array.from(this._collectionPerId.values()));
  //       // observer.complete();
  //     }).catch(err => {
  //       console.error(err);
  //     });
  //     return {
  //       unsubscribe() {
  //         console.log(`unsubscribe collections`);
  //       }
  //     };
  //   });
  // }
  public get collections(): DocCollectionData[] {
    return Array.from(this._collectionPerId.values());
  }

  public get authors(): string[] {
    return Array.from(this._allDocsPerAuthor.keys());
  }

  public get collectionPerTitle(): Map<string, DocCollectionData> {
    return this._collectionPerTitle;
  }

  private clearLibrary() {
    this._collectionPerId = new Map();
    this._collectionPerTitle = new Map();
    this._allDocsPerHash = new Map();
    this._allDocsPerTx = new Map();
    this._libraryCollectionsSubject.next(Array.from(this._collectionPerId.values()));
    this._librarySubject.next(Array.from(this._allDocsPerHash.values()));
  }

  private async updateLibrary(): Promise<DocMetaData[]> {
    // this.clearLibrary();
    return new Promise<DocMetaData[]> ((resolve, reject) => {
      this.dvs.getContract().then((decentraDocsContract: IDecentraDocsContract) => {
        console.log(`updateLibrary get all document from Areweave matching contract ${decentraDocsContract.contractId}`);
        this.arweaveService.getTxIds(ArQueries.ALL_DOCS(decentraDocsContract.contractId)).then(async(txIds: string[]) => {
          const allDocs: DocMetaData[] = [];
          // txIds.forEach(async (txId) => {
          const promises = [];
          for (const txId of txIds) {
            if (this._allDocsPerTx.has(txId)) {
              continue;
            }
            console.log("txId", txId);
            try {
              promises.push( new Promise<void>((resolve2, reject2) => {
                this.arweaveService.getTransaction(txId).then((tx: Transaction) => {
                  const docMetaData = this.createDocMetaData(tx);
                  if (docMetaData) {
                    this._allDocsPerTx.set(txId, docMetaData);
                    this.getCollectionOrCreate(docMetaData).then((collection) => {
                      this.addInLibrary(docMetaData, txId, collection).then(() => {
                        allDocs.push( docMetaData );
                        resolve2();
                      }).catch(err => { // addInLibbrary failed
                        console.error('add in library failed', err);
                        reject2(err);
                      });
                    }).catch(err => { // getCollectionOrCreate failed
                      console.error('getCollectionOrCreate', err);
                      reject2(err);
                    });
                  }
                }).catch(err => { // getTransaction failed
                  console.error('getTransaction failed', err);
                  reject2(err);
                });
              }));
            } catch (err) {
              console.error(err);
              reject(err);
            }
          }
          try {
            await Promise.all(promises);
          } catch (err) {console.error(err);}
          resolve(allDocs);
        }).catch(err => {
          reject(err);
        });
      }).catch(err => {
        reject(err);
      });
    });
  }

  public createDocMetaData(tx: Transaction): DocMetaData | undefined {
    const txTags = ArweaveService.getTxTags(tx);
    const hash = txTags.get(eDataField.HASH);
    if (this._allDocsPerHash.has(hash)) {
      const existingDoc = this._allDocsPerHash.get(hash);
      console.warn(`document ${txTags.get(eDataField.TITLE)} version ${txTags.get(eDataField.VERSION)} already exists in library: ${JSON.stringify(existingDoc)}`);
      return undefined;
    }
    const metaData = DocMetaData.fromTransation(tx, txTags);
    metaData.uploadingStatus = eDocumentUploadingStatus.CONFIRMED;
    return metaData;
  }

  // public retrieveDocMetaData(tx: Transaction, txTags: Map<eDataField, string>): DocMetaData {
  //   const docId = txTags.get(eDataField.DOC_ID);
  //   console.log(tx.id, 'docId:', docId);
  //   let metaData: DocMetaData;
  //   if (this._collectionPerId.has(docId)) {
  //     metaData = this._collectionPerId.get(docId);
  //     const version = txTags.get(eDataField.VERSION);
  //     if (!metaData.hasVersion(version)) {
  //       const hash = txTags.get(eDataField.HASH);
  //       metaData.addVersion(tx.id, hash, version);
  //     }
  //   } else {
  //     metaData = DocMetaData.fromTransation(tx, hash);
  //     this._collectionPerId.set(docId, metaData);
  //     this._collectionPerTitle.set(metaData.title, metaData);
  //     this._allDocsPerHash.set(metaData., metaData);
  //   }
  //   return metaData;
  // }

  public async getCollectionOrCreate(
    docMetaData: DocMetaData,
    accessControl?: {accessKey: string,
      subscriptionFee: number,
      authorEthAccount: string,
      authorizedAccounts: string[]}
      ): Promise<DocCollectionData> {
    return new Promise<DocCollectionData>(async (resolve, reject) => {
      let collection = this._collectionPerId.get(docMetaData.docId);
      if (!collection) {
        collection = new DocCollectionData(docMetaData.title, docMetaData.docId);
        if (accessControl) {
          collection.accessKey = accessControl.accessKey;
          collection.subscriptionFee = accessControl.subscriptionFee;
          collection.authorEthAccount = accessControl.authorEthAccount;
          collection.authorizedAccounts = accessControl.authorizedAccounts;
          collection.accessType = (accessControl.accessKey === PUBLIC_KEY) ? eAccessType.PUBLIC : eAccessType.RESTRICTED;
        } else {
          await this.dvs.getContract().then(async (decentraDocsContract: IDecentraDocsContract) => {
            if (await decentraDocsContract.docExists(docMetaData.docId)) {
              const promises = [
                decentraDocsContract.getAuthorAccount(docMetaData.docId).then((account) => {
                  console.log('got authorEthAccount', account);
                  collection.authorEthAccount = account;
                }).catch(err => console.error(err)),
                decentraDocsContract.getSubscriptionFee(docMetaData.docId).then((fee: number) => {
                  console.log('got subscriptionFee', fee);
                  collection.subscriptionFee = fee;
                }).catch(err => console.error(err)),
                decentraDocsContract.getAuthorizedAccounts(docMetaData.docId).then((authorized: string[]) => {
                  console.log('got authorized', authorized);
                  collection.authorizedAccounts = authorized;
                }).catch(err => console.error(err)),
                decentraDocsContract.getDocumentKey(docMetaData.docId).then((key: string) => {
                  console.log('got document key', key);
                  collection.accessKey = key;
                  collection.accessType = (key === PUBLIC_KEY) ? eAccessType.PUBLIC : eAccessType.RESTRICTED;
                }).catch(err => console.error(err))
              ];
              await Promise.all(promises);
            } else {
              // tslint:disable-next-line: max-line-length
              console.warn(`Document ${JSON.stringify(docMetaData)} published on ${new Date(docMetaData.datePublication).toISOString()} is not registered in DVS contract ${decentraDocsContract.contractId}`);
              collection = undefined;
              reject(`Document ${docMetaData.title} with id ${docMetaData.docId} is not registered in DVS contract`);
              return;
            }
          }).catch(err => {
            collection = undefined;
            reject('unable to get DecentraDocs contract from Blockchain:' + err);
            return;
          });
        }
        if (collection) {
          console.log('new collection', JSON.stringify(collection));
          this._collectionPerId.set(docMetaData.docId, collection);
          this._collectionPerTitle.set(docMetaData.title, collection);
        } else {
          return;
        }
      }
      resolve(collection);
    });
  }
  public async addInLibrary(docMetaData: DocMetaData, txId: string, collection: DocCollectionData): Promise<void> {
    return new Promise<void>((resolve, reject) => {
      console.log('adding txId', txId, ' for doc ', docMetaData.docId, 'version', docMetaData.version);
      docMetaData.txId = txId;
      console.log('Update Subject: LibraryCollection');
      this._libraryCollectionsSubject.next(Array.from(this._collectionPerId.values()));
      collection.addVersion(docMetaData);
      console.log('new doc', JSON.stringify(docMetaData));
      this._allDocsPerHash.set(docMetaData.hash, docMetaData);
      this._allDocsPerAuthor.set(docMetaData.author, docMetaData);
      console.log('Update Subject: Library');
      this._librarySubject.next(Array.from(this._allDocsPerHash.values()));
      if (docMetaData.uploadingStatus !== eDocumentUploadingStatus.CONFIRMED) {
        this._pendingDocumentsPerHash.set(docMetaData.hash, { doc: docMetaData, txId: txId });
        this.transactionsService.watchTx(
          txId,
          [eTransationStatus.CONFIRMED, eTransationStatus.FAILED],
          5,
          (status: eTransationStatus) => {
            switch(status) {
              case eTransationStatus.UNKNOWN: {
                docMetaData.uploadingStatus = eDocumentUploadingStatus.UNKNOWN;
                break;
              }
              case eTransationStatus.PENDING: {
                docMetaData.uploadingStatus = eDocumentUploadingStatus.PENDING;
                break;
              }
              case eTransationStatus.CONFIRMED: {
                docMetaData.uploadingStatus = eDocumentUploadingStatus.CONFIRMED;
                this._pendingDocumentsPerHash.delete(docMetaData.hash);
                break;
              }
              case eTransationStatus.FAILED: {
                docMetaData.uploadingStatus = eDocumentUploadingStatus.FAILED;
                this._pendingDocumentsPerHash.delete(docMetaData.hash);
                break;
              }
            }
          });
      }
    });

  }

  // public getAuthors(): Observable<string[]> {
  //   return new Observable((observer) => {

  //     this.updateLibrary().then((documents) => {
  //       this._pendingDocumentsPerHash.forEach((value, key) => {
  //         if (!this._allDocsPerHash.has(key)) {
  //           this.addInLibrary(value.doc, value.txId);
  //         }
  //       });
  //       console.log('return collections of size', this._collectionPerId.size);
  //       observer.next(Array.from(this._allDocsPerAuthor.keys()));
  //     }).catch(err => {
  //       console.error(err);
  //     });
  //     return {
  //       unsubscribe() {
  //         console.log(`unsubscribe authors`);
  //       }
  //     };
  //   });
  // }

}

'''
'''--- src/app/near/NEARDecentraDocsContract.ts ---
import { IDecentraDocsContract } from '../blockchain/IDecentraDocsContract';
import { NearService, CONTRACTS } from './near.service';
import { eContract } from '../blockchain/blockchain.service';
import { PUBLIC_KEY } from '../doc-manager/doc.service';

export class NEARDecentraDocsContract implements IDecentraDocsContract {
  nearContract: any;
  nonce = 0;
  constructor(private nearService: NearService) {
  }
  private getNonce() {
    return this.nonce++;
  }
  public async initialize(): Promise<boolean> {
    return new Promise<boolean>((resolve, reject) => {
      this.nearService.getContract(eContract.DECENTRADOCS).then((contract) => {
        this.nearContract = contract;
        resolve (this.nearContract !== undefined);
      }).catch(err => reject(err));
    });
  }
  public get contractId(): string {
    return CONTRACTS.DECENTRADOCS.id;
  }
  public async docExists(docId: string): Promise<boolean> {
    return new Promise<boolean>((resolve, reject) => {
      this.nearContract.docExists({docId}).then((exists) => {
        resolve(exists);
      }).catch(err => reject(err));
    });
  }
  public async getDocumentKey(docId: string): Promise<string> {
    return new Promise<string>((resolve, reject) => {
      const BOATLOAD_OF_GAS = '10000000000000000';
      this.nearContract.getDocumentKey({docId, account: this.nearService.currentAccountValue}).then((key) => {
        resolve(key);
      }).catch(err => reject(err));
      // resolve('PUBLIC_KEY');
      // resolve('xxxxxxxxxxxxxx');
    });
  }
  public async getSubscriptionFee(docId: string): Promise<number> {
    return new Promise<number>((resolve, reject) => {
      this.nearContract.getSubscriptionFee({docId}).then((fee) => {
        resolve(fee);
      }).catch(err => reject(err));
    });
  }
  public async getAuthorAccount(docId: string): Promise<string> {
    return new Promise<string>((resolve, reject) => {
      this.nearContract.getAuthor({docId}).then((author) => {
        resolve(author);
      }).catch(err => reject(err));
    });
  }
  public async getAuthorizedAccounts(docId: string): Promise<string[]> {
    return new Promise<string[]>((resolve, reject) => {
      this.nearContract.getAuthorizedAccounts({docId}).then((authorizedAccounts) => {
        resolve(authorizedAccounts);
      }).catch(err => reject(err));
    });
  }
  public async setAccess(docId: string, addressToAdd: string[], addressToRemove: string[]): Promise<void> {
    return new Promise<void>((resolve, reject) => {
      console.log("setAccess", docId);
      const BOATLOAD_OF_GAS = '10000000000000000';
      this.nearContract.setAccess(
        {
          docId,
          authorizedAddresses: addressToAdd,
          deniedAddresses: addressToRemove
        }, BOATLOAD_OF_GAS, '0'). then(() => {
        resolve();
      }).catch(err => reject(err));
    });
  }
  public async setSubscriptionFee(docId: string, subscriptionFee_inETHorDDOX: number): Promise<void> {
    return new Promise<void>((resolve, reject) => {
      console.log("setSubscriptionFee", docId);
      const BOATLOAD_OF_GAS = '10000000000000000';
      this.nearContract.setSubscriptionFee(
        {
          docId,
          subscriptionFee: subscriptionFee_inETHorDDOX.toString(), // conversion into u64 requires to pass arg as string
        }, BOATLOAD_OF_GAS, '0'). then(() => {
        resolve();
      }).catch(err => reject(err));
    });
  }
  public async registerDoc(docId: string, encryptedKey: string, subscriptionFee_inETHorDDOX: number, authorizedAddresses: string[]) {
    return new Promise<void>((resolve, reject) => {
      console.log("registerDoc", docId);
      const BOATLOAD_OF_GAS = '10000000000000000';
      this.nearContract.registerDoc(
        {
          docId,
          encryptedKey,
          subscriptionFee: subscriptionFee_inETHorDDOX.toString(), // conversion into u64 requires to pass arg as string
          authorizedAddresses
        }, BOATLOAD_OF_GAS, '0'). then(() => {
        resolve();
      }).catch(err => reject(err));
    });
  }
  public async subscribe(docId: string, amount_inETHorDDOX: number): Promise<void> {
    return new Promise<void>((resolve, reject) => {
      console.log("subscribe", docId);
      const BOATLOAD_OF_GAS = '10000000000000000';
      this.nearContract.subscribe(
        {
          docId
        }, BOATLOAD_OF_GAS, '0'). then(() => {
        resolve();
      }).catch(err => reject(err));
    });
  }

}

'''
'''--- src/app/near/near.service.spec.ts ---
import { TestBed } from '@angular/core/testing';

import { NearService } from './near.service';

describe('NearService', () => {
  let service: NearService;

  beforeEach(() => {
    TestBed.configureTestingModule({});
    service = TestBed.inject(NearService);
  });

  it('should be created', () => {
    expect(service).toBeTruthy();
  });
});

'''
'''--- src/app/near/near.service.ts ---
import { Injectable } from '@angular/core';
import { Observable, BehaviorSubject } from 'rxjs';
import { eContract } from '../blockchain/blockchain.service';
const nearlib = require('nearlib');

export const CONTRACTS = {
  DECENTRADOCS: {
    id: 'decentradocs',
    viewMethods: ['docExists', 'getAuthorizedAccounts', 'getAuthor', 'getSubscriptionFee', 'getDocumentKey', 'isAuthorized'],
    changeMethods: [
      'registerDoc',
      'setAccess',
      'subscribe',
      // 'getDocumentKey', // getDocumentKey does not modify the state but need to be in 'changeMethods' because it requires 'signer_account_id' (refer to https://docs.rs/near-vm-logic/0.7.0/src/near_vm_logic/logic.rs.html l.497 fn signer_account_id)
      'setSubscriptionFee'
    ]
  },
  DDOX_TOKEN: {
    id: 'ddox-token',
    viewMethods: ['balanceOf', 'getOwner'],
    changeMethods: ['init']
  }
} ;
const nearConfig = {
  networkId: 'default',
  nodeUrl: 'https://rpc.nearprotocol.com',
  walletUrl: 'https://wallet.nearprotocol.com',
  helperUrl: 'https://near-contract-helper.onrender.com'
}
@Injectable({
  providedIn: 'root'
})
export class NearService {

  private walletConnection: any;
  private _isInitialized = false;
  private _currentAccountSubject: BehaviorSubject<string>;
  private _currentAccount: Observable<string>;

  constructor() {
    this._currentAccountSubject = new BehaviorSubject<string>(undefined);
    this._currentAccount = this._currentAccountSubject.asObservable();
    this.initialize();
   }

  public async login() {
    if (!this._isInitialized) {
      await this.initialize();
      if (!this._isInitialized) {
        throw new Error('unable to initialize NEAR');
      }
    }
    this.walletConnection.requestSignIn(
      CONTRACTS.DECENTRADOCS.id,
      CONTRACTS.DECENTRADOCS.id
    );
    this._currentAccountSubject.next(this.walletConnection.getAccountId());
  }

  public logout() {
    this.walletConnection.signOut();
    this._currentAccountSubject.next(undefined);
  }

  public async initialize() {
    // Initializing connection to the NEAR DevNet
    const near = await nearlib.connect({
      deps: {
        keyStore: new nearlib.keyStores.BrowserLocalStorageKeyStore()
      },
      ...nearConfig
    });

    // Needed to access wallet
    this.walletConnection = new nearlib.WalletConnection(near, null);

    // // Initializing our contract APIs by contract name and configuration
    // const contract = await new nearlib.Contract(this.walletConnection.account(), nearConfig.contractName, {
    //   // View methods are read-only – they don't modify the state, but usually return some value
    //   viewMethods: ['getMessages'],
    //   // Change methods can modify the state, but you don't receive the returned value when called
    //   changeMethods: ['addMessage']
    // });

    console.log("NearService completed initialization");
    this._isInitialized = true;

        // Get Account ID – if still unauthorized, it's an empty string
        this._currentAccountSubject.next(this.walletConnection.getAccountId());

  }

  public get currentAccountValue(): string {
    return this._currentAccountSubject.value;
  }

  public currentAccount(): Observable<string> {
    return this._currentAccount;
  }

  public get authenticated(): boolean {
    return this._isInitialized && this.currentAccountValue && (this.currentAccountValue !== '');
  }

  // public async isAuthenticated(): Promise<boolean> {
  //   return new Promise<boolean>((resolve, reject) => {
  //     // if (this._isInitialized) {
  //     // this.initialize().then(() => {
  //       this.currentAccount().subscribe((account) => {
  //         resolve(this._isInitialized && (account !== undefined) && (account !== ''));
  //       }, err => reject(err));
  //     // }, err => reject(err));
  //     // } else {
  //     //   resolve(false);
  //     // }
  //   });
  // }

  public async getContract(contractType: eContract): Promise<any> {
    return new nearlib.Contract(this.walletConnection.account(), CONTRACTS[contractType].id, {
      // View methods are read-only – they don't modify the state, but usually return some value
      viewMethods: CONTRACTS[contractType].viewMethods,
      // Change methods can modify the state, but you don't receive the returned value when called
      changeMethods: CONTRACTS[contractType].changeMethods
    });
  }

  public async balanceOf(account: string): Promise<string> {
    return new Promise<string>((resolve, reject) => {
      console.log("balanceOf ?", account);
      this.getContract(eContract.DDOX_TOKEN).then((contract) => {
        contract.balanceOf({
          account: account
        }).then((balance) => {
          resolve(balance);
        }).catch(err => reject(err));
      }).catch(err => reject(err));
    });
  }

  public async getOwner(): Promise<string> {
    return new Promise<string>((resolve, reject) => {
      console.log("getOwner ?");
      this.getContract(eContract.DDOX_TOKEN).then((contract) => {
        contract.getOwner().then((owner) => {
          resolve(owner);
        }).catch(err => reject(err));
      }).catch(err => reject(err));
    });
  }

  public async registerDoc(docId: string, encryptedKey: string, subscriptionFee: number, authorizedAddresses: string[]): Promise<void> {
    return new Promise<void>((resolve, reject) => {
      console.log("create doc", docId);
      this.getContract(eContract.DECENTRADOCS).then((contract) => {
        const BOATLOAD_OF_GAS = '10000000000000000';
        contract.registerDoc({
          docId,
          encryptedKey,
          subscriptionFee: subscriptionFee.toString(), // conversion into u64 requires to pass arg as string
          authorizedAddresses
        }, BOATLOAD_OF_GAS, '0'). then(() => {
          resolve();
        }).catch(err => reject(err));
      }).catch(err => reject(err));
    });
  }

  public async init(initialOwner: string): Promise<void> {
    return new Promise<void>((resolve, reject) => {
      console.log("init contract", initialOwner);
      this.getContract(eContract.DDOX_TOKEN).then((contract) => {
        const BOATLOAD_OF_GAS = '10000000000000000';
        contract.init({
          initialOwner
        }, BOATLOAD_OF_GAS, '0'). then(() => {
          resolve();
        }).catch(err => reject(err));
      }).catch(err => reject(err));
    });
  }

  public async dDox_getOwner(): Promise<string> {
    return new Promise<string>((resolve, reject) => {
      console.log("dDox_getOwner ?");
      this.getContract(eContract.DECENTRADOCS).then((contract) => {
        contract.dDox_getOwner().then((owner) => {
          resolve(owner);
        }).catch(err => reject(err));
      }).catch(err => reject(err));
    });
  }

  public async getGreetings(): Promise<string> {
    return new Promise<string>((resolve, reject) => {
      console.log("getGreetings ?");
      this.getContract(eContract.DECENTRADOCS).then((contract) => {
        contract.getGreetings({}).then((sender) => {
          resolve(sender);
        }).catch(err => reject(err));
      }).catch(err => reject(err));
    });
  }

  public async docExists(docId: string): Promise<boolean> {
    return new Promise<boolean>((resolve, reject) => {
      console.log("doc exists ?", docId);
      this.getContract(eContract.DECENTRADOCS).then((contract) => {
        contract.docExists({
          docId
        }).then((exists) => {
          resolve(exists);
        }).catch(err => reject(err));
      }).catch(err => reject(err));
    });
  }

}

'''
'''--- src/assets/arweave-logo-1.svg ---
<svg width="173" height="30" viewBox="0 0 173 30" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M49.7755 20.2427C49.7104 20.1125 49.6551 19.9627 49.6095 19.7935C49.5639 19.6242 49.5249 19.4451 49.4923 19.2563C49.3426 19.4191 49.17 19.5721 48.9747 19.7153C48.7794 19.8586 48.5613 19.9855 48.3204 20.0962C48.0861 20.2004 47.8256 20.2817 47.5392 20.3403C47.2527 20.4054 46.9435 20.438 46.6115 20.438C46.0711 20.438 45.573 20.3599 45.1173 20.2036C44.6681 20.0474 44.2807 19.8293 43.9552 19.5493C43.6297 19.2694 43.3758 18.9373 43.1935 18.5532C43.0112 18.1626 42.92 17.7394 42.92 17.2837C42.92 16.1704 43.3335 15.311 44.1603 14.7056C44.9936 14.0936 46.2338 13.7876 47.881 13.7876H49.3947V13.1626C49.3947 12.6548 49.2286 12.2544 48.8966 11.9614C48.5646 11.6619 48.0861 11.5122 47.4611 11.5122C46.9077 11.5122 46.504 11.6326 46.2501 11.8735C45.9962 12.1079 45.8693 12.4237 45.8693 12.8208H43.1544C43.1544 12.3716 43.2521 11.9451 43.4474 11.5415C43.6492 11.1379 43.9389 10.783 44.3165 10.4771C44.7006 10.1711 45.1661 9.93018 45.713 9.75439C46.2664 9.5721 46.8979 9.48096 47.6075 9.48096C48.2456 9.48096 48.838 9.55908 49.3849 9.71533C49.9383 9.87158 50.4168 10.1027 50.8204 10.4087C51.2241 10.7147 51.5398 11.1021 51.7677 11.5708C51.9956 12.033 52.1095 12.5701 52.1095 13.1821V17.7134C52.1095 18.2798 52.1453 18.7485 52.2169 19.1196C52.2885 19.4907 52.3927 19.8097 52.5294 20.0767V20.2427H49.7755ZM47.1876 18.3384C47.4611 18.3384 47.715 18.3058 47.9493 18.2407C48.1837 18.1756 48.3953 18.091 48.5841 17.9868C48.7729 17.8826 48.9357 17.7655 49.0724 17.6353C49.2091 17.4985 49.3165 17.3618 49.3947 17.2251V15.4087H48.0079C47.5848 15.4087 47.2234 15.451 46.924 15.5356C46.6245 15.6138 46.3803 15.7277 46.1915 15.8774C46.0027 16.0207 45.8628 16.1965 45.7716 16.4048C45.6805 16.6066 45.6349 16.828 45.6349 17.0688C45.6349 17.4334 45.7618 17.7362 46.0157 17.9771C46.2762 18.2179 46.6668 18.3384 47.1876 18.3384Z" fill="#D5D5D5"/>
<path d="M62.7736 9.48096C63.1837 9.48096 63.5613 9.51025 63.9064 9.56885C64.2579 9.62093 64.5411 9.67952 64.756 9.74463L64.3556 12.4497C63.9975 12.3651 63.6297 12.3032 63.2521 12.2642C62.881 12.2186 62.5262 12.1958 62.1876 12.1958C61.4259 12.1958 60.8139 12.3423 60.3517 12.6353C59.896 12.9282 59.5542 13.3481 59.3263 13.895V20.2427H56.6115V9.67627H59.1407L59.2677 11.4048C59.6974 10.8058 60.2117 10.3371 60.8107 9.99854C61.4096 9.65348 62.0639 9.48096 62.7736 9.48096Z" fill="#D5D5D5"/>
<path d="M73.9552 16.9321L74.8732 9.67627H77.3634L75.4689 20.2427H73.0861L71.6993 13.5239L70.3615 20.2427H67.9786L66.0841 9.67627H68.5646L69.4825 16.9614L70.8107 9.67627H72.6271L73.9552 16.9321Z" fill="#D5D5D5"/>
<path d="M84.3361 20.438C83.5223 20.438 82.7833 20.3045 82.1193 20.0376C81.4552 19.7707 80.8855 19.4093 80.4103 18.9536C79.935 18.4914 79.5672 17.951 79.3068 17.3325C79.0529 16.7075 78.9259 16.0402 78.9259 15.3306V14.9399C78.9259 14.1326 79.0529 13.397 79.3068 12.7329C79.5607 12.0623 79.9155 11.4862 80.3712 11.0044C80.8269 10.5226 81.3673 10.1483 81.9923 9.88135C82.6173 9.61442 83.2976 9.48096 84.0333 9.48096C84.795 9.48096 85.4721 9.60791 86.0646 9.86182C86.6635 10.1092 87.1681 10.4608 87.5782 10.9165C87.9949 11.3722 88.3107 11.9224 88.5255 12.5669C88.7404 13.2049 88.8478 13.9113 88.8478 14.686V15.8384H81.6798C81.7319 16.1965 81.8361 16.5252 81.9923 16.8247C82.1551 17.1177 82.3601 17.3716 82.6075 17.5864C82.8549 17.8013 83.1381 17.9673 83.4572 18.0845C83.7762 18.2017 84.1245 18.2603 84.5021 18.2603C84.769 18.2603 85.0327 18.2342 85.2931 18.1821C85.56 18.13 85.8139 18.0552 86.0548 17.9575C86.2957 17.8534 86.5203 17.7264 86.7286 17.5767C86.937 17.4269 87.1193 17.2511 87.2755 17.0493L88.6329 18.5142C88.4637 18.755 88.2423 18.9927 87.9689 19.2271C87.7019 19.4549 87.3829 19.66 87.0118 19.8423C86.6473 20.0181 86.2404 20.1613 85.7911 20.272C85.3419 20.3826 84.8569 20.438 84.3361 20.438ZM84.0138 11.6782C83.7078 11.6782 83.4279 11.7336 83.174 11.8442C82.92 11.9484 82.6954 12.1014 82.5001 12.3032C82.3113 12.505 82.1518 12.7459 82.0216 13.0259C81.8914 13.3058 81.7937 13.6183 81.7286 13.9634H86.1818V13.7485C86.1687 13.4621 86.1134 13.1919 86.0157 12.938C85.9181 12.6841 85.7781 12.466 85.5958 12.2837C85.4135 12.0949 85.1889 11.9484 84.922 11.8442C84.6616 11.7336 84.3588 11.6782 84.0138 11.6782Z" fill="#D5D5D5"/>
<path d="M97.8224 20.2427C97.7573 20.1125 97.7019 19.9627 97.6564 19.7935C97.6108 19.6242 97.5717 19.4451 97.5392 19.2563C97.3894 19.4191 97.2169 19.5721 97.0216 19.7153C96.8263 19.8586 96.6082 19.9855 96.3673 20.0962C96.1329 20.2004 95.8725 20.2817 95.5861 20.3403C95.2996 20.4054 94.9904 20.438 94.6583 20.438C94.118 20.438 93.6199 20.3599 93.1642 20.2036C92.715 20.0474 92.3276 19.8293 92.0021 19.5493C91.6766 19.2694 91.4226 18.9373 91.2404 18.5532C91.0581 18.1626 90.9669 17.7394 90.9669 17.2837C90.9669 16.1704 91.3803 15.311 92.2072 14.7056C93.0405 14.0936 94.2807 13.7876 95.9279 13.7876H97.4415V13.1626C97.4415 12.6548 97.2755 12.2544 96.9435 11.9614C96.6115 11.6619 96.1329 11.5122 95.5079 11.5122C94.9545 11.5122 94.5509 11.6326 94.297 11.8735C94.0431 12.1079 93.9161 12.4237 93.9161 12.8208H91.2013C91.2013 12.3716 91.299 11.9451 91.4943 11.5415C91.6961 11.1379 91.9858 10.783 92.3634 10.4771C92.7475 10.1711 93.213 9.93018 93.7599 9.75439C94.3133 9.5721 94.9448 9.48096 95.6544 9.48096C96.2924 9.48096 96.8849 9.55908 97.4318 9.71533C97.9851 9.87158 98.4637 10.1027 98.8673 10.4087C99.271 10.7147 99.5867 11.1021 99.8146 11.5708C100.042 12.033 100.156 12.5701 100.156 13.1821V17.7134C100.156 18.2798 100.192 18.7485 100.264 19.1196C100.335 19.4907 100.44 19.8097 100.576 20.0767V20.2427H97.8224ZM95.2345 18.3384C95.5079 18.3384 95.7618 18.3058 95.9962 18.2407C96.2306 18.1756 96.4422 18.091 96.631 17.9868C96.8198 17.8826 96.9825 17.7655 97.1193 17.6353C97.256 17.4985 97.3634 17.3618 97.4415 17.2251V15.4087H96.0548C95.6316 15.4087 95.2703 15.451 94.9708 15.5356C94.6713 15.6138 94.4272 15.7277 94.2384 15.8774C94.0496 16.0207 93.9096 16.1965 93.8185 16.4048C93.7273 16.6066 93.6818 16.828 93.6818 17.0688C93.6818 17.4334 93.8087 17.7362 94.0626 17.9771C94.323 18.2179 94.7137 18.3384 95.2345 18.3384Z" fill="#D5D5D5"/>
<path d="M107.725 17.1079L107.861 17.8696L107.998 17.1372L110.322 9.67627H113.154L109.141 20.2427H106.592L102.559 9.67627H105.391L107.725 17.1079Z" fill="#D5D5D5"/>
<path d="M120.371 20.438C119.557 20.438 118.818 20.3045 118.154 20.0376C117.49 19.7707 116.921 19.4093 116.445 18.9536C115.97 18.4914 115.602 17.951 115.342 17.3325C115.088 16.7075 114.961 16.0402 114.961 15.3306V14.9399C114.961 14.1326 115.088 13.397 115.342 12.7329C115.596 12.0623 115.951 11.4862 116.406 11.0044C116.862 10.5226 117.402 10.1483 118.027 9.88135C118.652 9.61442 119.333 9.48096 120.068 9.48096C120.83 9.48096 121.507 9.60791 122.1 9.86182C122.699 10.1092 123.203 10.4608 123.613 10.9165C124.03 11.3722 124.346 11.9224 124.561 12.5669C124.776 13.2049 124.883 13.9113 124.883 14.686V15.8384H117.715C117.767 16.1965 117.871 16.5252 118.027 16.8247C118.19 17.1177 118.395 17.3716 118.643 17.5864C118.89 17.8013 119.173 17.9673 119.492 18.0845C119.811 18.2017 120.16 18.2603 120.537 18.2603C120.804 18.2603 121.068 18.2342 121.328 18.1821C121.595 18.13 121.849 18.0552 122.09 17.9575C122.331 17.8534 122.555 17.7264 122.764 17.5767C122.972 17.4269 123.154 17.2511 123.311 17.0493L124.668 18.5142C124.499 18.755 124.277 18.9927 124.004 19.2271C123.737 19.4549 123.418 19.66 123.047 19.8423C122.682 20.0181 122.276 20.1613 121.826 20.272C121.377 20.3826 120.892 20.438 120.371 20.438ZM120.049 11.6782C119.743 11.6782 119.463 11.7336 119.209 11.8442C118.955 11.9484 118.731 12.1014 118.535 12.3032C118.346 12.505 118.187 12.7459 118.057 13.0259C117.927 13.3058 117.829 13.6183 117.764 13.9634H122.217V13.7485C122.204 13.4621 122.149 13.1919 122.051 12.938C121.953 12.6841 121.813 12.466 121.631 12.2837C121.449 12.0949 121.224 11.9484 120.957 11.8442C120.697 11.7336 120.394 11.6782 120.049 11.6782Z" fill="#D5D5D5"/>
<path d="M130 18.6704C130 18.4165 130.042 18.1821 130.127 17.9673C130.212 17.7459 130.335 17.5571 130.498 17.4009C130.661 17.2381 130.859 17.1112 131.094 17.02C131.328 16.9224 131.592 16.8735 131.885 16.8735C132.178 16.8735 132.442 16.9224 132.676 17.02C132.91 17.1112 133.106 17.2381 133.262 17.4009C133.425 17.5571 133.548 17.7459 133.633 17.9673C133.724 18.1821 133.77 18.4165 133.77 18.6704C133.77 18.9178 133.724 19.1489 133.633 19.3638C133.548 19.5786 133.425 19.7674 133.262 19.9302C133.106 20.0864 132.91 20.2101 132.676 20.3013C132.442 20.3924 132.178 20.438 131.885 20.438C131.592 20.438 131.328 20.3924 131.094 20.3013C130.859 20.2101 130.661 20.0864 130.498 19.9302C130.335 19.7674 130.212 19.5786 130.127 19.3638C130.042 19.1489 130 18.9178 130 18.6704Z" fill="#D5D5D5"/>
<path d="M138.897 14.8618C138.897 14.0936 139.007 13.384 139.229 12.7329C139.45 12.0754 139.772 11.5057 140.195 11.0239C140.625 10.5422 141.146 10.1646 141.758 9.89111C142.376 9.61768 143.083 9.48096 143.877 9.48096C144.671 9.48096 145.378 9.61768 145.996 9.89111C146.615 10.1646 147.136 10.5422 147.559 11.0239C147.988 11.5057 148.314 12.0754 148.535 12.7329C148.757 13.384 148.867 14.0936 148.867 14.8618V15.0669C148.867 15.8416 148.757 16.5578 148.535 17.2153C148.314 17.8664 147.992 18.4328 147.568 18.9146C147.145 19.3963 146.624 19.7739 146.006 20.0474C145.387 20.3143 144.684 20.4478 143.897 20.4478C143.102 20.4478 142.393 20.3143 141.768 20.0474C141.149 19.7739 140.625 19.3963 140.195 18.9146C139.772 18.4328 139.45 17.8664 139.229 17.2153C139.007 16.5578 138.897 15.8416 138.897 15.0669V14.8618ZM141.611 15.0669C141.611 15.5096 141.654 15.9263 141.738 16.3169C141.823 16.701 141.957 17.0396 142.139 17.3325C142.321 17.619 142.555 17.8468 142.842 18.0161C143.135 18.1854 143.486 18.27 143.897 18.27C144.294 18.27 144.636 18.1854 144.922 18.0161C145.208 17.8468 145.44 17.619 145.615 17.3325C145.798 17.0396 145.931 16.701 146.016 16.3169C146.1 15.9263 146.143 15.5096 146.143 15.0669V14.8618C146.143 14.4321 146.1 14.0252 146.016 13.6411C145.931 13.257 145.798 12.9185 145.615 12.6255C145.44 12.3325 145.208 12.1014 144.922 11.9321C144.636 11.7629 144.287 11.6782 143.877 11.6782C143.473 11.6782 143.128 11.7629 142.842 11.9321C142.555 12.1014 142.321 12.3325 142.139 12.6255C141.957 12.9185 141.823 13.257 141.738 13.6411C141.654 14.0252 141.611 14.4321 141.611 14.8618V15.0669Z" fill="#D5D5D5"/>
<path d="M158.867 9.48096C159.277 9.48096 159.655 9.51025 160 9.56885C160.352 9.62093 160.635 9.67952 160.85 9.74463L160.449 12.4497C160.091 12.3651 159.723 12.3032 159.346 12.2642C158.975 12.2186 158.62 12.1958 158.281 12.1958C157.52 12.1958 156.908 12.3423 156.445 12.6353C155.99 12.9282 155.648 13.3481 155.42 13.895V20.2427H152.705V9.67627H155.234L155.361 11.4048C155.791 10.8058 156.305 10.3371 156.904 9.99854C157.503 9.65348 158.158 9.48096 158.867 9.48096Z" fill="#D5D5D5"/>
<path d="M163.018 14.8813C163.018 14.0806 163.115 13.3481 163.311 12.6841C163.512 12.02 163.799 11.4504 164.17 10.9751C164.541 10.4998 164.99 10.132 165.518 9.87158C166.045 9.61117 166.641 9.48096 167.305 9.48096C167.923 9.48096 168.454 9.58512 168.897 9.79346C169.339 10.0018 169.717 10.298 170.029 10.6821L170.137 9.67627H172.608V19.9009C172.608 20.617 172.484 21.255 172.236 21.8149C171.996 22.3748 171.654 22.8468 171.211 23.231C170.775 23.6151 170.248 23.9048 169.629 24.1001C169.017 24.3019 168.34 24.4028 167.598 24.4028C167.279 24.4028 166.937 24.3703 166.572 24.3052C166.208 24.2401 165.846 24.1392 165.488 24.0024C165.13 23.8657 164.792 23.6899 164.473 23.4751C164.154 23.2668 163.88 23.0161 163.652 22.7231L164.873 21.0728C165.218 21.4634 165.609 21.7596 166.045 21.9614C166.481 22.1698 166.953 22.2739 167.461 22.2739C168.223 22.2739 168.815 22.0688 169.238 21.6587C169.668 21.255 169.883 20.6789 169.883 19.9302V19.3247C169.564 19.6763 169.19 19.9497 168.76 20.145C168.337 20.3403 167.845 20.438 167.285 20.438C166.628 20.438 166.035 20.3045 165.508 20.0376C164.987 19.7642 164.541 19.3898 164.17 18.9146C163.799 18.4393 163.512 17.8761 163.311 17.2251C163.115 16.5675 163.018 15.8547 163.018 15.0864V14.8813ZM165.742 15.0864C165.742 15.5291 165.785 15.9425 165.869 16.3267C165.96 16.7043 166.097 17.0363 166.279 17.3228C166.462 17.6027 166.693 17.8241 166.973 17.9868C167.253 18.1496 167.585 18.231 167.969 18.231C168.444 18.231 168.835 18.1398 169.141 17.9575C169.453 17.7752 169.701 17.5213 169.883 17.1958V12.7231C169.701 12.3911 169.453 12.1372 169.141 11.9614C168.835 11.7791 168.451 11.688 167.988 11.688C167.604 11.688 167.272 11.7726 166.992 11.9419C166.712 12.1047 166.478 12.3325 166.289 12.6255C166.107 12.9119 165.97 13.2505 165.879 13.6411C165.788 14.0252 165.742 14.4386 165.742 14.8813V15.0864Z" fill="#D5D5D5"/>
<circle cx="15.5403" cy="15.3708" r="13.2995" stroke="#D5D5D5" stroke-width="2.5"/>
<path d="M17.3842 20.2427C17.3191 20.1125 17.2637 19.9627 17.2181 19.7935C17.1726 19.6242 17.1335 19.4451 17.101 19.2563C16.9512 19.4191 16.7787 19.5721 16.5834 19.7153C16.3881 19.8586 16.17 19.9855 15.9291 20.0962C15.6947 20.2004 15.4343 20.2817 15.1478 20.3403C14.8614 20.4054 14.5521 20.438 14.2201 20.438C13.6797 20.438 13.1817 20.3599 12.726 20.2036C12.2767 20.0474 11.8894 19.8293 11.5638 19.5493C11.2383 19.2694 10.9844 18.9373 10.8021 18.5532C10.6198 18.1626 10.5287 17.7394 10.5287 17.2837C10.5287 16.1704 10.9421 15.311 11.7689 14.7056C12.6023 14.0936 13.8425 13.7876 15.4896 13.7876H17.0033V13.1626C17.0033 12.6548 16.8373 12.2544 16.5052 11.9614C16.1732 11.6619 15.6947 11.5122 15.0697 11.5122C14.5163 11.5122 14.1127 11.6326 13.8588 11.8735C13.6049 12.1079 13.4779 12.4237 13.4779 12.8208H10.7631C10.7631 12.3716 10.8607 11.9451 11.056 11.5415C11.2579 11.1379 11.5476 10.783 11.9252 10.4771C12.3093 10.1711 12.7748 9.93018 13.3217 9.75439C13.875 9.5721 14.5066 9.48096 15.2162 9.48096C15.8542 9.48096 16.4467 9.55908 16.9935 9.71533C17.5469 9.87158 18.0254 10.1027 18.4291 10.4087C18.8327 10.7147 19.1485 11.1021 19.3763 11.5708C19.6042 12.033 19.7181 12.5701 19.7181 13.1821V17.7134C19.7181 18.2798 19.7539 18.7485 19.8256 19.1196C19.8972 19.4907 20.0013 19.8097 20.1381 20.0767V20.2427H17.3842ZM14.7963 18.3384C15.0697 18.3384 15.3236 18.3058 15.558 18.2407C15.7924 18.1756 16.0039 18.091 16.1927 17.9868C16.3816 17.8826 16.5443 17.7655 16.681 17.6353C16.8177 17.4985 16.9252 17.3618 17.0033 17.2251V15.4087H15.6166C15.1934 15.4087 14.8321 15.451 14.5326 15.5356C14.2331 15.6138 13.989 15.7277 13.8002 15.8774C13.6114 16.0207 13.4714 16.1965 13.3802 16.4048C13.2891 16.6066 13.2435 16.828 13.2435 17.0688C13.2435 17.4334 13.3705 17.7362 13.6244 17.9771C13.8848 18.2179 14.2754 18.3384 14.7963 18.3384Z" fill="#D5D5D5"/>
</svg>

'''
'''--- src/assets/arweave-logo-2.svg ---
<svg width="184" height="32" viewBox="0 0 184 32" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M55.3599 20.7723C55.2918 20.6362 55.2339 20.4796 55.1863 20.3026C55.1386 20.1256 55.0978 19.9384 55.0638 19.741C54.9072 19.9112 54.7268 20.0712 54.5226 20.2209C54.3184 20.3707 54.0903 20.5034 53.8385 20.6191C53.5934 20.7281 53.3211 20.8131 53.0216 20.8744C52.7221 20.9425 52.3987 20.9765 52.0516 20.9765C51.4866 20.9765 50.9658 20.8948 50.4893 20.7315C50.0196 20.5681 49.6146 20.34 49.2742 20.0473C48.9339 19.7546 48.6684 19.4075 48.4778 19.0058C48.2872 18.5974 48.1919 18.1549 48.1919 17.6784C48.1919 16.5144 48.6242 15.6159 49.4887 14.9828C50.36 14.3429 51.6568 14.023 53.379 14.023H54.9616V13.3695C54.9616 12.8385 54.7881 12.4199 54.4409 12.1136C54.0937 11.8004 53.5934 11.6439 52.9399 11.6439C52.3613 11.6439 51.9393 11.7698 51.6738 12.0217C51.4083 12.2667 51.2756 12.5969 51.2756 13.0121H48.437C48.437 12.5424 48.5391 12.0965 48.7433 11.6745C48.9543 11.2524 49.2572 10.8815 49.652 10.5615C50.0537 10.2416 50.5404 9.98972 51.1122 9.80592C51.6908 9.61532 52.3511 9.52002 53.0931 9.52002C53.7602 9.52002 54.3796 9.60171 54.9514 9.76508C55.53 9.92845 56.0304 10.1701 56.4524 10.49C56.8745 10.81 57.2046 11.215 57.4429 11.7051C57.6811 12.1884 57.8002 12.75 57.8002 13.3899V18.1277C57.8002 18.7199 57.8377 19.2101 57.9126 19.5981C57.9874 19.9861 58.0964 20.3196 58.2393 20.5987V20.7723H55.3599ZM52.654 18.7812C52.9399 18.7812 53.2054 18.7472 53.4504 18.6791C53.6955 18.611 53.9167 18.5225 54.1142 18.4136C54.3116 18.3047 54.4817 18.1822 54.6247 18.046C54.7676 17.9031 54.88 17.7601 54.9616 17.6172V15.718H53.5117C53.0692 15.718 52.6914 15.7622 52.3783 15.8507C52.0652 15.9324 51.8099 16.0515 51.6125 16.2081C51.4151 16.3578 51.2687 16.5416 51.1734 16.7595C51.0781 16.9705 51.0305 17.2019 51.0305 17.4538C51.0305 17.835 51.1632 18.1515 51.4287 18.4034C51.701 18.6553 52.1094 18.7812 52.654 18.7812Z" fill="#222326"/>
<path d="M68.9504 9.52002C69.3793 9.52002 69.7741 9.55065 70.1349 9.61192C70.5025 9.66637 70.7986 9.72764 71.0232 9.79571L70.6046 12.6241C70.2302 12.5356 69.8456 12.4709 69.4508 12.4301C69.0627 12.3824 68.6918 12.3586 68.3378 12.3586C67.5413 12.3586 66.9015 12.5118 66.4181 12.8181C65.9416 13.1244 65.5843 13.5635 65.346 14.1353V20.7723H62.5074V9.72424H65.152L65.2848 11.5315C65.734 10.9053 66.2718 10.4152 66.8981 10.0612C67.5243 9.70041 68.2084 9.52002 68.9504 9.52002Z" fill="#222326"/>
<path d="M80.6418 17.3108L81.6016 9.72424H84.2053L82.2244 20.7723H79.733L78.2831 13.7473L76.8842 20.7723H74.3928L72.4119 9.72424H75.0054L75.9652 17.3415L77.3539 9.72424H79.2531L80.6418 17.3108Z" fill="#222326"/>
<path d="M91.4958 20.9765C90.6449 20.9765 89.8723 20.837 89.178 20.5579C88.4837 20.2788 87.888 19.901 87.3911 19.4245C86.8942 18.9412 86.5096 18.3762 86.2373 17.7295C85.9718 17.076 85.8391 16.3783 85.8391 15.6363V15.2278C85.8391 14.3838 85.9718 13.6145 86.2373 12.9202C86.5028 12.2191 86.8738 11.6166 87.3503 11.1129C87.8268 10.6092 88.3918 10.2178 89.0453 9.93866C89.6987 9.65957 90.4101 9.52002 91.1793 9.52002C91.9757 9.52002 92.6837 9.65276 93.3032 9.91824C93.9294 10.1769 94.457 10.5445 94.8858 11.021C95.3215 11.4975 95.6516 12.0727 95.8763 12.7466C96.1009 13.4137 96.2132 14.1523 96.2132 14.9624V16.1672H88.7185C88.773 16.5416 88.8819 16.8854 89.0453 17.1985C89.2154 17.5049 89.4299 17.7703 89.6885 17.995C89.9472 18.2196 90.2433 18.3932 90.5769 18.5157C90.9104 18.6383 91.2746 18.6995 91.6694 18.6995C91.9485 18.6995 92.2242 18.6723 92.4965 18.6178C92.7756 18.5634 93.0411 18.4851 93.2929 18.383C93.5448 18.2741 93.7797 18.1413 93.9975 17.9848C94.2153 17.8282 94.4059 17.6444 94.5693 17.4334L95.9886 18.965C95.8116 19.2169 95.5802 19.4653 95.2943 19.7104C95.0152 19.9486 94.6816 20.1631 94.2936 20.3537C93.9124 20.5375 93.4869 20.6872 93.0172 20.8029C92.5476 20.9187 92.0404 20.9765 91.4958 20.9765ZM91.1589 11.8174C90.8389 11.8174 90.5462 11.8753 90.2808 11.991C90.0153 12.0999 89.7804 12.2599 89.5762 12.4709C89.3788 12.682 89.212 12.9338 89.0759 13.2265C88.9397 13.5192 88.8376 13.846 88.7696 14.2068H93.4257V13.9821C93.4121 13.6826 93.3542 13.4001 93.2521 13.1346C93.15 12.8692 93.0036 12.6411 92.813 12.4505C92.6224 12.2531 92.3876 12.0999 92.1085 11.991C91.8362 11.8753 91.5197 11.8174 91.1589 11.8174Z" fill="#222326"/>
<path d="M105.597 20.7723C105.529 20.6362 105.471 20.4796 105.423 20.3026C105.376 20.1256 105.335 19.9384 105.301 19.741C105.144 19.9112 104.964 20.0712 104.76 20.2209C104.555 20.3707 104.327 20.5034 104.076 20.6191C103.83 20.7281 103.558 20.8131 103.259 20.8744C102.959 20.9425 102.636 20.9765 102.289 20.9765C101.724 20.9765 101.203 20.8948 100.726 20.7315C100.257 20.5681 99.8517 20.34 99.5113 20.0473C99.1709 19.7546 98.9055 19.4075 98.7149 19.0058C98.5243 18.5974 98.429 18.1549 98.429 17.6784C98.429 16.5144 98.8612 15.6159 99.7257 14.9828C100.597 14.3429 101.894 14.023 103.616 14.023H105.199V13.3695C105.199 12.8385 105.025 12.4199 104.678 12.1136C104.331 11.8004 103.83 11.6439 103.177 11.6439C102.598 11.6439 102.176 11.7698 101.911 12.0217C101.645 12.2667 101.513 12.5969 101.513 13.0121H98.674C98.674 12.5424 98.7761 12.0965 98.9803 11.6745C99.1914 11.2524 99.4943 10.8815 99.8891 10.5615C100.291 10.2416 100.777 9.98972 101.349 9.80592C101.928 9.61532 102.588 9.52002 103.33 9.52002C103.997 9.52002 104.617 9.60171 105.189 9.76508C105.767 9.92845 106.267 10.1701 106.689 10.49C107.112 10.81 107.442 11.215 107.68 11.7051C107.918 12.1884 108.037 12.75 108.037 13.3899V18.1277C108.037 18.7199 108.075 19.2101 108.15 19.5981C108.225 19.9861 108.333 20.3196 108.476 20.5987V20.7723H105.597ZM102.891 18.7812C103.177 18.7812 103.442 18.7472 103.688 18.6791C103.933 18.611 104.154 18.5225 104.351 18.4136C104.549 18.3047 104.719 18.1822 104.862 18.046C105.005 17.9031 105.117 17.7601 105.199 17.6172V15.718H103.749C103.306 15.718 102.929 15.7622 102.615 15.8507C102.302 15.9324 102.047 16.0515 101.85 16.2081C101.652 16.3578 101.506 16.5416 101.411 16.7595C101.315 16.9705 101.268 17.2019 101.268 17.4538C101.268 17.835 101.4 18.1515 101.666 18.4034C101.938 18.6553 102.347 18.7812 102.891 18.7812Z" fill="#222326"/>
<path d="M115.951 17.4946L116.094 18.2911L116.237 17.5253L118.667 9.72424H121.628L117.431 20.7723H114.766L110.549 9.72424H113.51L115.951 17.4946Z" fill="#222326"/>
<path d="M129.174 20.9765C128.323 20.9765 127.55 20.837 126.856 20.5579C126.161 20.2788 125.566 19.901 125.069 19.4245C124.572 18.9412 124.187 18.3762 123.915 17.7295C123.65 17.076 123.517 16.3783 123.517 15.6363V15.2278C123.517 14.3838 123.65 13.6145 123.915 12.9202C124.181 12.2191 124.552 11.6166 125.028 11.1129C125.505 10.6092 126.07 10.2178 126.723 9.93866C127.377 9.65957 128.088 9.52002 128.857 9.52002C129.654 9.52002 130.361 9.65276 130.981 9.91824C131.607 10.1769 132.135 10.5445 132.564 11.021C132.999 11.4975 133.329 12.0727 133.554 12.7466C133.779 13.4137 133.891 14.1523 133.891 14.9624V16.1672H126.396C126.451 16.5416 126.56 16.8854 126.723 17.1985C126.893 17.5049 127.108 17.7703 127.366 17.995C127.625 18.2196 127.921 18.3932 128.255 18.5157C128.588 18.6383 128.952 18.6995 129.347 18.6995C129.626 18.6995 129.902 18.6723 130.174 18.6178C130.453 18.5634 130.719 18.4851 130.971 18.383C131.223 18.2741 131.457 18.1413 131.675 17.9848C131.893 17.8282 132.084 17.6444 132.247 17.4334L133.666 18.965C133.489 19.2169 133.258 19.4653 132.972 19.7104C132.693 19.9486 132.359 20.1631 131.971 20.3537C131.59 20.5375 131.165 20.6872 130.695 20.8029C130.225 20.9187 129.718 20.9765 129.174 20.9765ZM128.837 11.8174C128.517 11.8174 128.224 11.8753 127.959 11.991C127.693 12.0999 127.458 12.2599 127.254 12.4709C127.057 12.682 126.89 12.9338 126.754 13.2265C126.618 13.5192 126.515 13.846 126.447 14.2068H131.103V13.9821C131.09 13.6826 131.032 13.4001 130.93 13.1346C130.828 12.8692 130.681 12.6411 130.491 12.4505C130.3 12.2531 130.065 12.0999 129.786 11.991C129.514 11.8753 129.197 11.8174 128.837 11.8174Z" fill="#222326"/>
<path d="M139.241 19.1284C139.241 18.8629 139.286 18.6178 139.374 18.3932C139.463 18.1617 139.592 17.9643 139.762 17.801C139.932 17.6308 140.14 17.498 140.385 17.4027C140.63 17.3006 140.906 17.2496 141.212 17.2496C141.518 17.2496 141.794 17.3006 142.039 17.4027C142.284 17.498 142.489 17.6308 142.652 17.801C142.822 17.9643 142.951 18.1617 143.04 18.3932C143.135 18.6178 143.183 18.8629 143.183 19.1284C143.183 19.387 143.135 19.6287 143.04 19.8533C142.951 20.078 142.822 20.2754 142.652 20.4456C142.489 20.6089 142.284 20.7383 142.039 20.8336C141.794 20.9289 141.518 20.9765 141.212 20.9765C140.906 20.9765 140.63 20.9289 140.385 20.8336C140.14 20.7383 139.932 20.6089 139.762 20.4456C139.592 20.2754 139.463 20.078 139.374 19.8533C139.286 19.6287 139.241 19.387 139.241 19.1284Z" fill="#222326"/>
<path d="M148.544 15.1462C148.544 14.3429 148.659 13.6009 148.891 12.9202C149.122 12.2327 149.459 11.6371 149.902 11.1333C150.351 10.6296 150.895 10.2348 151.535 9.94887C152.182 9.66297 152.921 9.52002 153.751 9.52002C154.581 9.52002 155.32 9.66297 155.967 9.94887C156.613 10.2348 157.158 10.6296 157.6 11.1333C158.05 11.6371 158.39 12.2327 158.622 12.9202C158.853 13.6009 158.969 14.3429 158.969 15.1462V15.3606C158.969 16.1706 158.853 16.9194 158.622 17.607C158.39 18.2877 158.053 18.8799 157.611 19.3836C157.168 19.8874 156.624 20.2822 155.977 20.5681C155.33 20.8472 154.595 20.9867 153.771 20.9867C152.941 20.9867 152.199 20.8472 151.545 20.5681C150.899 20.2822 150.351 19.8874 149.902 19.3836C149.459 18.8799 149.122 18.2877 148.891 17.607C148.659 16.9194 148.544 16.1706 148.544 15.3606V15.1462ZM151.382 15.3606C151.382 15.8235 151.426 16.2591 151.515 16.6676C151.603 17.0692 151.743 17.4232 151.933 17.7295C152.124 18.029 152.369 18.2673 152.669 18.4442C152.975 18.6212 153.343 18.7097 153.771 18.7097C154.187 18.7097 154.544 18.6212 154.844 18.4442C155.143 18.2673 155.385 18.029 155.569 17.7295C155.759 17.4232 155.899 17.0692 155.987 16.6676C156.076 16.2591 156.12 15.8235 156.12 15.3606V15.1462C156.12 14.6969 156.076 14.2714 155.987 13.8698C155.899 13.4682 155.759 13.1142 155.569 12.8079C155.385 12.5016 155.143 12.2599 154.844 12.0829C154.544 11.9059 154.18 11.8174 153.751 11.8174C153.329 11.8174 152.968 11.9059 152.669 12.0829C152.369 12.2599 152.124 12.5016 151.933 12.8079C151.743 13.1142 151.603 13.4682 151.515 13.8698C151.426 14.2714 151.382 14.6969 151.382 15.1462V15.3606Z" fill="#222326"/>
<path d="M169.425 9.52002C169.853 9.52002 170.248 9.55065 170.609 9.61192C170.977 9.66637 171.273 9.72764 171.497 9.79571L171.079 12.6241C170.704 12.5356 170.32 12.4709 169.925 12.4301C169.537 12.3824 169.166 12.3586 168.812 12.3586C168.015 12.3586 167.376 12.5118 166.892 12.8181C166.416 13.1244 166.058 13.5635 165.82 14.1353V20.7723H162.982V9.72424H165.626L165.759 11.5315C166.208 10.9053 166.746 10.4152 167.372 10.0612C167.998 9.70041 168.683 9.52002 169.425 9.52002Z" fill="#222326"/>
<path d="M173.764 15.1666C173.764 14.3293 173.866 13.5635 174.07 12.8692C174.281 12.1748 174.581 11.5792 174.969 11.0823C175.357 10.5853 175.827 10.2007 176.378 9.92845C176.929 9.65616 177.552 9.52002 178.247 9.52002C178.893 9.52002 179.448 9.62893 179.911 9.84676C180.374 10.0646 180.769 10.3743 181.095 10.7759L181.208 9.72424H183.791V20.4149C183.791 21.1637 183.662 21.8308 183.403 22.4162C183.151 23.0017 182.794 23.4952 182.331 23.8968C181.875 24.2984 181.324 24.6014 180.677 24.8056C180.037 25.0166 179.329 25.1221 178.553 25.1221C178.219 25.1221 177.862 25.0881 177.481 25.02C177.1 24.9519 176.722 24.8464 176.347 24.7035C175.973 24.5605 175.619 24.3767 175.286 24.1521C174.952 23.9342 174.666 23.6722 174.428 23.3658L175.704 21.6402C176.065 22.0487 176.473 22.3584 176.929 22.5694C177.386 22.7872 177.879 22.8962 178.41 22.8962C179.206 22.8962 179.826 22.6817 180.268 22.2529C180.718 21.8308 180.942 21.2284 180.942 20.4456V19.8125C180.609 20.1801 180.217 20.466 179.768 20.6702C179.326 20.8744 178.812 20.9765 178.226 20.9765C177.539 20.9765 176.919 20.837 176.368 20.5579C175.823 20.272 175.357 19.8806 174.969 19.3836C174.581 18.8867 174.281 18.2979 174.07 17.6172C173.866 16.9296 173.764 16.1843 173.764 15.381V15.1666ZM176.613 15.381C176.613 15.8439 176.657 16.2762 176.746 16.6778C176.841 17.0726 176.984 17.4198 177.175 17.7193C177.365 18.012 177.607 18.2434 177.9 18.4136C178.192 18.5838 178.539 18.6689 178.941 18.6689C179.438 18.6689 179.846 18.5736 180.166 18.383C180.493 18.1924 180.752 17.9269 180.942 17.5865V12.91C180.752 12.5628 180.493 12.2974 180.166 12.1136C179.846 11.923 179.445 11.8277 178.961 11.8277C178.56 11.8277 178.213 11.9162 177.92 12.0931C177.627 12.2633 177.382 12.5016 177.185 12.8079C176.994 13.1074 176.851 13.4614 176.756 13.8698C176.661 14.2714 176.613 14.7037 176.613 15.1666V15.381Z" fill="#222326"/>
<circle cx="16.3761" cy="15.9919" r="14.6637" stroke="#222326" stroke-width="2.5"/>
<path d="M19.1136 21.2908C19.0424 21.1484 18.9819 20.9846 18.9321 20.7995C18.8822 20.6143 18.8395 20.4185 18.8039 20.212C18.6401 20.39 18.4514 20.5574 18.2378 20.714C18.0241 20.8707 17.7856 21.0096 17.5221 21.1306C17.2658 21.2445 16.9809 21.3336 16.6676 21.3976C16.3543 21.4688 16.0161 21.5045 15.6529 21.5045C15.0619 21.5045 14.5171 21.419 14.0187 21.2481C13.5273 21.0772 13.1036 20.8387 12.7476 20.5325C12.3915 20.2263 12.1138 19.8631 11.9144 19.443C11.715 19.0157 11.6154 18.5529 11.6154 18.0544C11.6154 16.8367 12.0675 15.8968 12.9719 15.2345C13.8834 14.5652 15.2399 14.2305 17.0415 14.2305H18.6971V13.5469C18.6971 12.9914 18.5155 12.5535 18.1523 12.2331C17.7892 11.9055 17.2658 11.7417 16.5822 11.7417C15.9769 11.7417 15.5354 11.8735 15.2577 12.1369C14.98 12.3933 14.8411 12.7387 14.8411 13.173H11.8717C11.8717 12.6817 11.9785 12.2153 12.1921 11.7738C12.4129 11.3323 12.7298 10.9442 13.1428 10.6095C13.5629 10.2748 14.0721 10.0114 14.6702 9.8191C15.2755 9.61971 15.9662 9.52002 16.7424 9.52002C17.4402 9.52002 18.0882 9.60547 18.6864 9.77637C19.2917 9.94727 19.815 10.2001 20.2565 10.5347C20.698 10.8694 21.0434 11.2931 21.2926 11.8058C21.5419 12.3114 21.6665 12.8989 21.6665 13.5682V18.5244C21.6665 19.1439 21.7056 19.6566 21.784 20.0625C21.8623 20.4684 21.9762 20.8173 22.1258 21.1092V21.2908H19.1136ZM16.2831 19.208C16.5822 19.208 16.8599 19.1724 17.1162 19.1012C17.3726 19.0299 17.604 18.9374 17.8105 18.8234C18.017 18.7095 18.195 18.5813 18.3446 18.4389C18.4941 18.2894 18.6116 18.1398 18.6971 17.9903V16.0036H17.1803C16.7175 16.0036 16.3223 16.0499 15.9947 16.1424C15.6671 16.2279 15.4001 16.3525 15.1936 16.5163C14.9871 16.6729 14.834 16.8652 14.7343 17.0931C14.6346 17.3138 14.5848 17.5559 14.5848 17.8194C14.5848 18.2182 14.7236 18.5493 15.0013 18.8128C15.2862 19.0762 15.7134 19.208 16.2831 19.208Z" fill="#222326"/>
</svg>

'''
'''--- src/assets/ethereum-icon-black.734e726b.svg ---
<svg enable-background="new 0 0 1920 1920" viewBox="0 0 1920 1920" xmlns="http://www.w3.org/2000/svg"><path d="m960 730.9-539.8 245.4 539.8 319.1 539.8-319.1z" opacity=".6"/><path d="m420.2 976.3 539.8 319.1v-564.5-650.3z" opacity=".45"/><path d="m960 80.6v650.3 564.5l539.8-319.1z" opacity=".8"/><path d="m420.2 1078.7 539.8 760.7v-441.8z" opacity=".45"/><path d="m960 1397.6v441.8l540.2-760.7z" opacity=".8"/></svg>
'''
'''--- src/assets/ethereum-icon-black.ff315678.svg ---
<svg enable-background="new 0 0 1920 1920" viewBox="0 0 1920 1920" xmlns="http://www.w3.org/2000/svg"><path d="m0 0h1920v1920h-1920z" fill="#eceff0"/><path d="m959.8 730.9-539.8 245.4 539.8 319.1 539.9-319.1z" opacity=".6"/><path d="m420.2 976.3 539.8 319.1v-564.5-650.3z" opacity=".45"/><path d="m960 80.6v650.3 564.5l539.8-319.1z" opacity=".8"/><path d="m420 1078.7 539.8 760.7v-441.8z" opacity=".45"/><path d="m959.8 1397.6v441.8l540.2-760.7z" opacity=".8"/></svg>
'''
'''--- src/assets/ethereum-icon-purple.56fbef66.svg ---
<svg enable-background="new 0 0 1920 1920" viewBox="0 0 1920 1920" xmlns="http://www.w3.org/2000/svg"><path d="m959.8 80.7-539.7 895.6 539.7-245.3z" fill="#8a92b2"/><path d="m959.8 731-539.7 245.3 539.7 319.1z" fill="#62688f"/><path d="m1499.6 976.3-539.8-895.6v650.3z" fill="#62688f"/><path d="m959.8 1295.4 539.8-319.1-539.8-245.3z" fill="#454a75"/><path d="m420.1 1078.7 539.7 760.6v-441.7z" fill="#8a92b2"/><path d="m959.8 1397.6v441.7l540.1-760.6z" fill="#62688f"/></svg>
'''
'''--- src/assets/near_logo.svg ---
<svg height="50" viewBox="0 0 189 50" width="189" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><linearGradient id="a" gradientTransform="matrix(1 0 0 -1 0 52)" gradientUnits="userSpaceOnUse" x1="1.6589" x2="47.883" y1="4.1175" y2="50.3416"><stop offset=".21" stop-color="#24272a"/><stop offset=".42" stop-color="#24272a" stop-opacity="0"/><stop offset=".59" stop-color="#24272a" stop-opacity="0"/><stop offset=".81" stop-color="#24272a"/></linearGradient><path d="m5.7 49.5c1.6 0 3.2-.7 4.3-2l38.7-44.8c-1.1-1.7-2.9-2.7-4.8-2.7-1.6 0-3.2.7-4.3 1.9l-38.9 44.7c1 1.8 2.9 2.9 5 2.9z" fill="url(#a)"/><g fill="#24272a"><path d="m5.7 49.5c.9 0 1.8-.2 2.6-.6v-37.5l30.1 36.1c1.1 1.3 2.7 2 4.4 2h1.2c3.1 0 5.7-2.5 5.7-5.7v-38.1c-.2-3.2-2.7-5.7-5.8-5.7-.9 0-1.8.2-2.6.6v37.5l-30.1-36.1c-1.1-1.3-2.7-2-4.4-2h-1.1c-3.2 0-5.7 2.5-5.7 5.7v38.2c0 3.1 2.5 5.6 5.7 5.6z"/><path d="m94.2 10.3v28.9c0 .2-.2.4-.4.4h-3c-1.4 0-2.7-.7-3.5-1.9l-13.6-21 .5 10.5v12c0 .2-.2.4-.4.4h-4c-.2 0-.4-.2-.4-.4v-28.9c0-.2.2-.4.4-.4h3c1.4 0 2.7.7 3.5 1.9l13.6 21-.4-10.5v-12c0-.2.2-.4.4-.4h4c.2 0 .3.2.3.4z"/><path d="m134.9 39.6h-4.2c-.2 0-.4-.2-.4-.4v-.1l11.1-28.8c.1-.2.3-.4.6-.4h5.3c.3 0 .5.2.6.4l11.1 28.8c.1.2 0 .5-.3.5h-.1-4.2c-.2 0-.3-.1-.4-.3l-9-23.7c-.1-.2-.3-.3-.5-.2-.1 0-.2.1-.2.2l-9 23.7c-.1.2-.3.3-.4.3z"/><path d="m188.2 39-8.4-10.7c4.7-.9 7.5-4.1 7.5-9 0-5.6-3.6-9.4-10.1-9.4h-11.7c-.3 0-.6.3-.6.6 0 2.2 1.8 4 4 4h7.8c3.9 0 5.8 2 5.8 4.9s-1.8 5-5.8 5h-11.2c-.3 0-.6.3-.6.6v14.3c0 .2.2.4.4.4h4c.2 0 .4-.2.4-.4v-10.7h4.6l7.2 9.5c.8 1 2 1.6 3.3 1.6h3c.2 0 .4-.2.4-.4s0-.3 0-.3z"/><path d="m122.3 9.9h-18.4c-.3 0-.6.2-.6.6 0 2.2 1.8 4 4 4h15c.2 0 .4-.2.4-.4v-3.8c0-.2-.2-.4-.4-.4zm0 25.1h-13.8c-.2 0-.4-.2-.4-.4v-7.5c0-.2.2-.4.4-.4h12.7c.2 0 .4-.2.4-.4v-3.8c0-.2-.2-.4-.4-.4h-17.3c-.3 0-.6.3-.6.6v16.3c0 .3.3.6.6.6h18.4c.2 0 .4-.2.4-.4v-3.8c0-.2-.2-.4-.4-.4z"/></g></svg>
'''
'''--- src/assets/near_logo_white.svg ---
<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 414 162"><defs><linearGradient id="linear-gradient" x1="39.01" y1="122.98" x2="122.98" y2="39.01" gradientUnits="userSpaceOnUse"><stop offset=".21" stop-color="#fff"/><stop offset=".42" stop-color="#fff" stop-opacity="0"/><stop offset=".59" stop-color="#fff" stop-opacity="0"/><stop offset=".81" stop-color="#fff"/></linearGradient><style>.cls-1{fill:#fff}</style></defs><path class="cls-1" d="M207.21 54.75v52.5a.76.76 0 01-.75.75H201a7.49 7.49 0 01-6.3-3.43l-24.78-38.3.85 19.13v21.85a.76.76 0 01-.75.75h-7.22a.76.76 0 01-.75-.75v-52.5a.76.76 0 01.75-.75h5.43a7.52 7.52 0 016.3 3.42l24.78 38.24-.77-19.06V54.75a.75.75 0 01.75-.75h7.22a.76.76 0 01.7.75zM281 108h-7.64a.75.75 0 01-.7-1l20.24-52.28A1.14 1.14 0 01294 54h9.57a1.14 1.14 0 011.05.72L324.8 107a.75.75 0 01-.7 1h-7.64a.76.76 0 01-.71-.48l-16.31-43a.75.75 0 00-1.41 0l-16.31 43a.76.76 0 01-.72.48zm96.84-1.21L362.66 87.4c8.57-1.62 13.58-7.4 13.58-16.27 0-10.19-6.63-17.13-18.36-17.13h-21.17a1.12 1.12 0 00-1.12 1.12 7.2 7.2 0 007.2 7.2H357c7.09 0 10.49 3.63 10.49 8.87s-3.32 9-10.49 9h-20.29a1.13 1.13 0 00-1.12 1.13v26a.75.75 0 00.75.75h7.22a.76.76 0 00.75-.75V87.87h8.33l13.17 17.19a7.51 7.51 0 006 2.94h5.48a.75.75 0 00.55-1.21zM258.17 54h-33.5a1 1 0 00-1 1 7.33 7.33 0 007.33 7.33h27.17a.74.74 0 00.75-.75v-6.83a.75.75 0 00-.75-.75zm0 45.67h-25a.76.76 0 01-.75-.75V85.38a.75.75 0 01.75-.75h23.11a.75.75 0 00.75-.75V77a.75.75 0 00-.75-.75h-31.49a1.13 1.13 0 00-1.12 1.13v29.45a1.12 1.12 0 001.12 1.13h33.38a.75.75 0 00.75-.75v-6.83a.74.74 0 00-.75-.71z"/><path d="M46.29 126a10.29 10.29 0 007.79-3.57l70.35-81.61a10.29 10.29 0 00-8.72-4.82 10.28 10.28 0 00-7.75 3.53l-70.69 81.13a10.27 10.27 0 009.02 5.34z" fill="url(#linear-gradient)"/><path class="cls-1" d="M46.29 126a10.18 10.18 0 004.71-1.15V56.72l54.65 65.58a10.32 10.32 0 007.91 3.7h2.15A10.29 10.29 0 00126 115.71V46.29A10.29 10.29 0 00115.71 36a10.32 10.32 0 00-4.71 1.13v68.15L56.35 39.7a10.32 10.32 0 00-7.91-3.7h-2.15A10.29 10.29 0 0036 46.29v69.42A10.29 10.29 0 0046.29 126z"/></svg>
'''
'''--- src/environments/environment.prod.ts ---
export const environment = {
  production: true,
  firebase: {
    apiKey: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    authDomain: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    databaseURL: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    projectId: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    storageBucket: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    messagingSenderId: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
  }
};

'''
'''--- src/environments/environment.ts ---
// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.

export const environment = {
  production: false
};

/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/dist/zone-error';  // Included with Angular CLI.

'''
'''--- src/index.html ---
<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>DecentraDocs</title>
    <base href="/">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" type="image/x-icon" href="favicon.ico">
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
</head>

<body class="mat-typography">
    <app-root></app-root>
</body>

</html>
'''
'''--- src/main.ts ---
import { enableProdMode } from '@angular/core';
import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';

import { AppModule } from './app/app.module';
import { environment } from './environments/environment';

if (environment.production) {
  enableProdMode();
}

platformBrowserDynamic().bootstrapModule(AppModule)
  .catch(err => console.error(err));

'''
'''--- src/polyfills.ts ---
/**
 * This file includes polyfills needed by Angular and is loaded before the app.
 * You can add your own extra polyfills to this file.
 *
 * This file is divided into 2 sections:
 *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.
 *   2. Application imports. Files imported after ZoneJS that should be loaded before your main
 *      file.
 *
 * The current setup is for so-called "evergreen" browsers; the last versions of browsers that
 * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),
 * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.
 *
 * Learn more in https://angular.io/guide/browser-support
 */

/***************************************************************************************************
 * BROWSER POLYFILLS
 */

/** IE10 and IE11 requires the following for NgClass support on SVG elements */
// import 'classlist.js';  // Run `npm install --save classlist.js`.

/**
 * Web Animations `@angular/platform-browser/animations`
 * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.
 * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).
 */
// import 'web-animations-js';  // Run `npm install --save web-animations-js`.

/**
 * By default, zone.js will patch all possible macroTask and DomEvents
 * user can disable parts of macroTask/DomEvents patch by setting following flags
 * because those flags need to be set before `zone.js` being loaded, and webpack
 * will put import in the top of bundle, so user need to create a separate file
 * in this directory (for example: zone-flags.ts), and put the following flags
 * into that file, and then add the following code before importing zone.js.
 * import './zone-flags';
 *
 * The flags allowed in zone-flags.ts are listed here.
 *
 * The following flags will work for all browsers.
 *
 * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame
 * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick
 * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames
 *
 *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js
 *  with the following flag, it will bypass `zone.js` patch for IE/Edge
 *
 *  (window as any).__Zone_enable_cross_context_check = true;
 *
 */

/***************************************************************************************************
 * Zone JS is required by default for Angular itself.
 */
import 'zone.js/dist/zone';  // Included with Angular CLI.

/***************************************************************************************************
 * APPLICATION IMPORTS
 */

'''
'''--- src/test.ts ---
// This file is required by karma.conf.js and loads recursively all the .spec and framework files

import 'zone.js/dist/zone-testing';
import { getTestBed } from '@angular/core/testing';
import {
  BrowserDynamicTestingModule,
  platformBrowserDynamicTesting
} from '@angular/platform-browser-dynamic/testing';

declare const require: {
  context(path: string, deep?: boolean, filter?: RegExp): {
    keys(): string[];
    <T>(id: string): T;
  };
};

// First, initialize the Angular testing environment.
getTestBed().initTestEnvironment(
  BrowserDynamicTestingModule,
  platformBrowserDynamicTesting()
);
// Then we find all the tests.
const context = require.context('./', true, /\.spec\.ts$/);
// And load the modules.
context.keys().map(context);

'''
'''--- test/DVSRegistry.spec.js ---
const chai = require('chai')
const chaiAsPromised = require('chai-as-promised')
chai.use(chaiAsPromised).should();
const { expect, assert } = chai
const { v4: uuidv4 } = require('uuid');

var DVSRegistry = artifacts.require('DVSRegistry');

const ERROR_GENERIC = 'VM Exception while processing transaction\: revert';
const REASON_GIVEN = '\-\- Reason given\:';
const PUBLIC_KEY = '00000-00000-00000-00000-00000';

function createExceptionMessage(reason, addReasonGiven = true) {
    if (addReasonGiven) {
        return new RegExp(ERROR_GENERIC + ' ' + reason + ' ' + REASON_GIVEN + ' ' + reason);
    } else {
        return new RegExp(ERROR_GENERIC + ' ' + reason);
    }
}

contract('Fake test', function(accounts) {
    let dVSRegistry;
    it('connect DVSRegistry contract', async() => {
        dVSRegistry = await DVSRegistry.new();
        expect(await dVSRegistry.message()).to.eq('Hello World')
    })
    it('be able to change the message', async() => {
        await dVSRegistry.setMessage('Hello COVID-19');
        expect(await dVSRegistry.message()).to.not.eq('Hello World')
        expect(await dVSRegistry.message()).to.eq('Hello COVID-19')
    })
})

contract('Test DVSRegistry contract', function(accounts) {
    let dVSRegistry;
    const doc1 = {
        docId: uuidv4(),
        encryptedKey: uuidv4(),
        subscriptionFee: 123456,
        authorized: []
    }
    const doc2 = {
        docId: uuidv4(),
        encryptedKey: uuidv4(),
        subscriptionFee: 0,
        authorized: [accounts[1], accounts[2]]
    }
    const doc3_public = {
        docId: uuidv4(),
        encryptedKey: PUBLIC_KEY,
        subscriptionFee: 0,
        authorized: []
    }
    const ERROR_NOT_ALLOWED_TO_GET_KEY = createExceptionMessage('not allowed to get the key for this document', false);
    const ERROR_DOC_ALREADY_EXISTS = createExceptionMessage('a document with this id already exists', false);
    const ERROR_DOC_DOES_NOT_EXISTS = createExceptionMessage('this document has not been registered', false);
    const ERROR_ONLY_AUTHOR_ALLOWED = createExceptionMessage('only the author of the document can change authorisations', false);
    const ERROR_ALREADY_SUBSCRIBED = createExceptionMessage('account has already subscribed to this document', false);
    const ERROR_NOT_ENOUGH_FEE = createExceptionMessage('not enough fee to subscribe to this document', false);
    const ERROR_ONLY_OWNER = createExceptionMessage('only contract owner can call this method', false);
    const ERROR_AMOUNT_TOO_HIGH = createExceptionMessage('requested amount too high compared to actual balance', false);

    it('be able to register a protected document', async() => {
        dVSRegistry = await DVSRegistry.new({ from: accounts[0] });
        expect(await dVSRegistry.docExists(doc1.docId)).to.be.false;
        expect(await dVSRegistry.docExists(doc2.docId)).to.be.false;
        await dVSRegistry.registerDoc(doc1.docId, doc1.encryptedKey, doc1.subscriptionFee, doc1.authorized, { from: accounts[0] });
        expect(await dVSRegistry.docExists(doc1.docId)).to.be.true;
        expect(await dVSRegistry.docExists(doc2.docId)).to.be.false;
        let authorized = await dVSRegistry.getAuthorizedAccounts(doc1.docId);
        expect(authorized.length).to.be.eq(doc1.authorized.length);
        expect(await dVSRegistry.getAuthor(doc1.docId)).to.be.eq(accounts[0]);
    })
    it('not be able to regsiter the same document again', async() => {
        await dVSRegistry.registerDoc(doc1.docId, doc1.encryptedKey, doc1.subscriptionFee, doc1.authorized, { from: accounts[0] }).should.be.rejectedWith(ERROR_DOC_ALREADY_EXISTS);;
    })
    it('be able to get encryption key if author', async() => {
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[0] })).to.eq(doc1.encryptedKey);
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[1] })).to.eq('');
    })
    it('be able to get encryption key if authorized', async() => {
        await dVSRegistry.registerDoc(doc2.docId, doc2.encryptedKey, doc2.subscriptionFee, doc2.authorized, { from: accounts[0] });
        expect(await dVSRegistry.docExists(doc2.docId)).to.be.true;
        expect(await dVSRegistry.getDocumentKey(doc2.docId, { from: accounts[0] })).to.eq(doc2.encryptedKey);
        expect(await dVSRegistry.getDocumentKey(doc2.docId, { from: accounts[1] })).to.eq(doc2.encryptedKey);
        expect(await dVSRegistry.getDocumentKey(doc2.docId, { from: accounts[2] })).to.eq(doc2.encryptedKey);
        expect(await dVSRegistry.getDocumentKey(doc2.docId, { from: accounts[3] })).to.eq('');
        let authorized = await dVSRegistry.getAuthorizedAccounts(doc2.docId);
        expect(authorized.length).to.be.eq(doc2.authorized.length);
        expect(await dVSRegistry.getAuthor(doc2.docId)).to.be.eq(accounts[0]);
    })
    it('be able to get encryption key if key is public_key', async() => {
        await dVSRegistry.registerDoc(doc3_public.docId, doc3_public.encryptedKey, doc3_public.subscriptionFee, doc3_public.authorized, { from: accounts[0] });
        expect(await dVSRegistry.docExists(doc3_public.docId)).to.be.true;
        expect(await dVSRegistry.getDocumentKey(doc3_public.docId, { from: accounts[0] })).to.eq(doc3_public.encryptedKey);
        expect(await dVSRegistry.getDocumentKey(doc3_public.docId, { from: accounts[1] })).to.eq(doc3_public.encryptedKey);
        expect(await dVSRegistry.getDocumentKey(doc3_public.docId, { from: accounts[2] })).to.eq(doc3_public.encryptedKey);
        expect(await dVSRegistry.getDocumentKey(doc3_public.docId, { from: accounts[3] })).to.eq(doc3_public.encryptedKey);
    })
    it('be able to add authorized address to a document if author', async() => {
        await dVSRegistry.setAccess(doc1.docId, [accounts[1], accounts[3]], [], { from: accounts[0] });
        let authorized = await dVSRegistry.getAuthorizedAccounts(doc1.docId);
        expect(authorized.length).to.be.eq(2);
        expect(authorized.includes(accounts[1])).to.be.true;
        expect(authorized.includes(accounts[3])).to.be.true;
        expect(authorized.includes(accounts[2])).to.be.false;
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[0] })).to.eq(doc1.encryptedKey);
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[1] })).to.eq(doc1.encryptedKey);
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[3] })).to.eq(doc1.encryptedKey);
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[2] })).to.eq('');
    })
    it('not be able to add authorized address if not author', async() => {
        await dVSRegistry.setAccess(doc1.docId, [accounts[2]], [], { from: accounts[1] }).should.be.rejectedWith(ERROR_ONLY_AUTHOR_ALLOWED);
    })
    it('be able to deny address if author', async() => {
        await dVSRegistry.setAccess(doc1.docId, [], [accounts[1], accounts[2]], { from: accounts[0] });
        let authorized = await dVSRegistry.getAuthorizedAccounts(doc1.docId);
        expect(authorized.length).to.be.eq(1);
        expect(authorized.includes(accounts[1])).to.be.false;
        expect(authorized.includes(accounts[2])).to.be.false;
        expect(authorized.includes(accounts[3])).to.be.true;
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[0] })).to.eq(doc1.encryptedKey);
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[3] })).to.eq(doc1.encryptedKey);
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[1] })).to.eq('');
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[2] })).to.eq('');
    })
    it('be able to mix authorized/denied address to a document if author', async() => {
        await dVSRegistry.setAccess(doc1.docId, [accounts[1], accounts[2], accounts[4]], [accounts[3], accounts[4]], { from: accounts[0] });
        let authorized = await dVSRegistry.getAuthorizedAccounts(doc1.docId);
        expect(authorized.length).to.be.eq(2);
        expect(authorized.includes(accounts[1])).to.be.true;
        expect(authorized.includes(accounts[2])).to.be.true;
        expect(authorized.includes(accounts[3])).to.be.false;
        expect(authorized.includes(accounts[4])).to.be.false;
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[0] })).to.eq(doc1.encryptedKey);
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[1] })).to.eq(doc1.encryptedKey);
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[2] })).to.eq(doc1.encryptedKey);
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[3] })).to.eq('');
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[4] })).to.eq('');
        await dVSRegistry.setAccess(doc1.docId, [accounts[3], accounts[4]], [accounts[1], accounts[2]], { from: accounts[0] });
        authorized = await dVSRegistry.getAuthorizedAccounts(doc1.docId);
        expect(authorized.length).to.be.eq(2);
        expect(authorized.includes(accounts[1])).to.be.false;
        expect(authorized.includes(accounts[2])).to.be.false;
        expect(authorized.includes(accounts[3])).to.be.true;
        expect(authorized.includes(accounts[4])).to.be.true;
    })
    it('not be able to deny address if not author', async() => {
        await dVSRegistry.setAccess(doc1.docId, [], [accounts[2]], { from: accounts[3] }).should.be.rejectedWith(ERROR_ONLY_AUTHOR_ALLOWED);
    })
    it('be able to subscribe to a free document', async() => {
        expect(await dVSRegistry.getDocumentKey(doc2.docId, { from: accounts[3] })).to.eq('');
        let authorized = await dVSRegistry.getAuthorizedAccounts(doc2.docId);
        expect(authorized.includes(accounts[3])).to.be.false;
        await dVSRegistry.subscribe(doc2.docId, { from: accounts[3] });
        expect(await dVSRegistry.getDocumentKey(doc2.docId, { from: accounts[3] })).to.eq(doc2.encryptedKey);
        authorized = await dVSRegistry.getAuthorizedAccounts(doc2.docId);
        expect(authorized.includes(accounts[3])).to.be.true;
    })
    it('not be able to subscribe twice to a document', async() => {
        await dVSRegistry.subscribe(doc2.docId, { from: accounts[3] }).should.be.rejectedWith(ERROR_ALREADY_SUBSCRIBED);
        await dVSRegistry.subscribe(doc2.docId, { from: accounts[2] }).should.be.rejectedWith(ERROR_ALREADY_SUBSCRIBED);
    })
    it('not be able to subscribe to a document if author', async() => {
        await dVSRegistry.subscribe(doc2.docId, { from: accounts[0] }).should.be.rejectedWith(ERROR_ALREADY_SUBSCRIBED);
    })
    it('be able to subscribe to a paid document', async() => {
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[1] })).to.eq('');
        let authorized = await dVSRegistry.getAuthorizedAccounts(doc1.docId);
        expect(authorized.includes(accounts[1])).to.be.false;
        await dVSRegistry.subscribe(doc1.docId, { from: accounts[1], value: doc1.subscriptionFee });
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[1] })).to.eq(doc1.encryptedKey);
        authorized = await dVSRegistry.getAuthorizedAccounts(doc1.docId);
        expect(authorized.includes(accounts[1])).to.be.true;
    })
    it('not be able to subscribe for less than subscription fee', async() => {
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[2] })).to.eq('');
        await dVSRegistry.subscribe(doc1.docId, { from: accounts[2], value: 0 }).should.be.rejectedWith(ERROR_NOT_ENOUGH_FEE);
        await dVSRegistry.subscribe(doc1.docId, { from: accounts[2], value: doc1.subscriptionFee - 1 }).should.be.rejectedWith(ERROR_NOT_ENOUGH_FEE);
        await dVSRegistry.subscribe(doc1.docId, { from: accounts[2], value: 0 }).should.be.rejectedWith(ERROR_NOT_ENOUGH_FEE);
    })
    it('be able to subscribe for more than subscription fee', async() => {
        let balance = await web3.eth.getBalance(dVSRegistry.address)
        expect(balance).to.equal("0")
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[2] })).to.eq('');
        await dVSRegistry.subscribe(doc1.docId, { from: accounts[2], value: doc1.subscriptionFee + 1 });
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[2] })).to.eq(doc1.encryptedKey);
        balance = await web3.eth.getBalance(dVSRegistry.address)
        expect(balance).to.equal("1")
    })
    it('not be able to withdraw funds from contract if not contract owner', async() => {
        let cBalance = await web3.eth.getBalance(dVSRegistry.address)
        expect(cBalance).to.equal("1")
        let uBalanceBefore = await web3.eth.getBalance(accounts[1])
        console.log("balance before", uBalanceBefore);
        await dVSRegistry.withdraw(1, accounts[1], { from: accounts[2] }).should.be.rejectedWith(ERROR_ONLY_OWNER)
        let uBalanceAfter = await web3.eth.getBalance(accounts[1])
        console.log("balance after", uBalanceAfter);
        expect(uBalanceAfter).to.be.eq(uBalanceBefore);
    })
    it('not be able to withdraw more than the actual contract balance', async() => {
        let cBalance = await web3.eth.getBalance(dVSRegistry.address)
        expect(cBalance).to.equal("1")
        let uBalanceBefore = await web3.eth.getBalance(accounts[1])
        console.log("balance before", uBalanceBefore);
        await dVSRegistry.withdraw(2, accounts[1], { from: accounts[0] }).should.be.rejectedWith(ERROR_AMOUNT_TOO_HIGH)
        let uBalanceAfter = await web3.eth.getBalance(accounts[1])
        console.log("balance after", uBalanceAfter);
        expect(uBalanceAfter).to.be.eq(uBalanceBefore);
    })
    it('be able to withdraw funds from contract to another address if owner only', async() => {
        let cBalance = await web3.eth.getBalance(dVSRegistry.address)
        expect(cBalance).to.equal("1")
        let uBalanceBefore = await web3.eth.getBalance(accounts[1])
        console.log("balance before", uBalanceBefore);
        await dVSRegistry.withdraw(1, accounts[1], { from: accounts[0] });
        let uBalanceAfter = await web3.eth.getBalance(accounts[1])
        console.log("balance after", uBalanceAfter);
        expect(uBalanceAfter).to.be.not.eq(uBalanceBefore);
        balance = await web3.eth.getBalance(dVSRegistry.address)
        expect(balance).to.equal("0")
    })
    it('be able to consult subscription fee', async() => {
        let fee = await dVSRegistry.getSubscriptionFee(doc1.docId);
        expect(fee.toNumber()).to.equal(doc1.subscriptionFee);
        fee = await dVSRegistry.getSubscriptionFee(doc2.docId);
        expect(fee.toNumber()).to.equal(doc2.subscriptionFee);
        await dVSRegistry.getSubscriptionFee(uuidv4()).should.be.rejectedWith(ERROR_DOC_DOES_NOT_EXISTS);
    })
    it('be able to change subscription fee if author', async() => {
        let fee = await dVSRegistry.getSubscriptionFee(doc1.docId);
        expect(fee.toNumber()).to.equal(doc1.subscriptionFee);
        await dVSRegistry.setSubscriptionFee(doc1.docId, 654321, { from: accounts[0] });
        fee = await dVSRegistry.getSubscriptionFee(doc1.docId);
        expect(fee.toNumber()).to.equal(654321);
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[5] })).to.eq('');
        await dVSRegistry.subscribe(doc1.docId, { from: accounts[5], value: doc1.subscriptionFee }).should.be.rejectedWith(ERROR_NOT_ENOUGH_FEE);
        await dVSRegistry.subscribe(doc1.docId, { from: accounts[5], value: 654321 });
        expect(await dVSRegistry.getDocumentKey(doc1.docId, { from: accounts[5] })).to.eq(doc1.encryptedKey);
    })
    it('npt be able to change subscription fee if not author', async() => {
        let fee = await dVSRegistry.getSubscriptionFee(doc1.docId);
        expect(fee.toNumber()).to.equal(654321);
        await dVSRegistry.setSubscriptionFee(doc1.docId, 654321, { from: accounts[1] }).should.be.rejectedWith(ERROR_ONLY_AUTHOR_ALLOWED);
        fee = await dVSRegistry.getSubscriptionFee(doc1.docId);
        expect(fee.toNumber()).to.equal(654321);
    })
})
'''
'''--- truffle-config.js ---
var HDWalletProvider = require("truffle-hdwallet-provider");
const MNEMONIC = process.env.MNEMONIC
if (!MNEMONIC || MNEMONIC === '') {
    console.error("[WARNING] MNEMONIC environnement variable needs to be defined before you can deploy on testnet/mainnet using Infura");
}
const INFURA_URI = process.env.INFURA_URI
if (!INFURA_URI || INFURA_URI === '') {
    console.error("[WARNING] INFURA_URI environnement variable needs to be defined before you can deploy on testnet/mainnet using Infura");
}
/**
 * Use this file to configure your truffle project. It's seeded with some
 * common settings for different networks and features like migrations,
 * compilation and testing. Uncomment the ones you need or modify
 * them to suit your project as necessary.
 *
 * More information about configuration can be found at:
 *
 * truffleframework.com/docs/advanced/configuration
 *
 * To deploy via Infura you'll need a wallet provider (like @truffle/hdwallet-provider)
 * to sign your transactions before they're sent to a remote public node. Infura accounts
 * are available for free at: infura.io/register.
 *
 * You'll also need a mnemonic - the twelve word phrase the wallet uses to generate
 * public/private key pairs. If you're publishing your code to GitHub make sure you load this
 * phrase from a file you've .gitignored so it doesn't accidentally become public.
 *
 */

// const HDWalletProvider = require('@truffle/hdwallet-provider');
// const infuraKey = "fj4jll3k.....";
//
// const fs = require('fs');
// const mnemonic = fs.readFileSync(".secret").toString().trim();

module.exports = {
    /**
     * Networks define how you connect to your ethereum client and let you set the
     * defaults web3 uses to send transactions. If you don't specify one truffle
     * will spin up a development blockchain for you on port 9545 when you
     * run `develop` or `test`. You can ask a truffle command to use a specific
     * network from the command line, e.g
     *
     * $ truffle test --network <network-name>
     */

    networks: {
        // Useful for testing. The `development` name is special - truffle uses it by default
        // if it's defined here and no other network is specified at the command line.
        // You should run a client (like ganache-cli, geth or parity) in a separate terminal
        // tab if you use this network and you must also set the `host`, `port` and `network_id`
        // options below to some value.
        //
        development: {
            host: "127.0.0.1", // Localhost (default: none)
            port: 7545, // Standard Ethereum port (default: none)
            network_id: "5777", // Any network (default: none)
        },

        // Another network with more advanced options...
        // advanced: {
        // port: 8777,             // Custom port
        // network_id: 1342,       // Custom network
        // gas: 8500000,           // Gas sent with each transaction (default: ~6700000)
        // gasPrice: 20000000000,  // 20 gwei (in wei) (default: 100 gwei)
        // from: <address>,        // Account to send txs from (default: accounts[0])
        // websockets: true        // Enable EventEmitter interface for web3 (default: false)
        // },

        // Useful for deploying to a public network.
        // NB: It's important to wrap the provider as a function.
        ropsten: {
            provider: () => new HDWalletProvider(MNEMONIC, INFURA_URI),
            network_id: 3, // Ropsten's id
            gas: 5500000, // Ropsten has a lower block limit than mainnet
            confirmations: 2, // # of confs to wait between deployments. (default: 0)
            timeoutBlocks: 800, // # of blocks before a deployment times out  (minimum/default: 50)
            skipDryRun: true // Skip dry run before migrations? (default: false for public nets )
        }

        // Useful for private networks
        // private: {
        // provider: () => new HDWalletProvider(mnemonic, `https://network.io`),
        // network_id: 2111,   // This network is yours, in the cloud.
        // production: true    // Treats this network as if it was a public net. (default: false)
        // }
    },

    // Set default mocha options here, use special reporters etc.
    mocha: {
        // timeout: 100000
    },

    // Configure your compilers
    // from https://ethereum.stackexchange.com/questions/78597/solidity-0-6-0-addressthis-balance-throws-error-invalid-opcode
    compilers: {
        solc: {
            version: "0.5.16",
            settings: {
                optimizer: {
                    enabled: true
                },
                evmVersion: "petersburg" // required to avoid error with address(this).balance
            }
        }
    }
    // compilers: {
    // solc: {
    // version: "0.5.1",    // Fetch exact version from solc-bin (default: truffle's version)
    // docker: true,        // Use "0.5.1" you've installed locally with docker (default: false)
    // settings: {          // See the solidity docs for advice about optimization and evmVersion
    //  optimizer: {
    //    enabled: false,
    //    runs: 200
    //  },
    //  evmVersion: "byzantium"
    // }
    // }
    // }
}
'''
'''--- tsconfig.app.json ---
{
  "extends": "./tsconfig.json",
  "compilerOptions": {
    "outDir": "./out-tsc/app",
    "types": []
  },
  "files": [
    "src/main.ts",
    "src/polyfills.ts"
  ],
  "include": [
    "src/**/*.d.ts"
  ]
}

'''
'''--- tsconfig.json ---
{
  "compileOnSave": false,
  "compilerOptions": {
    "baseUrl": "./",
    "outDir": "./dist/out-tsc",
    "sourceMap": true,
    "declaration": false,
    "downlevelIteration": true,
    "experimentalDecorators": true,
    "module": "esnext",
    "moduleResolution": "node",
    "importHelpers": true,
    "target": "es2015",
    "lib": [
      "es2018",
      "dom"
    ],
    "resolveJsonModule": true, // required to read JSON file
    "esModuleInterop": true // required to read JSON file
  },
  "angularCompilerOptions": {
    "fullTemplateTypeCheck": true,
    "strictInjectionParameters": true
  }
}

'''
'''--- tsconfig.spec.json ---
{
  "extends": "./tsconfig.json",
  "compilerOptions": {
    "outDir": "./out-tsc/spec",
    "types": [
      "jasmine",
      "node"
    ]
  },
  "files": [
    "src/test.ts",
    "src/polyfills.ts"
  ],
  "include": [
    "src/**/*.spec.ts",
    "src/**/*.d.ts"
  ]
}

'''
'''--- tslint.json ---
{
  "extends": "tslint:recommended",
  "rules": {
    "array-type": false,
    "arrow-parens": false,
    "deprecation": {
      "severity": "warning"
    },
    "component-class-suffix": true,
    "contextual-lifecycle": true,
    "directive-class-suffix": true,
    "directive-selector": [
      true,
      "attribute",
      "app",
      "camelCase"
    ],
    "component-selector": [
      true,
      "element",
      "app",
      "kebab-case"
    ],
    "import-blacklist": [
      true,
      "rxjs/Rx"
    ],
    "interface-name": false,
    "max-classes-per-file": false,
    "max-line-length": [
      true,
      140
    ],
    "member-access": false,
    "member-ordering": [
      true,
      {
        "order": [
          "static-field",
          "instance-field",
          "static-method",
          "instance-method"
        ]
      }
    ],
    "no-consecutive-blank-lines": false,
    "no-console": [
      true,
      "debug",
      "info",
      "time",
      "timeEnd",
      "trace"
    ],
    "no-empty": false,
    "no-inferrable-types": [
      true,
      "ignore-params"
    ],
    "no-non-null-assertion": true,
    "no-redundant-jsdoc": true,
    "no-switch-case-fall-through": true,
    "no-var-requires": false,
    "object-literal-key-quotes": [
      true,
      "as-needed"
    ],
    "object-literal-sort-keys": false,
    "ordered-imports": false,
    "quotemark": [
      true,
      "single"
    ],
    "trailing-comma": false,
    "no-conflicting-lifecycle": true,
    "no-host-metadata-property": true,
    "no-input-rename": true,
    "no-inputs-metadata-property": true,
    "no-output-native": true,
    "no-output-on-prefix": true,
    "no-output-rename": true,
    "no-outputs-metadata-property": true,
    "template-banana-in-box": true,
    "template-no-negated-async": true,
    "use-lifecycle-interface": true,
    "use-pipe-transform-interface": true
  },
  "rulesDirectory": [
    "codelyzer"
  ]
}
'''
'''--- webpack.config.js ---
module.exports = {
    node: {
        fs: 'empty'
    }
};
'''